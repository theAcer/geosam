<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AndroidEdition</name>
    </assembly>
    <members>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.ControlPointSelectedEditInteractiveOverlayEventArgs">
            <summary>
                Provides data for the <see cref="E:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.ControlPointSelected">ControlPointSelected</see>
                event.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.ControlPointSelectedEditInteractiveOverlayEventArgs.#ctor">
            <summary>
            This is the default constructor of this parameter.
            </summary>
            <remarks>If you use this constructor, you have to set the properties manually before use.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.ControlPointSelectedEditInteractiveOverlayEventArgs.#ctor(ThinkGeo.MapSuite.Core.Feature)">
            <summary>
            This is the commonly used constructor.
            </summary>
            <param name="selectedFeature">This parameter specified the feature selected.</param>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ControlPointSelectedEditInteractiveOverlayEventArgs.SelectedFeature">
            <summary>
            This property gets or sets the selected feature.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.ControlPointSelectingEditInteractiveOverlayEventArgs">
            <summary>
                Provides data for the <see cref="E:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.ControlPointSelecting">ControlPointSelecting</see>
                event.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.ControlPointSelectingEditInteractiveOverlayEventArgs.#ctor">
            <summary>
            This is the default constructor of this parameter.
            </summary>
            <remarks>If you use this constructor, you have to set the properties manually before use.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.ControlPointSelectingEditInteractiveOverlayEventArgs.#ctor(System.Boolean,ThinkGeo.MapSuite.Core.PointShape)">
            <summary>
            This is the commonly used constructor.
            </summary>
            <param name="cancel">This parameter specified the cancel property.</param>
            <param name="targetPointShape">This parameter specified the target control point to be selected.</param>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ControlPointSelectingEditInteractiveOverlayEventArgs.TargetPointShape">
            <summary>
            This property gets or sets the target control point to be selected.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ControlPointSelectingEditInteractiveOverlayEventArgs.Cancel">
            <summary>
            This property gets or sets the action to be canceled or not.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.ControlPointType">
            <summary>
            This enumeration specified the control point type when editing a shape.
            The deafault value is None
            </summary>
        </member>
        <member name="F:ThinkGeo.MapSuite.AndroidEdition.ControlPointType.None">
            <summary>
            Default value of this enumeration.
            </summary>
        </member>
        <member name="F:ThinkGeo.MapSuite.AndroidEdition.ControlPointType.Drag">
            <summary>
            This enumeration item means that the control point is for Drag.
            </summary>
        </member>
        <member name="F:ThinkGeo.MapSuite.AndroidEdition.ControlPointType.Rotate">
            <summary>
            This enumeration item means that the control point is for Rotate.
            </summary>
        </member>
        <member name="F:ThinkGeo.MapSuite.AndroidEdition.ControlPointType.Resize">
            <summary>
            This enumeration item means that the control point is for Resize.
            </summary>
        </member>
        <member name="F:ThinkGeo.MapSuite.AndroidEdition.ControlPointType.Vertex">
            <summary>
            This enumeration item means that the control point is for change the vertex postion.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.FeatureDraggedEditInteractiveOverlayEventArgs">
            <summary>
                Provides data for the <see cref="E:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.FeatureDragged">FeatureDragged</see>
                event.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.FeatureDraggedEditInteractiveOverlayEventArgs.#ctor">
            <summary>
            This is the default constructor of this parameter.
            </summary>
            <remarks>If you use this constructor, you have to set the properties manually before use.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.FeatureDraggedEditInteractiveOverlayEventArgs.#ctor(ThinkGeo.MapSuite.Core.Feature)">
            <summary>
            This is the commonly used constructor.
            </summary>
            <param name="draggedFeature">This parameter specified the feature dragged.</param>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.FeatureDraggedEditInteractiveOverlayEventArgs.DraggedFeature">
            <summary>
            This property gets or sets the Feature dragged.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.FeatureDraggingEditInteractiveOverlayEventArgs">
            <summary>
                Provides data for the <see cref="E:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.FeatureDragging">FeatureDragging.</see>
                event.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.FeatureDraggingEditInteractiveOverlayEventArgs.#ctor">
            <summary>
            This is the default constructor of this parameter.
            </summary>
            <remarks>If you use this constructor, you have to set the properties manually before use.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.FeatureDraggingEditInteractiveOverlayEventArgs.#ctor(ThinkGeo.MapSuite.Core.Feature,System.Boolean,ThinkGeo.MapSuite.Core.PointShape,ThinkGeo.MapSuite.Core.PointShape)">
            <summary>
            This is the commonly used constructor.
            </summary>
            <param name="cancel">This parameter specified the cancel property.</param>
            <param name="draggingFeature">This parameter specified the target feature to be dragged.</param>
            <param name="sourceControlPoint">This parameter specified the source control point to be dragged.</param>
            <param name="targetControlPoint">This parameter specified the target control point to be dragged.</param>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.FeatureDraggingEditInteractiveOverlayEventArgs.DraggingFeature">
            <summary>
            This property gets or sets the Feature to be used to dragged.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.FeatureDraggingEditInteractiveOverlayEventArgs.SourceControlPoint">
            <summary>
            This property gets or sets the source control point to drag.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.FeatureDraggingEditInteractiveOverlayEventArgs.TargetControlPoint">
            <summary>
            This property gets or sets the target control point to drag.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.FeatureDraggingEditInteractiveOverlayEventArgs.Cancel">
            <summary>
            This property gets or sets the action to be canceled or not.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.FeatureResizedEditInteractiveOverlayEventArgs">
            <summary>
                Provides data for the <see cref="E:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.FeatureResized">FeatureResized.</see>
                event.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.FeatureResizedEditInteractiveOverlayEventArgs.#ctor">
            <summary>
            This is the default constructor of this parameter.
            </summary>
            <remarks>If you use this constructor, you have to set the properties manually before use.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.FeatureResizedEditInteractiveOverlayEventArgs.#ctor(ThinkGeo.MapSuite.Core.Feature)">
            <summary>
            This is the commonly used constructor.
            </summary>
            <param name="resizedFeature">This parameter specified the feature resized.</param>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.FeatureResizedEditInteractiveOverlayEventArgs.ResizedFeature">
            <summary>
            This property gets or sets the Feature resized.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.FeatureResizingEditInteractiveOverlayEventArgs">
            <summary>
                Provides data for the <see cref="E:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.FeatureResizing">FeatureResizing.</see>
                event.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.FeatureResizingEditInteractiveOverlayEventArgs.#ctor">
            <summary>
            This is the default constructor of this parameter.
            </summary>
            <remarks>If you use this constructor, you have to set the properties manually before use.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.FeatureResizingEditInteractiveOverlayEventArgs.#ctor(ThinkGeo.MapSuite.Core.Feature,System.Boolean,ThinkGeo.MapSuite.Core.PointShape,ThinkGeo.MapSuite.Core.PointShape)">
            <summary>
            This is the commonly used constructor.
            </summary>
            <param name="cancel">This parameter specified the cancel property.</param>
            <param name="resizingFeature">This parameter specified the target feature to be resized.</param>
            <param name="sourceControlPoint">This parameter specified the source control point to be resized.</param>
            <param name="targetControlPoint">This parameter specified the target control point to be resized.</param>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.FeatureResizingEditInteractiveOverlayEventArgs.ResizingFeature">
            <summary>
            This property gets or sets the Feature to be used to resized.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.FeatureResizingEditInteractiveOverlayEventArgs.SourceControlPoint">
            <summary>
            This property gets or sets the source control point to resize.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.FeatureResizingEditInteractiveOverlayEventArgs.TargetControlPoint">
            <summary>
            This property gets or sets the target control point to resize.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.FeatureResizingEditInteractiveOverlayEventArgs.Cancel">
            <summary>
            This property gets or sets the action to be canceled or not.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.FeatureRotatedEditInteractiveOverlayEventArgs">
            <summary>
                Provides data for the <see cref="E:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.FeatureRotated">FeatureRotated.</see>
                event.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.FeatureRotatedEditInteractiveOverlayEventArgs.#ctor">
            <summary>
            This is the default constructor of this parameter.
            </summary>
            <remarks>If you use this constructor, you have to set the properties manually before use.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.FeatureRotatedEditInteractiveOverlayEventArgs.#ctor(ThinkGeo.MapSuite.Core.Feature)">
            <summary>
            This is the commonly used constructor.
            </summary>
            <param name="rotatedFeature">This parameter specified the feature rotated.</param>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.FeatureRotatedEditInteractiveOverlayEventArgs.RotatedFeature">
            <summary>
            This property gets or sets the Feature rotated.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.FeatureRotatingEditInteractiveOverlayEventArgs">
            <summary>
                Provides data for the <see cref="E:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.FeatureRotating">FeatureRotating.</see>
                event.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.FeatureRotatingEditInteractiveOverlayEventArgs.#ctor">
            <summary>
            This is the default constructor of this parameter.
            </summary>
            <remarks>If you use this constructor, you have to set the properties manually before use.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.FeatureRotatingEditInteractiveOverlayEventArgs.#ctor(ThinkGeo.MapSuite.Core.Feature,System.Boolean,ThinkGeo.MapSuite.Core.PointShape,ThinkGeo.MapSuite.Core.PointShape)">
            <summary>
            This is the commonly used constructor.
            </summary>
            <param name="cancel">This parameter specified the cancel property.</param>
            <param name="rotatingFeature">This parameter specified the target feature to be rotated.</param>
            <param name="sourceControlPoint">This parameter specified the source control point to be roated.</param>
            <param name="targetControlPoint">This parameter specified the target control point to be roated.</param>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.FeatureRotatingEditInteractiveOverlayEventArgs.RotatingFeature">
            <summary>
            This property gets or sets the Feature to be used to roated.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.FeatureRotatingEditInteractiveOverlayEventArgs.SourceControlPoint">
            <summary>
            This property gets or sets the source control point to roate.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.FeatureRotatingEditInteractiveOverlayEventArgs.TargetControlPoint">
            <summary>
            This property gets or sets the target control point to roate.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.FeatureRotatingEditInteractiveOverlayEventArgs.Cancel">
            <summary>
            This property gets or sets the action to be canceled or not.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.VertexAddedEditInteractiveOverlayEventArgs">
            <summary>
                Provides data for the <see cref="E:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.VertexAdded">VertexAdded.</see>
                event.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.VertexAddedEditInteractiveOverlayEventArgs.#ctor">
            <summary>
            This is the default constructor of this parameter.
            </summary>
            <remarks>If you use this constructor, you have to set the properties manually before use.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.VertexAddedEditInteractiveOverlayEventArgs.#ctor(ThinkGeo.MapSuite.Core.Feature,ThinkGeo.MapSuite.Core.Vertex)">
            <summary>
            This is the commonly used constructor.
            </summary>
            <param name="affectedVertexFeature">This parameter specified the affectedVertex feature property.</param>
            <param name="addedVertex">This parameter specified the target vertex added.</param>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.VertexAddedEditInteractiveOverlayEventArgs.AffectedVertexFeature">
            <summary>
            This property gets or sets the Feature to be used to remove vertex.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.VertexAddedEditInteractiveOverlayEventArgs.AddedVertex">
            <summary>
            This property gets or sets the vertex added.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.VertexAddingEditInteractiveOverlayEventArgs">
            <summary>
                Provides data for the <see cref="E:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.VertexAdding">VertexAdding.</see>
                event.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.VertexAddingEditInteractiveOverlayEventArgs.#ctor">
            <summary>
            This is the default constructor of this parameter.
            </summary>
            <remarks>If you use this constructor, you have to set the properties manually before use.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.VertexAddingEditInteractiveOverlayEventArgs.#ctor(System.Boolean,ThinkGeo.MapSuite.Core.Feature,ThinkGeo.MapSuite.Core.Vertex)">
            <summary>
            This is the commonly used constructor.
            </summary>
            <param name="cancel">This parameter specified the cancel property.</param>
            <param name="affectedVertexFeature">This parameter specified the affectedVertex feature property.</param>
            <param name="addingVertex">This parameter specified the target vertex to be added.</param>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.VertexAddingEditInteractiveOverlayEventArgs.AffectedVertexFeature">
            <summary>
            This property gets or sets the Feature to be used to move vertex.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.VertexAddingEditInteractiveOverlayEventArgs.AddingVertex">
            <summary>
            This property gets or sets the vertex to be added.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.VertexAddingEditInteractiveOverlayEventArgs.Cancel">
            <summary>
            This property gets or sets the action to be canceled or not.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.VertexMovedEditInteractiveOverlayEventArgs">
            <summary>
                Provides data for the <see cref="E:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.VertexMoved">VertexMoved.</see>
                event.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.VertexMovedEditInteractiveOverlayEventArgs.#ctor">
            <summary>
            This is the default constructor of this parameter.
            </summary>
            <remarks>If you use this constructor, you have to set the properties manually before use.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.VertexMovedEditInteractiveOverlayEventArgs.#ctor(ThinkGeo.MapSuite.Core.Feature,ThinkGeo.MapSuite.Core.Vertex)">
            <summary>
            This is the commonly used constructor.
            </summary>
            <param name="affectedVertexFeature">This parameter specified the affectedVertex feature property.</param>
            <param name="movedVertex">This parameter specified the target vertex moved.</param>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.VertexMovedEditInteractiveOverlayEventArgs.AffectedVertexFeature">
            <summary>
            This property gets or sets the Feature to be used to remove vertex.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.VertexMovedEditInteractiveOverlayEventArgs.MovedVertex">
            <summary>
            This property gets or sets the vertex moved.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.VertexMovingEditInteractiveOverlayEventArgs">
            <summary>
                Provides data for the <see cref="E:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.VertexMoving">VertexMoving.</see>
                event.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.VertexMovingEditInteractiveOverlayEventArgs.#ctor">
            <summary>
            This is the default constructor of this parameter.
            </summary>
            <remarks>If you use this constructor, you have to set the properties manually before use.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.VertexMovingEditInteractiveOverlayEventArgs.#ctor(System.Boolean,ThinkGeo.MapSuite.Core.Feature,ThinkGeo.MapSuite.Core.Vertex)">
            <summary>
            This is the commonly used constructor.
            </summary>
            <param name="cancel">This parameter specified the cancel property.</param>
            <param name="affectedVertexFeature">This parameter specified the affectedVertex feature property.</param>
            <param name="movingVertex">This parameter specified the target vertex to be moved.</param>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.VertexMovingEditInteractiveOverlayEventArgs.AffectedVertexFeature">
            <summary>
            This property gets or sets the Feature to be used to move vertex.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.VertexMovingEditInteractiveOverlayEventArgs.MovingVertex">
            <summary>
            This property gets or sets the vertex to be moved.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.VertexMovingEditInteractiveOverlayEventArgs.Cancel">
            <summary>
            This property gets or sets the action to be canceled or not.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.VertexRemovedEditInteractiveOverlayEventArgs">
            <summary>
                Provides data for the <see cref="E:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.VertexRemoved">VertexRemoved.</see>
                event.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.VertexRemovedEditInteractiveOverlayEventArgs.#ctor">
            <summary>
            This is the default constructor of this parameter.
            </summary>
            <remarks>If you use this constructor, you have to set the properties manually before use.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.VertexRemovedEditInteractiveOverlayEventArgs.#ctor(ThinkGeo.MapSuite.Core.Feature,ThinkGeo.MapSuite.Core.Vertex)">
            <summary>
            This is the commonly used constructor.
            </summary>
            <param name="affectedVertexFeature">This parameter specified the affectedVertex feature property.</param>
            <param name="removedVertex">This parameter specified the target vertex removed.</param>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.VertexRemovedEditInteractiveOverlayEventArgs.AffectedVertexFeature">
            <summary>
            This property gets or sets the Feature to be used to remove vertex.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.VertexRemovedEditInteractiveOverlayEventArgs.RemovedVertex">
            <summary>
            This property gets or sets the vertex removed.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.VertexRemovingEditInteractiveOverlayEventArgs">
            <summary>
                Provides data for the <see cref="E:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.VertexRemoving">VertexRemoving.</see>
                event.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.VertexRemovingEditInteractiveOverlayEventArgs.#ctor">
            <summary>
            This is the default constructor of this parameter.
            </summary>
            <remarks>If you use this constructor, you have to set the properties manually before use.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.VertexRemovingEditInteractiveOverlayEventArgs.#ctor(System.Boolean,ThinkGeo.MapSuite.Core.Feature,ThinkGeo.MapSuite.Core.Vertex)">
            <summary>
            This is the commonly used constructor.
            </summary>
            <param name="cancel">This parameter specified the cancel property.</param>
            <param name="affectedVertexFeature">This parameter specified the affectedVertex feature property.</param>
            <param name="removingVertex">This parameter specified the target vertex to be removed.</param>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.VertexRemovingEditInteractiveOverlayEventArgs.AffectedVertexFeature">
            <summary>
            This property gets or sets the Feature to be used to remove vertex.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.VertexRemovingEditInteractiveOverlayEventArgs.RemovingVertex">
            <summary>
            This property gets or sets the vertex to be removed.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.VertexRemovingEditInteractiveOverlayEventArgs.Cancel">
            <summary>
            This property gets or sets the action to be canceled or not.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.SqliteBitmapTileCache">
            <summary>
            This class represents the base sqlite bitmap tile cache.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SqliteBitmapTileCache.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ThinkGeo.MapSuite.AndroidEdition.SqliteBitmapTileCache"/> class.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SqliteBitmapTileCache.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ThinkGeo.MapSuite.AndroidEdition.SqliteBitmapTileCache"/> class.
            </summary>
            <param name="databasePathFilename">The database path filename.</param>
            <param name="cacheId">The cache identifier.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SqliteBitmapTileCache.GetTileCore(System.Int64,System.Int64)">
            <summary>
            This abstract method returns the BitmapTile corresponding to passed in row and column.
            Each concrete TileCache need to implement this logic to get tile from a row and column.
            </summary>
            <param name="row">The target row for the tile to fetch.</param>
            <param name="column">The target column for the tile to fetch.</param>
            <returns>
            Returns the BitmapTile corresponding to the passed in row and column.
            </returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SqliteBitmapTileCache.ClearCacheCore">
            <summary>
            This abstract method will clear all the tiles in the tileCache, for each
            sub TileCache class must implement this method.
            </summary>
            <remarks>
            This method will not take effect when the ReadOnly is set to true.
            </remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SqliteBitmapTileCache.SaveTileCore(ThinkGeo.MapSuite.Core.Tile)">
            <summary>
            This abstract method will save the target tile passed in, for each
            sub TileCache class must implement this method.
            </summary>
            <param name="tile">The target tile to be saved.</param>
            <remarks>
            This method will not take effect when the ReadOnly is set to true.
            </remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SqliteBitmapTileCache.DeleteTileCore(ThinkGeo.MapSuite.Core.Tile)">
            <summary>
            This abstract method will delete the target tile passed in, for each
            sub TileCache class must implement this method.
            </summary>
            <param name="tile">The target tile to be deleted.</param>
            <remarks>
            This method will not take effect when the ReadOnly is set to true.
            </remarks>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.SqliteBitmapTileCache.DatabasePathFilename">
            <summary>
            Gets or sets the database path filename.
            </summary>
            <value>
            The database path filename.
            </value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.SqliteBitmapTileCache.CacheId">
            <summary>
            Gets or sets the id of the TileCache.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.AndroidGeoCanvas">
            <summary>
            This class represents a canvas that is used to draw geographic shapes. It is
            intended to be inherited for the implementation of different drawing systems.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.AndroidGeoCanvas.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ThinkGeo.MapSuite.AndroidEdition.AndroidGeoCanvas"/> class.
            </summary>
            <remarks>None</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.AndroidGeoCanvas.BeginDrawingCore(System.Object,ThinkGeo.MapSuite.Core.RectangleShape,ThinkGeo.MapSuite.Core.GeographyUnit)">
            <summary>
            This method begins the act of drawing on the GeoCanvas.
            </summary>
            <param name="nativeImage">This parameter represents the image you want the GeoCanvas to draw on.</param>
            <param name="worldExtent">This parameter is the world extent of the canvasImage.</param>
            <param name="drawingMapUnit">This parameter is the map unit of the canvasImage.</param>
            <remarks>This is the first method that needs to be called before any drawing takes place.
            Calling this method will set the IsDrawing property to true. When you finish drawing,
            you must call EndDrawing to commit the changes to the image.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.AndroidGeoCanvas.ClearCore(ThinkGeo.MapSuite.Core.GeoBrush)">
            <summary>
            This method clears the current GeoCanvas using the color specified.
            </summary>
            <param name="fillBrush">This parameter specifies the the brush that will be used to clear the GeoCanvas.</param>
            <remarks><para>Use this method to clear the GeoCanvas.</para>
            <para>This method is designed to be overridden by the deriving class.</para></remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.AndroidGeoCanvas.DrawAreaCore(System.Collections.Generic.IEnumerable{ThinkGeo.MapSuite.Core.ScreenPointF[]},ThinkGeo.MapSuite.Core.GeoPen,ThinkGeo.MapSuite.Core.GeoBrush,ThinkGeo.MapSuite.Core.DrawingLevel,System.Single,System.Single,ThinkGeo.MapSuite.Core.PenBrushDrawingOrder)">
            <summary>
            This method draws an area on the GeoCanvas.
            </summary>
            <param name="screenPoints">This parameter is the AreaShape in well-known binary format.</param>
            <param name="outlinePen">This parameter describes the outline GeoPen that will be used to draw the
            AreaShape.</param>
            <param name="fillBrush">This parameter describes the fill GeoBrush that will be used to draw the
            AreaShape.</param>
            <param name="drawingLevel">This parameter determines the DrawingLevel that the GeoPen will draw on.</param>
            <param name="xOffset">This parameter determines the X offset for the feature to be drawn.</param>
            <param name="yOffset">This parameter determines the Y offset for the feature to be drawn.</param>
            <param name="penBrushDrawingOrder">This parameter determines the PenBrushDrawingOrder used when drawing the area type feature.</param>
            <returns><para>This method is used to draw on the GeoCanvas. It provides you with a number of
            overloads that allow you to control how things are drawn. Specify the GeoBrush to
            fill in an area. Specify the GeoPen to outline an area using that
            GeoPen. You can also call an overload that will allow you to specify both a GeoPen
            and a GeoBrush.</para>
            <para>The DrawingLevel allows you to specify the level you will draw on when you are
            drawing multiple areas. This is very useful when you want to draw a drop shadow, for
            example. In that case, you could draw the black backdrop on the lowest level with an offset, then
            draw the normal shape on a higher level without an offset.</para></returns>
            <remarks><para>This method is used to draw on the GeoCanvas. It provides you with a number of
            overloads that allow you to control how things are drawn. Specify the GeoBrush to
            fill in an area. Specify the GeoPen to outline an area using that
            GeoPen. You can also call an overload that will allow you to specify both a GeoPen
            and a GeoBrush.</para>
            <para>The DrawingLevel allows you to specify the level you will draw on when you are
            drawing multiple areas. This is very useful when you want to draw a drop shadow, for
            example. In that case, you could draw the black backdrop on the lowest level with an offset, then
            draw the normal shape on a higher level without an offset.</para></remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.AndroidGeoCanvas.DrawLineCore(System.Collections.Generic.IEnumerable{ThinkGeo.MapSuite.Core.ScreenPointF},ThinkGeo.MapSuite.Core.GeoPen,ThinkGeo.MapSuite.Core.DrawingLevel,System.Single,System.Single)">
            <summary>
            Draws the LineShape on the GeoCanvas.
            </summary>
            <param name="screenPoints">This parameter is the LineShape in well-known binary format.</param>
            <param name="linePen">This parameter describes the GeoPen that will be used to draw the
            LineShape.</param>
            <param name="drawingLevel">This parameter determines the DrawingLevel that the GeoPen will draw on.</param>
            <param name="xOffset">This parameter determines the X offset for the feature to be drawn.</param>
            <param name="yOffset">This parameter determines the Y offset for the feature to be drawn.</param>
            <remarks><para>This method is used to draw a line on the GeoCanvas using the specified GeoPen.</para>
            <para>The DrawingLevel allows you to specify the level you will draw on when
            drawing multiple lines. This is very useful when you want to draw a road, for example. You can
            draw the black background on the lowest level, then draw a slightly thinner white line on a higher
            level. This will result in a great effect for a road.</para></remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.AndroidGeoCanvas.DrawEllipseCore(ThinkGeo.MapSuite.Core.ScreenPointF,System.Single,System.Single,ThinkGeo.MapSuite.Core.GeoPen,ThinkGeo.MapSuite.Core.GeoBrush,ThinkGeo.MapSuite.Core.DrawingLevel,System.Single,System.Single,ThinkGeo.MapSuite.Core.PenBrushDrawingOrder)">
            <summary>
            Draws a point on the GeoCanvas.
            </summary>
            <param name="screenPoint">This parameter is the center point in well-known binary format.</param>
            <param name="width">This parameter describes the width of the ellipse to be drawn.</param>
            <param name="height">This parameter describes the height of the ellipse to be drawn.</param>
            <param name="outlinePen">This parameter describes the outline GeoPen that will be used to draw the
            point.</param>
            <param name="fillBrush">This parameter describes the fill GeoBrush that will be used to draw the
            point.</param>
            <param name="drawingLevel">This parameter determines the DrawingLevel that the GeoPen or GeoBrush will draw
            on.</param>
            <param name="xOffset">This parameter determines the X offset for the screenPoint to be drawn.</param>
            <param name="yOffset">This parameter determines the Y offset for the screenPoint to be drawn.</param>
            <param name="penBrushDrawingOrder">This parameter determines the PenBrushDrawingOrder used when drawing the ellipse.</param>
            <remarks><para>This method is used to draw a point on the GeoCanvas. It provides you with a number of
            overloads that allow you to control how it is drawn. Specify the GeoBrush to fill in the
            area of the point. Specify the GeoPen to outline the point using that GeoPen.
            You can also call a overload that will allow you to specify
            both a GeoPen and a GeoBrush.</para>
            <para>The DrawingLevel allows you to specify the level you will draw on when
            drawing many points.</para></remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.AndroidGeoCanvas.DrawScreenImageWithoutScalingCore(ThinkGeo.MapSuite.Core.GeoImage,System.Single,System.Single,ThinkGeo.MapSuite.Core.DrawingLevel,System.Single,System.Single,System.Single)">
            <summary>
            Draws an unscaled image on the GeoCanvas.
            </summary>
            <param name="image">The image you want to draw unscaled.</param>
            <param name="centerXInScreen">The X coordinate of the center point (in screen coordinates) of where you want to draw the image.</param>
            <param name="centerYInScreen">The Y coordinate of the center point (in screen coordinates) of where you want to draw the image.</param>
            <param name="drawingLevel">This parameter determines the DrawingLevel the image will draw on.</param>
            <param name="xOffset">This parameter determines the X offset for the image to be drawn.</param>
            <param name="yOffset">This parameter determines the Y offset for the image to be drawn.</param>
            <param name="rotateAngle">This parameter determines the rotation angle for the image to be drawn.</param>
            <remarks>Drawing an image unscaled is faster than using the API that scales it.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.AndroidGeoCanvas.DrawScreenImageCore(ThinkGeo.MapSuite.Core.GeoImage,System.Single,System.Single,System.Single,System.Single,ThinkGeo.MapSuite.Core.DrawingLevel,System.Single,System.Single,System.Single)">
            <summary>
            Draws a scaled image on the GeoCanvas.
            </summary>
            <param name="image">The image you want to draw.</param>
            <param name="centerXInScreen">The X coordinate of the center point (in screen coordinates) of where you want to draw the image.</param>
            <param name="centerYInScreen">The Y coordinate of the center point (in screen coordinates) of where you want to draw the image.</param>
            <param name="widthInScreen">The width you want to scale the image to. This is the width of the image that will be
            drawn.</param>
            <param name="heightInScreen">The height you want to scale the image to. This is the height of the image that will be
            drawn.</param>
            <param name="drawingLevel">This parameter determines the DrawingLevel the image will draw on.</param>
            <param name="xOffset">This parameter determines the X offset for the image to be drawn.</param>
            <param name="yOffset">This parameter determines the Y offset for the image to be drawn.</param>
            <param name="rotateAngle">This parameter determines the rotation angle for the image to be drawn.</param>
            <remarks>Drawing an image scaled is slower than using the API that draws it
            unscaled.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.AndroidGeoCanvas.DrawTextCore(System.String,ThinkGeo.MapSuite.Core.GeoFont,ThinkGeo.MapSuite.Core.GeoBrush,ThinkGeo.MapSuite.Core.GeoPen,System.Collections.Generic.IEnumerable{ThinkGeo.MapSuite.Core.ScreenPointF},ThinkGeo.MapSuite.Core.DrawingLevel,System.Single,System.Single,System.Single)">
            <summary>
            This method allows you to draw text at the specified location, using the
            specified brush and font parameters.
            </summary>
            <param name="text">This parameter specifies the text you wish to draw.</param>
            <param name="font">This parameter represents the font you wish to use to draw the text.</param>
            <param name="fillBrush">This parameter specifies the kind of fill you want to use to draw the text.</param>
            <param name="haloPen">This parameter specifies the HaloPen that will be used to draw the text, when the HaloPen effect is needed.</param>
            <param name="textPathInScreen">This parameter specifies the path on which to draw the text.</param>
            <param name="drawingLevel">This parameter specifies the drawing level you wish to draw the text on. Higher
            levels overwrite lower levels.</param>
            <param name="xOffset">This parameter determines the X offset for the text to be drawn.</param>
            <param name="yOffset">This parameter determines the Y offset for the text to be drawn.</param>
            <param name="rotateAngle">This parameter determines the rotation angle for the text to be drawn.</param>
            <remarks><para>This method is used to draw text on the GeoCanvas.</para>
            <para>The DrawingLevel allows you to specify the level you will draw on when
            drawing multiple text items. This is very useful when you want to draw a drop shadow,
            for example. You can draw the black backdrop on the lowest level with an offset, then
            draw the normal text on a higher level without an offset.</para></remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.AndroidGeoCanvas.MeasureTextCore(System.String,ThinkGeo.MapSuite.Core.GeoFont)">
            <summary>
            This method returns the rectangle that contains the specified text, when that text is drawn
            with the specified font.
            </summary>
            <param name="text">This parameter represents the text you want to measure.</param>
            <param name="font">This parameter represents the font of the text you want to measure.</param>
            <returns>This method returns the rectangle that contains the specified text, when that text is drawn
            with the specified font.</returns>
            <remarks>This method is typically used for labeling, to determine whether labels overlap.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.AndroidGeoCanvas.ToNativeImageCore(ThinkGeo.MapSuite.Core.GeoImage)">
            <summary>
            This method converts a GeoImage to a commonly-used object. In GdiPlus, this object is often a NativeImage.
            </summary>
            <param name="image">The target geoImage to convert.</param>
            <returns>The returning object containing the same information as the passed-in geoImage.</returns>
            <remarks>This method is a BaseClass API and will be used in its sub-concrete classes.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.AndroidGeoCanvas.ToGeoImageCore(System.Object)">
            <summary>
            This method converts an oboject to a GeoImage. In GdiPlus, this object is often a NativeImage.
            </summary>
            <param name="nativeImage">The target object to be converted.</param>
            <returns>The returning GeoImage containing the same information as the passed-in nativeImage.</returns>
            <remarks>This method is a BaseClass API and will be implemented and used in its sub-concrete classes.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.AndroidGeoCanvas.GetCanvasWidthCore(System.Object)">
            <summary>
            This method gets the canvas width of the passed-in native image object.
            </summary>
            <param name="nativeImage">The native image that will be used to get the image width.</param>
            <returns>The returning canvas width.</returns>
            <remarks>This method is a BaseClass API and will be implemented and used in its sub-concrete classes.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.AndroidGeoCanvas.GetCanvasHeightCore(System.Object)">
            <summary>
            This method gets the canvas height of the passed-in native image object.
            </summary>
            <param name="nativeImage">The native image will be used to get the image height.</param>
            <returns>The returning canvas height.</returns>
            <remarks>This method is a BaseClass API and will be implemented and used in its sub-concrete classes.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.AndroidGeoCanvas.GetStreamFromGeoImage(ThinkGeo.MapSuite.Core.GeoImage)">
            <summary>
            Get the stream from the passed-in GeoImage.  This API is an abstract API and will be implemented in each concrete sub-class.
            </summary>
            <param name="image">The parameter specifies the image to get the stream from.</param>
            <returns>The returning stream retrieved from the passed-in image.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.AndroidGeoCanvas.FlushCore">
            <summary>
            This method flush drawing and commits the drawing on the GeoCanvas.
            </summary>
            <remarks>This method should be called when you are finished drawing. It will commit the
            image changes to the image you passed in on BeginDrawing. It will also set
            IsDrawing to false. After you call this method it will put the GeoCanvas into an
            invalid state, so if you then call any drawing methods it will raise an
            exception.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.AndroidGeoCanvas.EndDrawingCore">
            <summary>
            This method ends drawing and commits the drawing on the GeoCanvas.
            </summary>
            <remarks>This methods should be called when you are finished drawing. It will commit the
            image changes to the image you passed in on BeginDrawing. It will also set
            IsDrawing to false. After you call this method it will put the GeoCanvas into an
            invalid state, so if you then call any drawing methods it will raise an
            exception.</remarks>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.AndroidGeoCanvas.IsDrawingLevelEnabled">
            <summary>
            Gets or sets a value indicating whether this instance is drawing level enabled.
            </summary>
            <value><c>true</c> if this instance is drawing level enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.MapTool">
            <summary>
            This class represents the base class of map controls.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapTool.#ctor(Android.Content.Context)">
            <summary>
            Initializes a new instance of the <see cref="T:ThinkGeo.MapSuite.AndroidEdition.MapTool"/> class.
            </summary>
            <param name="context">Interface to global information about an application environment.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapTool.Initialize(ThinkGeo.MapSuite.AndroidEdition.MapView)">
            <summary>
            This method initializes map tool.
            </summary>
            <param name="currentMap">The current map.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapTool.InitializeCore(ThinkGeo.MapSuite.AndroidEdition.MapView)">
            <summary>
            This method initializes map tool.
            </summary>
            <remarks>
            When overriding this method, consider adding map tool onto the map.ToolsGrid panel.
            </remarks>
            <param name="wpfMap">The WPF map.</param>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MapTool.CurrentMap">
            <summary>
            Gets or sets current map that the mapTool will be drawn on
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MapTool.IsEnabled">
            <summary>
            Gets or sets a value indicating whether this instance is enabled.
            </summary>
            <value><c>true</c> if this instance is enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.CenterCoordinateMapTool">
            <summary>
            Represents the coordinates of the map center, display in the lower right corner of the map.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.CenterCoordinateMapTool.#ctor(Android.Content.Context)">
            <summary>
            Initializes a new instance of the <see cref="T:ThinkGeo.MapSuite.AndroidEdition.MapTool"/> class.
            </summary>
            <param name="context">Interface to global information about an application environment.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.CenterCoordinateMapTool.#ctor(ThinkGeo.MapSuite.AndroidEdition.MapView,Android.Content.Context)">
            <summary>
            Initializes a new instance of the <see cref="T:ThinkGeo.MapSuite.AndroidEdition.CenterCoordinateMapTool"/> class.
            </summary>
            <param name="mapView">Current map that the mapTool will be drawn on</param>
            <param name="context">Interface to global information about an application environment.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.CenterCoordinateMapTool.#ctor(ThinkGeo.MapSuite.AndroidEdition.MapView,Android.Content.Context,Android.Util.IAttributeSet)">
            <summary>
            Initializes a new instance of the <see cref="T:ThinkGeo.MapSuite.AndroidEdition.CenterCoordinateMapTool"/> class.
            </summary>
            <param name="mapView">Current map that the mapTool will be drawn on</param>
            <param name="context">Interface to global information about an application environment.</param>
            <param name="attrs">A collection of attributes, as found associated with a tag in an XML document.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.CenterCoordinateMapTool.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.CenterCoordinateMapTool.DisplayTextFormat">
            <summary>
            Gets or sets the display text format.
            </summary>
            <value>The display text format.</value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.CenterCoordinateMapTool.DisplayProjection">
            <summary>
            Gets or sets the display projection.
            </summary>
            <value>The display projection.</value>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.MapTools">
            <summary>
            Contains the different map tools as properties and acts as an entrance for
            setting these map controls.
            </summary>
            <remarks>
            This class is designed to be easy to use. It contains all the available
            tools of the map. You can find and set those map tools easily by using this
            class.
            </remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapTools.#ctor(Android.Content.Context,ThinkGeo.MapSuite.AndroidEdition.MapView)">
            <summary>
            Initializes a new instance of the <see cref="T:ThinkGeo.MapSuite.AndroidEdition.MapTools"/> class.
            </summary>
            <param name="context">Interface to global information about an application environment.</param>
            <param name="currentMap">A mapView object that all map tools in this object is based on.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapTools.Refresh">
            <summary>
            Refreshes all the map tools objects maintaining in the MapTools object.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MapTools.ZoomMapTool">
            <summary>
            Gets the zoom map tool.
            </summary>
            <value>The zoom map tool.</value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MapTools.CenterCoordinate">
            <summary>
            Gets the center coordinate.
            </summary>
            <value>The center coordinate.</value>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.ZoomMapTool">
            <summary>
            Represents the zooming panel in the upper left corner of the map.
            </summary>
            <remarks>
            The zoom map tool consists of two zooming buttons.
            </remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.ZoomMapTool.#ctor(ThinkGeo.MapSuite.AndroidEdition.MapView,Android.Content.Context)">
            <summary>
            Initializes a new instance of the <see cref="T:ThinkGeo.MapSuite.AndroidEdition.ZoomMapTool"/> class.
            </summary>
            <param name="mapView">This class represents the map control.</param>
            <param name="context">Interface to global information about an application environment.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.ZoomMapTool.#ctor(ThinkGeo.MapSuite.AndroidEdition.MapView,Android.Content.Context,Android.Util.IAttributeSet)">
            <summary>
            Initializes a new instance of the <see cref="T:ThinkGeo.MapSuite.AndroidEdition.ZoomMapTool"/> class.
            </summary>
            <param name="mapView">This class represents the map control.</param>
            <param name="context">Interface to global information about an application environment.</param>
            <param name="attrs">A collection of attributes, as found associated with a tag in an XML document.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.ZoomMapTool.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ZoomMapTool.GlobeExtent">
            <summary>
            Gets or sets the globe extent.
            </summary>
            <value>
            The globe extent.
            </value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ZoomMapTool.IsGlobeButtonVisiable">
            <summary>
            Gets or sets a value indicating whether this instance is globe button visiable.
            </summary>
            <value>
            <c>true</c> if this instance is globe button visiable; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.CurrentExtentChangedMapViewEventArgs">
            <summary>
            Use to send data when map's extent is changed.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.CurrentExtentChangedMapViewEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ThinkGeo.MapSuite.AndroidEdition.CurrentExtentChangedMapViewEventArgs"/> class.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.CurrentExtentChangedMapViewEventArgs.#ctor(ThinkGeo.MapSuite.Core.RectangleShape,ThinkGeo.MapSuite.Core.RectangleShape)">
            <summary>
            Initializes a new instance of the <see cref="T:ThinkGeo.MapSuite.AndroidEdition.CurrentExtentChangedMapViewEventArgs"/> class.
            </summary>
            <param name="oldExtent">The old extent.</param>
            <param name="newExtent">The new extent.</param>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.CurrentExtentChangedMapViewEventArgs.OldExtent">
            <summary>
            Gets or sets the old extent.
            </summary>
            <value>The old extent.</value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.CurrentExtentChangedMapViewEventArgs.NewExtent">
            <summary>
            Gets or sets the new extent.
            </summary>
            <value>The new extent.</value>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.CurrentExtentChangingMapViewEventArgs">
            <summary>
            Use to send data when map's extent is changing.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.CurrentExtentChangingMapViewEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ThinkGeo.MapSuite.AndroidEdition.CurrentExtentChangingMapViewEventArgs"/> class.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.CurrentExtentChangingMapViewEventArgs.#ctor(ThinkGeo.MapSuite.Core.RectangleShape,ThinkGeo.MapSuite.Core.RectangleShape)">
            <summary>
            Initializes a new instance of the <see cref="T:ThinkGeo.MapSuite.AndroidEdition.CurrentExtentChangingMapViewEventArgs"/> class.
            </summary>
            <param name="oldExtent">The old extent.</param>
            <param name="newExtent">The new extent.</param>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.CurrentExtentChangingMapViewEventArgs.OldExtent">
            <summary>
            Gets or sets the old extent.
            </summary>
            <value>The old extent.</value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.CurrentExtentChangingMapViewEventArgs.NewExtent">
            <summary>
            Gets or sets the new extent.
            </summary>
            <value>The new extent.</value>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.CurrentScaleChangedMapViewEventArgs">
            <summary>
            Use to send data when map's current scale is changed.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.CurrentScaleChangedMapViewEventArgs.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ThinkGeo.MapSuite.AndroidEdition.CurrentScaleChangedMapViewEventArgs"/> class.
            </summary>
            <param name="oldScale">The old scale.</param>
            <param name="newScale">The new scale.</param>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.CurrentScaleChangedMapViewEventArgs.OldScale">
            <summary>
            Gets or sets the old scale.
            </summary>
            <value>The old scale.</value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.CurrentScaleChangedMapViewEventArgs.NewScale">
            <summary>
            Gets or sets the new scale.
            </summary>
            <value>The new scale.</value>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.CurrentScaleChangingMapViewEventArgs">
            <summary>
            Use to send data when map's current scale is changing.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.CurrentScaleChangingMapViewEventArgs.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ThinkGeo.MapSuite.AndroidEdition.CurrentScaleChangingMapViewEventArgs"/> class.
            </summary>
            <param name="oldScale">The old scale.</param>
            <param name="newScale">The new scale.</param>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.CurrentScaleChangingMapViewEventArgs.OldScale">
            <summary>
            Gets or sets the old scale.
            </summary>
            <value>The old scale.</value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.CurrentScaleChangingMapViewEventArgs.NewScale">
            <summary>
            Gets or sets the new scale.
            </summary>
            <value>The new scale.</value>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.MapArguments">
            <summary>
            Contains important properties and methods of current map object.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapArguments.ToWorldCoordinate(ThinkGeo.MapSuite.Core.PointShape)">
            <summary>
            Converts a point from screen coordinate to world coordinate.
            </summary>
            <param name="screenCoordinate">A point in screen coordinate to be converted.</param>
            <returns>A point in world coordinate.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapArguments.ToScreenCoordinate(ThinkGeo.MapSuite.Core.PointShape)">
            <summary>
            Converts a point from world coordinate to screen coordinate.
            </summary>
            <param name="worldCoordinate">A point in world coordinate to be converted.</param>
            <returns>A point in screen coordinate.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapArguments.GetSnappedZoomLevelIndex(ThinkGeo.MapSuite.Core.RectangleShape)">
            <summary>
            Gets a snapped zoom level index from the provided extent.
            </summary>
            <remarks>
            The extent will automatically snapped a closest scale from the ZoomLevelScale list,
            and create an extent back with the map's screen width and height.
            </remarks>
            <param name="extent">An extent to be snapped.</param>
            <returns>An integar value that indicates the snapped zoom level index.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapArguments.GetSnappedZoomLevelIndex(System.Double)">
            <summary>
            Gets a snapped zoom level index from the provided scale.
            </summary>
            <remarks>
            The scale will automatically snapped a closest scale from the ZoomLevelScale list,
            and create an extent back with the map's screen width and height.
            </remarks>
            <param name="scale">A scale to be snapped.</param>
            <returns>An integar value that indicates the snapped zoom level index.</returns>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MapArguments.ZoomLevelScales">
            <summary>
            Gets a collection of double values that determines the zoomlevel scales.
            </summary>
            <value>
            A collection of double values that determines the openlayers' zoomlevel
            scales.
            </value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MapArguments.CurrentExtent">
            <summary>
            Gets or sets the extent of current map.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MapArguments.MapUnit">
            <summary><para>Gets or sets the <strong>GeographyUnit</strong> for the map.</para></summary>
            <value>
            The <strong>GeographyUnit</strong> object that indicates which geography unit the
            map is currently using.
            </value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MapArguments.ScreenWidth">
            <summary>
            Gets or sets the width of the screen.
            </summary>
            <value>The width of the screen.</value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MapArguments.ScreenHeight">
            <summary>
            Gets or sets the height of the screen.
            </summary>
            <value>The height of the screen.</value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MapArguments.CurrentScale">
            <summary>Gets or sets a double value that indicates the current scale of the map.</summary>
            <value>A double value that indicates the current scale of the map.</value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MapArguments.CurrentResolution">
            <summary>Gets or sets a double value that indicates the current resolution of the map.</summary>
            <value>A double value that indicates the current resolution of the map.</value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MapArguments.ZoomLevelSet">
            <summary>
            This property gets or sets the <strong>ZoomLevelSet</strong> used for the MapView control.
            </summary>
            <value>The zoom level set.</value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MapArguments.CustomData">
            <summary>
            Gets the custom data.
            </summary>
            <value>The custom data.</value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MapArguments.ActualWidth">
            <summary>
            Gets or sets the width of current map object in screen coordinate.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MapArguments.ActualHeight">
            <summary>
            Gets or sets the height of current map object in screen coordinate.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.MapView">
            <summary>
            This class represents the map control.
            </summary>
            <remarks>
            The mapview class inherits from the control, so it can be dragged onto the
            page or be created and added to a page via code like the popular control itself. You also
            need to configure the properties of the mapview. The most important step is adding
            overlays, which generate images and stack them over each other to form a map image. The mapview
            control has many methods and events through which you can interact with the mapview.
            </remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapView.OnLongPress(Android.Views.MotionEvent)">
            <summary>
            Called when [long press].
            </summary>
            <param name="e">Event argument for LongPress event.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapView.OnSingleTap(Android.Views.MotionEvent)">
            <summary>
            Called when [single tap].
            </summary>
            <param name="e">Event argument for SingleTap event.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapView.OnDoubleTap(Android.Views.MotionEvent)">
            <summary>
            Called when [double tap].
            </summary>
            <param name="e">Event argument for DoubleTap event.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapView.OnTouchMove(Android.Views.MotionEvent)">
            <summary>
            Called when [touch move].
            </summary>
            <param name="e">Event argument for TouchMove event.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapView.OnTouchUp(Android.Views.MotionEvent)">
            <summary>
            Called when [touch up].
            </summary>
            <param name="e">Event argument for TouchUp event.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapView.OnTouchDown(Android.Views.MotionEvent)">
            <summary>
            Called when [touch down].
            </summary>
            <param name="e">Event argument for TouchDown event.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapView.#ctor(Android.Content.Context)">
            <summary>
            Initializes a new instance of the <see cref="T:ThinkGeo.MapSuite.AndroidEdition.MapView"/> class.
            </summary>
            <param name="context">Interface to global information about an application environment.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapView.#ctor(Android.Content.Context,Android.Util.IAttributeSet)">
            <summary>
            Initializes a new instance of the <see cref="T:ThinkGeo.MapSuite.AndroidEdition.MapView"/> class.
            </summary>
            <param name="context">Interface to global information about an application environment.</param>
            <param name="attrs">A collection of attributes, as found associated with a tag in an XML document.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapView.#ctor(Android.Content.Context,Android.Util.IAttributeSet,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ThinkGeo.MapSuite.AndroidEdition.MapView"/> class.
            </summary>
            <param name="context">Interface to global information about an application environment.</param>
            <param name="attrs">A collection of attributes, as found associated with a tag in an XML document.</param>
            <param name="defStyle">The definition style.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapView.OnCurrentExtentChanged(ThinkGeo.MapSuite.AndroidEdition.CurrentExtentChangedMapViewEventArgs)">
            <summary>
            Occurs when map's current extent is changed.
            </summary>
            <param name="e">Event argument for CurrentExtentChanged event.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapView.OnCurrentExtentChanging(ThinkGeo.MapSuite.AndroidEdition.CurrentExtentChangingMapViewEventArgs)">
            <summary>
            Occurs when map's current extent is changing.
            </summary>
            <param name="e">Event argument for CurrentExtentChanging event.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapView.OnCurrentScaleChanging(ThinkGeo.MapSuite.AndroidEdition.CurrentScaleChangingMapViewEventArgs)">
            <summary>
            Occurs when map's current scale is changing.
            </summary>
            <param name="e">Event argument for CurrentScaleChanging event.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapView.OnCurrentScaleChanged(ThinkGeo.MapSuite.AndroidEdition.CurrentScaleChangedMapViewEventArgs)">
            <summary>
            Occurs when map's current scale is changed.
            </summary>
            <param name="e">Event argument for CurrentScaleChanged event.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapView.Pan(ThinkGeo.MapSuite.Core.PanDirection,System.Int32)">
            <summary>
            This method will simulate the Pan interaction.
            Pans the map by the specified direction and percentage.
            </summary>
            <param name="direction">The direction to be paned.</param>
            <param name="percentage">The percentage to be paned.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapView.Refresh(System.Collections.Generic.IEnumerable{ThinkGeo.MapSuite.AndroidEdition.Overlay})">
            <summary>
            This method will simulate the Refresh interaction.
            Refreshes a specified overlay collection.
            </summary>
            <param name="overlays">A collection of overlay to be refreshed.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapView.Refresh">
            <summary>
            This method will simulate the Refresh interaction.
            Refreshes current map control.
            </summary>
            <remarks>
            Refreshes all the existing overlays and map tools.
            </remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapView.CenterAt(ThinkGeo.MapSuite.Core.Feature)">
            <summary>
            Locates the map center to the center of the specified feature.
            </summary>
            <param name="centerFeature">A feature to locates the map center.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapView.CenterAt(System.Double,System.Double)">
            <summary>
            Locates the map center to the worldX and worldY.
            </summary>
            <param name="worldX">The x of the world point.</param>
            <param name="worldY">The y of the world point.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapView.CenterAt(ThinkGeo.MapSuite.Core.PointShape)">
            <summary>
            Locates the map center to the specified world point.
            </summary>
            <param name="worldCenter">A world point to locate the map.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapView.ZoomTo(ThinkGeo.MapSuite.Core.Feature)">
            <summary>
            This method zooms current map to the specified feature.
            </summary>
            <param name="feature">A feature to locates the map.</param>
            <remarks>
            When calling this method, it doesn't refresh existing Tiles on the current map.
            For example, if using a TileOverlay such as LayerOverlay; a layer style is changed,
            Refresh method is proper to call.
            </remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapView.ZoomTo(ThinkGeo.MapSuite.Core.BaseShape)">
            <summary>
            This method zooms current map to the target shape.
            </summary>
            <param name="targetShape">A shape to locates the map.</param>
            <remarks>
            When calling this method, it doesn't refresh existing Tiles on the current map.
            For example, if using a TileOverlay such as LayerOverlay; a layer style is changed,
            Refresh method is proper to call.
            </remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapView.ZoomTo(ThinkGeo.MapSuite.Core.PointShape,System.Double)">
            <summary>
            This method zooms current map to a specified position and scale.
            </summary>
            <param name="targetWorldCenter">A world center to zoom the map to.</param>
            <param name="targetScale">A double value indicates the scale to zoom the map to.</param>
            <remarks>
            When calling this method, it doesn't refresh existing Tiles on the current map.
            For example, if using a TileOverlay such as LayerOverlay; a layer style is changed,
            Refresh method is proper to call.
            </remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapView.ZoomToCore(ThinkGeo.MapSuite.Core.RectangleShape)">
            <summary>
            This protected virtual method is the Core method of ZoomTo API.
            </summary>
            <param name="extent">An extent to locates the map.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapView.ZoomIn(System.Int32)">
            <summary>
            This method will simulate the ZoomIn interaction.
            Zooms the map in by the provided percentage.
            </summary>
            <param name="percentage">A scale to zoom the map in.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapView.ZoomOut(System.Int32)">
            <summary>
            This method will simulate the ZoomOut interaction.
            Zooms the map out by the provided percentage.
            </summary>
            <param name="percentage">A scale to zoom the map out.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapView.ZoomToScale(System.Double)">
            <summary>
            Zooms the map to a provided scale.
            This method will simulate the ZoomToScale interaction.
            </summary>
            <param name="targetScale">A target scale to zoom the map.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapView.ZoomToPreviousExtent">
            <summary>
            Zooms the map to the previous extent.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapView.ZoomToNextExtent">
            <summary>
            Zooms the map to the next extent.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapView.ZoomInByAnchorPoint(ThinkGeo.MapSuite.Core.ScreenPointF)">
            <summary>
            Zooms the map in by the touch position.
            This method will simulate the ZoomInByAnchorPoint interaction.
            </summary>
            <param name="touchPosition">A position to zoom in map.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapView.ZoomInByAnchorPointCore(ThinkGeo.MapSuite.Core.ScreenPointF)">
            <summary>
            This protected virtual method is the Core method of ZoomInByAnchorPoint API.
            </summary>
            <param name="touchPosition">A position to zoom in map.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapView.DispatchDraw(Android.Graphics.Canvas)">
            <summary>
            Called by draw to draw the child views.
            </summary>
            <param name="canvas">the canvas on which to draw the view</param>
            <remarks>
            <para tool="javadoc-to-mdoc">Called by draw to draw the child views. This may be overridden
            by derived classes to gain control just before its children are drawn
            (but after its own view has been drawn).</para>
            <para tool="javadoc-to-mdoc">
              <format type="text/html">
                <a href="http://developer.android.com/reference/android/view/View.html#dispatchDraw(android.graphics.Canvas)" target="_blank">[Android Documentation]</a>
              </format>
            </para>
            </remarks>
            <since version="Added in API level 1" />
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapView.DrawCore(ThinkGeo.MapSuite.AndroidEdition.MapArguments,ThinkGeo.MapSuite.AndroidEdition.OverlayRefreshType)">
            <summary>
            Draws the map by the provided extent.
            </summary>
            <param name="mapArguments">This parameter maintains current map information for calculating mechanism.</param>
            <param name="overlayRefreshType">Indicates whether the map needs to be refreshed.
            For example, a style of layer is changed, the overlay needs to be refreshed.
            When panning, the overlay only changes its position, refresh is not needed.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapView.ZoomToScaleCore(System.Double)">
            <summary>
            Zooms the map to a provided scale.
            This protected virtual method is the Core method of ZoomToScale API.
            </summary>
            <param name="targetScale">A target scale to zoom the map.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapView.OnSizeChanged(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            This is called during layout when the size of this view has changed.
            </summary>
            <param name="w">Current width of this view.</param>
            <param name="h">Current height of this view.</param>
            <param name="oldw">Old width of this view.</param>
            <param name="oldh">Old height of this view.</param>
            <remarks>
            <para tool="javadoc-to-mdoc">This is called during layout when the size of this view has changed. If
            you were just added to the view hierarchy, you're called with the old
            values of 0.</para>
            <para tool="javadoc-to-mdoc">
              <format type="text/html">
                <a href="http://developer.android.com/reference/android/view/View.html#onSizeChanged(int, int, int, int)" target="_blank">[Android Documentation]</a>
              </format>
            </para>
            </remarks>
            <since version="Added in API level 1" />
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapView.PanCore(ThinkGeo.MapSuite.Core.PanDirection,System.Int32)">
            <summary>
            This protected virtual method is the Core method of Pan API.
            </summary>
            <param name="direction">The direction to be paned.</param>
            <param name="percentage">The percentage to be paned.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapView.RefreshCore">
            <summary>
            This protected virtual method is the Core method of Refresh API.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapView.ZoomInCore(System.Int32)">
            <summary>
            This protected virtual method is the Core method of ZoomIn API.
            </summary>
            <param name="percentage">A scale to zoom the map in.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapView.ZoomOutCore(System.Int32)">
            <summary>
            This protected virtual method is the Core method of ZoomOut API.
            </summary>
            <param name="percentage">A scale to zoom the map out.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapView.ToWorldCoordinate(ThinkGeo.MapSuite.Core.ScreenPointF)">
            <summary>
            Converts the provided screen points to world points.
            </summary>
            <param name="screenCoordinate">Screen point to be converted.</param>
            <returns>A world point that is converted from the provided parameters.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapView.ToScreenCoordinate(ThinkGeo.MapSuite.Core.PointShape)">
            <summary>
            Converts the provided world points to screen points.
            </summary>
            <param name="worldCoordinate">World coordinate to be converted.</param>
            <returns>A screen coordinate that is converted.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapView.GetSnappedZoomLevelIndex(System.Double)">
            <summary>
            Gets the snapped zoom level index from the provided scale.
            </summary>
            <param name="scale">A scale to be snapped.</param>
            <returns>A snapped zoom level index in scale list sychnonized by the SyncZoomLevelScales method.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapView.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="E:ThinkGeo.MapSuite.AndroidEdition.MapView.MapLongPress">
            <summary>
            Occurs when [map long press].
            </summary>
        </member>
        <member name="E:ThinkGeo.MapSuite.AndroidEdition.MapView.MapSingleTap">
            <summary>
            Occurs when [map single tap].
            </summary>
        </member>
        <member name="E:ThinkGeo.MapSuite.AndroidEdition.MapView.MapDoubleTap">
            <summary>
            Occurs when [map double tap].
            </summary>
        </member>
        <member name="E:ThinkGeo.MapSuite.AndroidEdition.MapView.MapTouchMove">
            <summary>
            Occurs when [map touch move].
            </summary>
        </member>
        <member name="E:ThinkGeo.MapSuite.AndroidEdition.MapView.MapTouchUp">
            <summary>
            Occurs when [map touch up].
            </summary>
        </member>
        <member name="E:ThinkGeo.MapSuite.AndroidEdition.MapView.MapTouchDown">
            <summary>
            Occurs when [map touch down].
            </summary>
        </member>
        <member name="E:ThinkGeo.MapSuite.AndroidEdition.MapView.CurrentExtentChanging">
            <summary>
            Occurs before map's extent is changing.
            </summary>
        </member>
        <member name="E:ThinkGeo.MapSuite.AndroidEdition.MapView.CurrentExtentChanged">
            <summary>
            Occurs after map's extent is changed.
            </summary>
        </member>
        <member name="E:ThinkGeo.MapSuite.AndroidEdition.MapView.CurrentScaleChanging">
            <summary>
            Occurs before map's current scale is changing.
            </summary>
        </member>
        <member name="E:ThinkGeo.MapSuite.AndroidEdition.MapView.CurrentScaleChanged">
            <summary>
            Occurs after map's current scale is changed.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MapView.DisplayDensity">
            <summary>
            Gets the display density.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MapView.CurrentExtent">
            <summary>
            Gets or sets the current extent of the MapControl.
            </summary>
            <remarks>The current extent stands for the extent of current position, this is
            very important metrics to caculate the scale.</remarks>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MapView.CurrentScale">
            <summary>
            Gets the current scale.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MapView.EditOverlay">
            <summary>Gets or sets the edit overlay in the MapControl.</summary>
            <example>
            	<code lang="CS" title="C# Sample" description="This code shows you one way to delete the single last shape in the EditShapsLayer contained in EditOverlay.">
            	case "btnTrackDelete":
            	        int lastIndex = mapView1.EditOverlay.EditShapesLayer.InternalFeatures.Count - 1;
            	        if (lastIndex >= 0)
            	        {
            	            mapView1.EditOverlay.EditShapesLayer.InternalFeatures.RemoveAt(lastIndex);
            	            mapView1.EditOverlay.CalculateAllControlPoints();
            	        }
            	        mapView1.EditOverlay.Refresh();
            	        break;
                </code>
            </example>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MapView.ExtentOverlay">
            <summary>
            Gets or sets the extent overlay in the MapControl.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MapView.InteractiveOverlays">
            <summary>This property gets the collection of InteractiveOverlays in the MapControl.</summary>
            <remarks>This property is used when you want to change the default behavior of the InteractiveOverlay or add your own
            customized InteractiveOverlay.</remarks>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MapView.MapTools">
            <summary>
            Gets a object for simply using MapTools.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MapView.MapUnit">
            <summary>Gets or sets the map unit used by the MapControl.</summary>
            <example>
            	<code lang="CS" title="C# Sample" description="This code shows how to set the MapUnit.">
             mapView1.MapUnit = GeographyUnit.Meter;
            </code>
            </example>
            <remarks>The MapUnit reflects the data unit.</remarks>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MapView.Overlays">
            <summary>This property gets the collection of Overlays in the MapControl.</summary>
            <example>
            	<code lang="CS" title="C# Sample" description="This code shows how to add an overlay to the Overlays collection.">
             LayerOverlay staticOverlay = new LayerOverlay();
             staticOverlay.Layers.Add("WorldLayer", worldLayer);
             mapView1.Overlays.Add("WorldOverlay", staticOverlay);
            </code>
            </example>
        </member>
        <!-- Badly formed XML comment ignored for member "P:ThinkGeo.MapSuite.AndroidEdition.MapView.AdornmentOverlay" -->
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MapView.TrackOverlay">
            <summary>Gets or sets the track overlay in the MapControl.</summary>
            <example>
            <code lang="CS" title="C# Sample" description="This code shows how to change the TrackMode of the MapControl to Track an ellipse out.">
             mapView1.TrackOverlay.TrackMode = TrackMode.Ellipse;
            </code>
            </example>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MapView.MaximumScale">
             <summary>
             This property gets and sets a maximum scale when navigating the map.
            
             When you keep zooming out, and the target scale is bigger than the maximum scale,
             the zooming operation will be stopped.
             </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MapView.MinimumScale">
             <summary>
             This property gets and sets a minimum scale when navigating the map.
            
             When you keep zooming in, and the target scale is smaller than the minimum scale,
             the zooming operation will be stopped.
             </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MapView.ZoomLevelSet">
            <summary>
            This property gets or sets the <strong>ZoomLevelSet</strong> used for the MapView control.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.Overlay">
            <summary> 
            This class is the base class of all overlays in this overlay system.
            </summary>
            <remarks>
            <para>The <strong>Overlay</strong> has the similar concept as the layer. Different
            types of overlays stack over each other to form a map. An overlay object is
            responsible for getting the configuration infomation from the user.</para>
            <para>Usually an overlay represents an image with transparent background that is
            laid upon other overlay such as <strong>LayerOverlay</strong>,
            <strong>WmsOverlay</strong>. While the <strong>MarkerOverlay</strong> will not be
            rendered as an image, it is actually represents a control that holds
            bunch of marker images on the map.</para>
            </remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.Overlay.GetBoundingBox">
            <summary>
            This method gets a bounding box of the Overlay.
            </summary>
            <remarks>
            This method is the concrete wrapper for the abstract method GetBoundingBoxCore.
            This method returns the bounding box of the Overlay.<br /><br />
            As this is a concrete public method that wraps a Core method, we reserve the right
            to add events and other logic to pre- or post-process data returned by the Core version
            of the method. In this way, we leave our framework open on our end, but also allow you
            the developer to extend our logic to suit your needs. If you have questions about this,
            please contact our support team as we would be happy to work with you on extending our
            framework.
            </remarks>
            <returns>A RectangleShape indicating the bounding box of this overlay.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.Overlay.GetBoundingBoxCore">
            <summary>This method returns the bounding box of the Overlay.</summary>
            <returns>This method returns the bounding box of the Overlay.</returns>
            <remarks>This method returns the bounding box of the Overlay.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.Overlay.Initialize(ThinkGeo.MapSuite.AndroidEdition.MapArguments)">
            <summary>
                This method initializes overlay object.
            </summary>
            <remarks>
                This is a wrapper method for the virtual method InitializeCore.
            </remarks>
            <param name="mapArguments">This parameter maintains current map information for calculating mechanism.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.Overlay.Refresh">
            <summary>
            This method refreshes all the content in the OverlayCanvas.
            For example, LayerOverlay with multiple tiles;
            when the style of one layer is changed,
            call Refresh to refresh all the tiles to accept new styles.
            </summary>
            <remarks>
            The difference from Draw() method is that Refresh() method refreshs all the elements while Draw() does not.
            </remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.Overlay.RefreshCore">
            <summary>
            This method refreshes all the content in the OverlayCanvas.
            For example, LayerOverlay with multiple tiles;
            when the style of one layer is changed,
            call Refresh to refresh all the tiles to accept new styles.
            </summary>
            <remarks>
            The difference from Draw() method is that Refresh() method refreshs all the elements while Draw() does not.
            </remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.Overlay.Draw(ThinkGeo.MapSuite.AndroidEdition.MapArguments,ThinkGeo.MapSuite.AndroidEdition.OverlayRefreshType)">
            <summary>
            This method draws the overlay with the provided extent in world coordinate.
            </summary>
            <param name="mapArguments">This parameter maintains current map information for calculating mechanism.</param>
            <param name="refreshType">
            This parameter indicates whether the elements of this overlay needs to be refreshed.
            For example, TileOverlay is formed by tiles.
            When panning the map around, the existing tile doesn't need to be redraw,
            the only thing we need to do is modifying the position of these tiles.
            On another hand, when click to change the style of the overlay,
            we need to redraw the tile images to change the appearance. So we need refresh mode.
            </param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.Overlay.DrawCore(ThinkGeo.MapSuite.AndroidEdition.MapArguments,ThinkGeo.MapSuite.AndroidEdition.OverlayRefreshType)">
            <summary>
            This method draws the overlay with the provided extent in world coordinate.
            </summary>
            <param name="mapArguments">This parameter maintains current map information for calculating mechanism.</param>
            <param name="refreshType">
            This parameter indicates whether the elements of this overlay needs to be refreshed.
            For example, TileOverlay is formed by tiles.
            When panning the map around, the existing tile doesn't need to be redraw,
            the only thing we need to do is modifying the position of these tiles.
            On another hand, when click to change the style of the overlay,
            we need to redraw the tile images to change the appearance. So we need refresh mode.
            </param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.Overlay.PostTransform(ThinkGeo.MapSuite.AndroidEdition.TransformArguments,ThinkGeo.MapSuite.AndroidEdition.MapArguments)">
            <summary>
            This method will simulate the PostTransform interaction.
            </summary>
            <param name="transformInfo">This parameter maintains the transfrom information for calculating transform.</param>
            <param name="mapArguments">This parameter maintains current map information for calculating mechanism.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.Overlay.PostTransformCore(ThinkGeo.MapSuite.AndroidEdition.TransformArguments,ThinkGeo.MapSuite.AndroidEdition.MapArguments)">
            <summary>
            This protected virtual method is the Core method of PostTransform API.
            </summary>
            <param name="transformInfo">This parameter maintains the transfrom information for calculating transform.</param>
            <param name="mapArguments">This parameter maintains current map information for calculating mechanism.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.Overlay.Close">
            <summary>
            This method will simulate the Close interaction.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.Overlay.CloseCore">
            <summary>
            This protected virtual method is the Core method of Close API.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.Overlay.Open">
            <summary>
            This method will simulate the Open interaction.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.Overlay.OpenCore">
            <summary>
            This protected virtual method is the Core method of Open API.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.Overlay.InitializeCore(ThinkGeo.MapSuite.AndroidEdition.MapArguments)">
            <summary>
            This method initializes overlay object.
            </summary>
            <remarks>
            When implementing this method, consider initializing the overlay canvas such as setting its z-index,
            setting current map reference to the CurrentMap property.
            </remarks>
            <param name="mapArguments">This parameter maintains current map information for calculating mechanism.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.Overlay.DrawException(ThinkGeo.MapSuite.Core.GeoCanvas,System.Exception)">
            <summary>
            This method will draw on the canvas when the layer.Draw throw exception and 
            the DrawExceptionMode is set to DrawException instead of ThrowException.
            </summary>
            <param name="canvas">The target canvas to draw the layer.</param>
            <param name="e">The exception thrown when layer.Draw().</param>
            <remarks>This method can be overriden its logic by rewrite the DrawExceptionCore.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.Overlay.DrawExceptionCore(ThinkGeo.MapSuite.Core.GeoCanvas,System.Exception)">
            <summary>
            This method will draw on the canvas when the layer.Draw throw exception and 
            the DrawExceptionMode is set to DrawException instead of ThrowException.
            </summary>
            <param name="canvas">The target canvas to draw the layer.</param>
            <param name="e">The exception thrown when layer.Draw().</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.Overlay.OnDrawingException(ThinkGeo.MapSuite.AndroidEdition.DrawingExceptionOverlayEventArgs)">
            <summary>
             This method raises before the overlay is drawing exception.
            </summary>
            <param name="args">This parameter is the event argument for DrawingException event.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.Overlay.OnDrawnException(ThinkGeo.MapSuite.AndroidEdition.DrawnExceptionOverlayEventArgs)">
            <summary>
            This method raises after the overlay is drawn exception.
            </summary>
            <param name="args">This parameter is the event argument for DrawingException event.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.Overlay.Dispose">
            <summary>
            This method dispose unmanaged resource used in this class.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.Overlay.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="E:ThinkGeo.MapSuite.AndroidEdition.Overlay.DrawingException">
            <summary>
             Occurs before exception is drawing on map.
            </summary>
        </member>
        <member name="E:ThinkGeo.MapSuite.AndroidEdition.Overlay.DrawnException">
            <summary>
             Occurs after exception is drawn on map.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.Overlay.Name">
            <summary>
            Gets or sets the name of this overaly.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.Overlay.DrawingExceptionMode">
            <summary>
            This property gets and sets the DrawingExceptionMode used when an exception occurs during drawing.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.Overlay.IsEmpty">
            <summary>
            This property gets if this overlay is empty or not.
            </summary>
            <remarks>
            This property enhances the performance of the overlay while drawing.
            If is true, we will skip drawing this overlay and continue drawing the next overlay.
            </remarks>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.Overlay.IsVisible">
            <summary>
            Gets or sets if this overlay is visible.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.Overlay.Attribution">
            <summary>
            Gets or sets the attribution for this overlay.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.Overlay.DrawingQuality">
            <summary>
            Gets or sets the drawingQuality for this overlay.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.Overlay.Opacity">
            <summary>
            Gets or sets the opacity for this overlay.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.Overlay.MapArguments">
            <summary>
            Gets or sets the mapArguments for this overlay.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.AdornmentOverlay.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ThinkGeo.MapSuite.AndroidEdition.AdornmentOverlay"/> class.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.AdornmentOverlay.InitializeCore(ThinkGeo.MapSuite.AndroidEdition.MapArguments)">
            <summary>
            This method initializes overlay object.
            </summary>
            <remarks>
            When implementing this method, consider initializing the overlay canvas such as setting its z-index,
            setting current map reference to the CurrentMap property.
            </remarks>
            <param name="mapArguments">This parameter maintains current map information for calculating mechanism.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.AdornmentOverlay.DrawCore(ThinkGeo.MapSuite.AndroidEdition.MapArguments,ThinkGeo.MapSuite.AndroidEdition.OverlayRefreshType)">
            <summary>
            This method draws the overlay with the provided extent in world coordinate.
            </summary>
            <param name="mapArguments">This parameter maintains current map information for calculating mechanism.</param>
            <param name="refreshType">This parameter indicates whether the elements of this overlay needs to be refreshed.
            For example, TileOverlay is formed by tiles.
            When panning the map around, the existing tile doesn't need to be redraw,
            the only thing we need to do is modifying the position of these tiles.
            On another hand, when click to change the style of the overlay,
            we need to redraw the tile images to change the appearance. So we need refresh mode.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.AdornmentOverlay.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.AdornmentOverlay.ShowLogo">
            <summary>
            Gets or sets a value indicating whether [show logo].
            </summary>
            <value><c>true</c> if [show logo]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.AdornmentOverlay.IsEmpty">
            <summary>
            This property indicates whether this overlay is empty or not.
            </summary>
            <value><c>true</c> if this instance is empty; otherwise, <c>false</c>.</value>
            <remarks>This property enhances the performance of the overlay while drawing.
            If is true, we will skip drawing this overlay and continue drawing the next overlay.</remarks>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.AdornmentOverlay.Layers">
            <summary>
            This property gets a collection of the <strong>AdornmentLayers</strong> that are added to
            the <strong>AdornmentOverlay.</strong>
            </summary>
            <value>
            A collection of <strong>AdornmentLayers</strong> that are added to the
            <strong>AdornmentOverlay</strong> to be drawn.
            </value>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.DrawnExceptionOverlayEventArgs">
            <summary>
            Provides data for the DrawnExceptionOverlay event.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.DrawnExceptionOverlayEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ThinkGeo.MapSuite.AndroidEdition.DrawnExceptionOverlayEventArgs"/> class.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.DrawnExceptionOverlayEventArgs.#ctor(ThinkGeo.MapSuite.Core.GeoCanvas,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:ThinkGeo.MapSuite.AndroidEdition.DrawnExceptionOverlayEventArgs"/> class.
            </summary>
            <param name="canvas">The canvas.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.DrawnExceptionOverlayEventArgs.Exception">
            <summary>
            Gets or sets the exception.
            </summary>
            <value>The exception.</value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.DrawnExceptionOverlayEventArgs.Canvas">
            <summary>
            Gets or sets the canvas.
            </summary>
            <value>The canvas.</value>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.DrawingExceptionOverlayEventArgs">
            <summary>
            Provides data for the DrawingExceptionOverlay event.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.DrawingExceptionOverlayEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ThinkGeo.MapSuite.AndroidEdition.DrawingExceptionOverlayEventArgs"/> class.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.DrawingExceptionOverlayEventArgs.#ctor(ThinkGeo.MapSuite.Core.GeoCanvas,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:ThinkGeo.MapSuite.AndroidEdition.DrawingExceptionOverlayEventArgs"/> class.
            </summary>
            <param name="canvas">The canvas.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.DrawingExceptionOverlayEventArgs.#ctor(ThinkGeo.MapSuite.Core.GeoCanvas,System.Exception,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ThinkGeo.MapSuite.AndroidEdition.DrawingExceptionOverlayEventArgs"/> class.
            </summary>
            <param name="canvas">The canvas.</param>
            <param name="exception">The exception.</param>
            <param name="cancel">if set to <c>true</c> [cancel].</param>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.DrawingExceptionOverlayEventArgs.Exception">
            <summary>
            Gets or sets the exception.
            </summary>
            <value>The exception.</value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.DrawingExceptionOverlayEventArgs.Canvas">
            <summary>
            Gets or sets the canvas.
            </summary>
            <value>The canvas.</value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.DrawingExceptionOverlayEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ThinkGeo.MapSuite.AndroidEdition.DrawingExceptionOverlayEventArgs"/> is cancel.
            </summary>
            <value><c>true</c> if cancel; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.OverlayRefreshType">
            <summary>
            Represents how the overlay refreshes.
            </summary>
        </member>
        <member name="F:ThinkGeo.MapSuite.AndroidEdition.OverlayRefreshType.Redraw">
            <summary>
            Redraw indicates redraw all the map including translate map's position and regenerate images.
            </summary>
        </member>
        <member name="F:ThinkGeo.MapSuite.AndroidEdition.OverlayRefreshType.Pan">
            <summary>
            None indicates redraw map for panning. It only translate map's position.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.TransitionEffect">
            <summary>
            Represents how the overlay transition.
            </summary>
        </member>
        <member name="F:ThinkGeo.MapSuite.AndroidEdition.TransitionEffect.None">
            <summary>
            None transition effect for the overlay.
            </summary>
        </member>
        <member name="F:ThinkGeo.MapSuite.AndroidEdition.TransitionEffect.Stretch">
            <summary>
            Stretch transition effect for the overlay.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.TileOverlay">
            <summary>
            Represents an overlay that maintains tiles.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.TileOverlay.#ctor">
            <summary>
            Represents an overlay that maintains tiles.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.TileOverlay.DrawCore(ThinkGeo.MapSuite.AndroidEdition.MapArguments,ThinkGeo.MapSuite.AndroidEdition.OverlayRefreshType)">
            <summary>
            This method draws the InterativeOverlay abstract class.
            You have to override this API in its sub concrete classes, Or you will see nothing.
            </summary>
            <remarks>
             This method draws the representation of the overlay based on the extent you provided.<br/>
            	<br/>
            When implementing this abstract method, consider each feature and its column data
            values. You can use the full power of the GeoCanvas to do the drawing. If you need
            column data for a feature, be sure to override the GetRequiredColumnNamesCore and add
            the columns you need to the collection. In many of the styles, we add properties that
            allow the user to specify which field they need; then, in the GetRequiredColumnNamesCore,
            we read that property and add it to the collection.
            </remarks>
            <param name="mapArguments">This parameter maintains current map information for calculating mechanism.</param>
            <param name="refreshType">
            This parameter indicates whether the elements of this overlay needs to be refreshed.
            For example, TileOverlay is formed by tiles.
            When panning the map around, the existing tile doesn't need to be redraw,
            the only thing we need to do is modifying the position of these tiles.
            On another hand, when click to change the style of the overlay,
            we need to redraw the tile images to change the appearance. So we need refresh mode.
            </param>
            <returns>none</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.TileOverlay.DrawTile(ThinkGeo.MapSuite.AndroidEdition.TileView,ThinkGeo.MapSuite.AndroidEdition.MapArguments)">
            <summary>
            Redraws a specified tile with the provided world extent.
            </summary>
            <param name="tile">A Tile object that is created by the GetTile(Context) method to draw.</param>
            <param name="mapArguments">This parameter maintains current map information for calculating mechanism.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.TileOverlay.DrawTileCore(ThinkGeo.MapSuite.Core.GeoCanvas,ThinkGeo.MapSuite.AndroidEdition.TileView)">
            <summary>
            Redraws a specified tile with the provided world extent.
            </summary>
            <param name="tile">A Tile object that is created by the GetTile(Context) method to draw.</param>
            <param name="geoCanvas">This parameter is the canvas object to draw on.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.TileOverlay.PostTransformCore(ThinkGeo.MapSuite.AndroidEdition.TransformArguments,ThinkGeo.MapSuite.AndroidEdition.MapArguments)">
            <summary>
            This protected virtual method is the Core method of PostTransform API.
            </summary>
            <param name="transformInfo">This parameter maintains the transfrom information for calculating transform.</param>
            <param name="mapArguments">This parameter maintains current map information for calculating mechanism.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.TileOverlay.Dispose(System.Boolean)">
            <summary>
            This method dispose unmanaged resource used in this class.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.TileOverlay.GetTile(Android.Content.Context)">
            <summary>
            Get a new tile object to form the TileOverlay.
            </summary>
            <param name="context">Interface to global information about an application environment.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.TileOverlay.GetTileCore(Android.Content.Context)">
            <summary>
            Chooses a tile object to form the TileOverlay.
                
            When overriding this method, consider the initialize parameters setting on the tile.
            </summary>
            <param name="context">Interface to global information about an application environment.</param>
            <returns>A tile object to form the TileOverlay.</returns>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.TileOverlay.TransitionEffect">
            <summary>
            Gets and sets the transition effect of the overlay when zooming.
            
            After zooming, the existing tiles stretch and leave in current viewport.
            Set to None when its background is transparent.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.TileOverlay.LayerType">
            <summary>
            Gets or sets the LayerType of the Overlay.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.TileOverlay.TileCache">
            <summary>
            Gets and sets a tile cache object for saving the tiles.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.TileOverlay.TileSnappingMode">
            <summary>
            Gets or sets the tile snapping mode.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.TileOverlay.TileType">
            <summary>
            Gets and sets the overlay is formed by multiple tiles or single tile.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.TileOverlay.IsVisible">
            <summary>
            Gets or sets if this overlay is visible.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.TileOverlay.SingleTile">
            <summary>
            Gets or sets the single tile.
            </summary>
            <value>
            The single tile.
            </value>
        </member>
        <member name="F:ThinkGeo.MapSuite.AndroidEdition.TileSizeMode.Default">
            <summary>
            256 x 256
            </summary>
        </member>
        <member name="F:ThinkGeo.MapSuite.AndroidEdition.TileSizeMode.DefaultX2">
            <summary>
            512 x 512
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.TileSnappingMode">
            <summary>
            Represents how the tile overlay snapping.
            </summary>
        </member>
        <member name="F:ThinkGeo.MapSuite.AndroidEdition.TileSnappingMode.NoSnapping">
            <summary>
            No snapping for the overlay.
            </summary>
        </member>
        <member name="F:ThinkGeo.MapSuite.AndroidEdition.TileSnappingMode.Snapping">
            <summary>
            Snapping for the overlay.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.TileType">
            <summary>
            This enum represents the tile type in the tile overlay.
            </summary>
        </member>
        <member name="F:ThinkGeo.MapSuite.AndroidEdition.TileType.SingleTile">
            <summary>
            This value indicates the tile overlay is formed by one single tile.
            </summary>
        </member>
        <member name="F:ThinkGeo.MapSuite.AndroidEdition.TileType.MultiTile">
            <summary>
            This value indicates the tile overlay is formed by multiple tiles.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.TileView">
            <summary>
            This class represents the base class of tile which is the element to form tile overlay.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.TileView.Draw(ThinkGeo.MapSuite.Core.GeoCanvas)">
            <summary>
            This method draws the image for tile.
            </summary>
            <remarks>
            This method is the concrete wrapper for the virtual method DrawCore.
            This method draws the representation for the overlay based on the extent you provided.
            </remarks>
            <param name="geoCanvas">This parameter is the canvas object to draw on.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.TileView.DrawCore(ThinkGeo.MapSuite.Core.GeoCanvas)">
            <summary>
            This method draws the image for the tile.
            </summary>
            <remarks>
            When implementing this abstract method, consider if the IsAsync property.
            If yes, draw it in background thread;
            If no, draw it directly with the properties we provid.
            </remarks>
            <param name="geoCanvas">This parameter is the canvas object to draw on.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.TileView.Dispose(System.Boolean)">
            <summary>
            This method dispose unmanaged resource used in this class.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.TileView.TileWidth">
            <summary>
            Gets and sets the width of the tile.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.TileView.TileHeight">
            <summary>
            Gets and sets the height of the tile.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.TileView.BoundingBox">
            <summary>
            Gets and sets the bounding box of the tile.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.TileView.Scale">
            <summary>
            Gets and sets the scale of the tile.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.TileView.ColumnIndex">
            <summary>
            Gets and sets the column index of the tile.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.TileView.RowIndex">
            <summary>
            Gets and sets the row index of the tile.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.TileView.ZoomLevelIndex">
            <summary>
            Gets and sets the zoom level index of the tile.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.TileView.MapUnit">
            <summary>
            Gets and sets the map unit of the tile.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.TransformArguments">
            <summary>
            Class TransformArguments.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.TransformArguments.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ThinkGeo.MapSuite.AndroidEdition.TransformArguments"/> class.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.TransformArguments.#ctor(System.Single,System.Single,System.Single,ThinkGeo.MapSuite.Core.RectangleShape,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ThinkGeo.MapSuite.AndroidEdition.TransformArguments"/> class.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="scale">The scale.</param>
            <param name="processingExtent">The processing extent.</param>
            <param name="centerX">The center x.</param>
            <param name="centerY">The center y.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.TransformArguments.PostScale(System.Single,System.Single,System.Single)">
            <summary>
            Posts the scale.
            </summary>
            <param name="scale">The scale.</param>
            <param name="centerX">The center x.</param>
            <param name="centerY">The center y.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.TransformArguments.PostTranslate(System.Single,System.Single)">
            <summary>
            Posts the translate.
            </summary>
            <param name="offsetX">The offset x.</param>
            <param name="offsetY">The offset y.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.TransformArguments.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.TransformArguments.Set(ThinkGeo.MapSuite.AndroidEdition.TransformArguments)">
            <summary>
            Sets the specified matrix.
            </summary>
            <param name="matrix">The matrix.</param>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.TransformArguments.CenterX">
            <summary>
            Gets or sets the center x.
            </summary>
            <value>The center x.</value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.TransformArguments.CenterY">
            <summary>
            Gets or sets the center y.
            </summary>
            <value>The center y.</value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.TransformArguments.ProcessingExtent">
            <summary>
            Gets or sets the processing extent.
            </summary>
            <value>The processing extent.</value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.TransformArguments.Scale">
            <summary>
            Gets or sets the scale.
            </summary>
            <value>The scale.</value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.TransformArguments.X">
            <summary>
            Gets or sets the x.
            </summary>
            <value>The x.</value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.TransformArguments.Y">
            <summary>
            Gets or sets the y.
            </summary>
            <value>The y.</value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.TransformArguments.Rotation">
            <summary>
            Gets or sets the rotation.
            </summary>
            <value>The rotation.</value>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.BingMapsTileOverlay">
            <summary>
            This class represents an overlay that requesting from Bing Maps Imagery Service.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.BingMapsTileOverlay.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ThinkGeo.MapSuite.AndroidEdition.BingMapsTileOverlay"/> class.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.BingMapsTileOverlay.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ThinkGeo.MapSuite.AndroidEdition.BingMapsTileOverlay"/> class.
            </summary>
            <param name="applicationId">This parameter indicates an application account registered from Bing Maps Account Center.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.BingMapsTileOverlay.DrawTileCore(ThinkGeo.MapSuite.Core.GeoCanvas,ThinkGeo.MapSuite.AndroidEdition.TileView)">
            <summary>
            Redraws a specified tile with the provided world extent.
            </summary>
            <param name="geoCanvas">This parameter is the canvas object to draw on.</param>
            <param name="tile">A Tile object that is created by the GetTile(Context) method to draw.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.BingMapsTileOverlay.GetBoundingBoxCore">
            <summary>
            This method returns the bounding box of the Overlay.
            </summary>
            <returns>This method returns the bounding box of the Overlay.</returns>
            <remarks>This method returns the bounding box of the Overlay.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.BingMapsTileOverlay.GetTileMatrix(System.Double,System.Int32,System.Int32,ThinkGeo.MapSuite.Core.GeographyUnit)">
            <summary>
            Gets the tile matrix.
            </summary>
            <param name="scale">The scale.</param>
            <param name="tileWidth">Width of the tile.</param>
            <param name="tileHeight">Height of the tile.</param>
            <param name="boundingBoxUnit">The bounding box unit.</param>
            <returns>TileMatrix.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.BingMapsTileOverlay.RefreshCore">
            <summary>
            This method refreshes all the content in the OverlayCanvas.
            For example, LayerOverlay with multiple tiles;
            when the style of one layer is changed,
            call Refresh to refresh all the tiles to accept new styles.
            </summary>
            <remarks>The difference from Draw() method is that Refresh() method refreshs all the elements while Draw() does not.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.BingMapsTileOverlay.DrawExceptionCore(ThinkGeo.MapSuite.Core.GeoCanvas,System.Exception)">
            <summary>
            This method will draw on the canvas when the layer.Draw throw exception and
            the DrawExceptionMode is set to DrawException instead of ThrowException.
            </summary>
            <param name="geocanvas">The target canvas to draw the layer.</param>
            <param name="ex">The exception thrown when layer.Draw().</param>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.BingMapsTileOverlay.MapType">
            <summary>
            This property gets or sets the requesting map type from Bing Maps Imagery Service.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.BingMapsTileOverlay.ApplicationId">
            <summary>
            This property gets or sets an application account registered from Bing Maps Imagery Service.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.GoogleMapsTileOverlay">
            <summary>
            This class represents the GoogleMapsOverlay which requests images from Google's
            image server by its StaticAPI.
            </summary>
            <remarks>
            This class represents the GoogleMapsOverlay which requests images from Google's
            image server by its StaticAPI. See <a href="http://code.google.com/apis/maps/signup.html">http://code.google.com/apis/maps/signup.html</a>
            for detail.
            </remarks>
            <requirements>A license key is required; or else Google's image server has usage limits.</requirements>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.GoogleMapsTileOverlay.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ThinkGeo.MapSuite.AndroidEdition.BingMapsTileOverlay"/> class.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.GoogleMapsTileOverlay.#ctor(System.String,System.String,System.String)">
            <summary>
            This is the constructor the for the class.
            </summary>
            <param name="cacheDirectory">The cache directory for the GoogleMapLayer.</param>
            <param name="clientId">The clientId for the GoogleMapLayer.</param>
            <param name="privateKey">The privateKey for the GoogleMapLayer.</param>
            <remarks>This constructor initializes a new layer and assgin a license key.
            </remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.GoogleMapsTileOverlay.#ctor(System.String,System.String,System.String,ThinkGeo.MapSuite.Core.GeoWebProxy)">
             <summary>
             This is the constructor the for the class.
             </summary>
             <remarks>This constructor initializes a new layer and assgin a license key and initilize a cache directory.
             </remarks>
            <param name="cacheDirectory">cache directory which stored the cache image.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.GoogleMapsTileOverlay.DrawTileCore(ThinkGeo.MapSuite.Core.GeoCanvas,ThinkGeo.MapSuite.AndroidEdition.TileView)">
            <summary>
            Redraws a specified tile with the provided world extent.
            </summary>
            <param name="geoCanvas">This parameter is the canvas object to draw on.</param>
            <param name="tile">A Tile object that is created by the GetTile(Context) method to draw.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.GoogleMapsTileOverlay.GetBoundingBoxCore">
            <summary>
            This method returns the bounding box of the Overlay.
            </summary>
            <returns>This method returns the bounding box of the Overlay.</returns>
            <remarks>This method returns the bounding box of the Overlay.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.GoogleMapsTileOverlay.GetTileMatrix(System.Double,System.Int32,System.Int32,ThinkGeo.MapSuite.Core.GeographyUnit)">
            <summary>
            Gets the tile matrix.
            </summary>
            <param name="scale">The scale.</param>
            <param name="tileWidth">Width of the tile.</param>
            <param name="tileHeight">Height of the tile.</param>
            <param name="boundingBoxUnit">The bounding box unit.</param>
            <returns>TileMatrix.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.GoogleMapsTileOverlay.RefreshCore">
            <summary>
            This method refreshes all the content in the OverlayCanvas.
            For example, LayerOverlay with multiple tiles;
            when the style of one layer is changed,
            call Refresh to refresh all the tiles to accept new styles.
            </summary>
            <remarks>The difference from Draw() method is that Refresh() method refreshs all the elements while Draw() does not.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.GoogleMapsTileOverlay.DrawExceptionCore(ThinkGeo.MapSuite.Core.GeoCanvas,System.Exception)">
            <summary>
            This method will draw on the canvas when the layer.Draw throw exception and
            the DrawExceptionMode is set to DrawException instead of ThrowException.
            </summary>
            <param name="geocanvas">The target canvas to draw the layer.</param>
            <param name="ex">The exception thrown when layer.Draw().</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.GoogleMapsTileOverlay.GetPictureFormat">
            <summary>
            Get picture format string which will use for request url.
            </summary>
            <returns>Get picture format string which will use for request url.</returns>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.GoogleMapsTileOverlay.MapType">
            <summary>
            This property gets or sets the requesting map type from Bing Maps Imagery Service.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.GoogleMapsTileOverlay.ClientId">
            <summary>
            Gets or sets a value to access the special features of Google Maps API Premier, you must provide a client
            ID when accessing any of the Premier API libraries or services. When registering for
            Google Maps API Premier, you will receive this client ID from Google Enterprise Support.
            All client IDs begin with a gme- prefix.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.GoogleMapsTileOverlay.PrivateKey">
            <summary>
            Gets or sets a value that is unique to your client ID, please keep your key secure.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.GoogleMapsTileOverlay.PictureFormat">
            <summary>
            Gets or sets a value represents the image format of the image.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.GoogleMapsOverlay">
            <summary>
            This class represents the GoogleMapsOverlay which requests images from Google's
            image server by its StaticAPI.
            </summary>
            <remarks>
            This class represents the GoogleMapsOverlay which requests images from Google's
            image server by its StaticAPI. See <a href="http://code.google.com/apis/maps/signup.html">http://code.google.com/apis/maps/signup.html</a>
            for detail.
            </remarks>
            <requirements>A license key is required; or else Google's image server has usage limits.</requirements>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.GoogleMapsOverlay.#ctor">
            <summary>
            This is the constructor of the class.
            </summary>
            <remarks>If you use this constructor, you have to set the properties manually before use, otherwise it will
            use their default values.</remarks>
            
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.GoogleMapsOverlay.#ctor(System.String,System.String,System.String)">
            <summary>
            This is the constructor the for the class.
            </summary>
            <param name="cacheDirectory">The cacheDirectory for the GoogleMapsOverlay.</param>
            <param name="clientId">The clientId for the GoogleMapsOverlay.</param>
            <param name="privateKey">The privateKey for the GoogleMapsOverlay.</param>
            <remarks>This constructor initializes a new layer and assgin a license key.
            </remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.GoogleMapsOverlay.#ctor(System.String,System.String,System.String,ThinkGeo.MapSuite.Core.GeoWebProxy)">
            <summary>
            This is the constructor the for the class.
            </summary>
            <param name="cacheDirectory">The cacheDirectory for the GoogleMapsOverlay.</param>
            <param name="clientId">The clientId for the GoogleMapsOverlay.</param>
            <param name="privateKey">The privateKey for the GoogleMapsOverlay.</param>
            <remarks>This constructor initializes a new layer and assgin a license key.
            </remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.GoogleMapsOverlay.GetPictureFormatString">
            <summary>
            This method gets a string that represents the picture format from Google Maps.
            </summary>
            <returns>Returns a string representing the picture format from GoogleMaps.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.GoogleMapsOverlay.GetTileCore(Android.Content.Context)">
            <summary>
            This method gets a specific tile object to form an overlay.
            </summary>
            <returns>A Tile object to form an overlay.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.GoogleMapsOverlay.DrawTileCore(ThinkGeo.MapSuite.Core.GeoCanvas,ThinkGeo.MapSuite.AndroidEdition.TileView)">
            <summary>
            Redraws a specified tile with the provided world extent.
            </summary>
            <param name="tile">A tile which needs to be redrawn.</param>
            <param name="geoCanvas">This parameter is the canvas object to draw on.</param>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.GoogleMapsOverlay.TimeoutInSeconds">
            <summary>
            Gets or sets a value represents the request timeout from the GoogleMaps server.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.GoogleMapsOverlay.PictureFormat">
            <summary>
            This property gets or sets the picture format that is returned from the Google service.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.GoogleMapsOverlay.MapType">
            <summary>
            This property gets or sets the map types available from Google Maps.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.GoogleMapsOverlay.ClientId">
            <summary>
            Gets or sets a value to access the special features of Google Maps API Premier, you must provide a client
            ID when accessing any of the Premier API libraries or services. When registering for
            Google Maps API Premier, you will receive this client ID from Google Enterprise Support.
            All client IDs begin with a gme- prefix.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.GoogleMapsOverlay.PrivateKey">
            <summary>
            Gets or sets a value that is unique to your client ID, please keep your key secure.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.GoogleMapsOverlay.CacheDirectory">
            <summary>
            This property gets or sets the tile cache directory.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.GoogleMapsOverlay.WebProxy">
            <summary>
            This property gets or sets the proxy used for requesting a Web Response.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.EditEndedEditInteractiveOverlayEventArgs">
            <summary>
                Provides data for the <see cref="E:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.EditEnded">FeatureEdited</see>
                event.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditEndedEditInteractiveOverlayEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ThinkGeo.MapSuite.AndroidEdition.EditEndedEditInteractiveOverlayEventArgs"/> class.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditEndedEditInteractiveOverlayEventArgs.#ctor(ThinkGeo.MapSuite.Core.Feature)">
            <summary>
            Constructor of EditEndedEditInteractiveOverlayEventArgs class.
            </summary>
            <param name="editedFeature">This parameter specified the feature edit ended.</param>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.EditEndedEditInteractiveOverlayEventArgs.EditedFeature">
            <summary>
            Gets or sets the Feature dragged.
            </summary>
        </member>
        <member name="F:ThinkGeo.MapSuite.AndroidEdition.ExtentChangedType.None">
            <summary>
            Default value for enumeration.
            </summary>
        </member>
        <member name="F:ThinkGeo.MapSuite.AndroidEdition.ExtentChangedType.Pan">
            <summary>
            This enumeration item represents panning action for the extent interativeOverlay.
            </summary>
        </member>
        <member name="F:ThinkGeo.MapSuite.AndroidEdition.ExtentChangedType.TrackZoomIn">
            <summary>
            This enumeration item represents track zoom in action for the extent interativeOverlay.
            </summary>
        </member>
        <member name="F:ThinkGeo.MapSuite.AndroidEdition.ExtentChangedType.TrackZoomOut">
            <summary>
            This enumeration item represents track zoom out action for the extent interativeOverlay.
            </summary>
        </member>
        <member name="F:ThinkGeo.MapSuite.AndroidEdition.ExtentChangedType.DoubleClickZoomIn">
            <summary>
            This enumeration item represents double-click zoom in action for the extent interativeOverlay.
            </summary>
        </member>
        <member name="F:ThinkGeo.MapSuite.AndroidEdition.ExtentChangedType.DoubleClickZoomOut">
            <summary>
            This enumeration item represents double-click zoom out action for the extent interativeOverlay.
            </summary>
        </member>
        <member name="F:ThinkGeo.MapSuite.AndroidEdition.ExtentChangedType.MouseWheelZoomIn">
            <summary>
            This enumeration item represents mouse wheel zoom in action for the extent interativeOverlay.
            </summary>
        </member>
        <member name="F:ThinkGeo.MapSuite.AndroidEdition.ExtentChangedType.MouseWheelZoomOut">
            <summary>
            This enumeration item represents mouse wheel zoom out action for the extent interativeOverlay.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.ExtentInteractiveOverlay">
            <summary>
            This class inherits from InterativeOverlay abstract class. This specified overlay describle the
            Extent Changing interative process with MapControl using Mouse or Keyborad.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.InteractiveOverlay">
            <summary>
            This class inherits from Overlay abstract class. This specified overlay describle the interative
            process with MapControl using Mouse or Keyborad.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.InteractiveOverlay.#ctor">
            <summary>
            Default constructor of this abstract class.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.InteractiveOverlay.InitializeCore(ThinkGeo.MapSuite.AndroidEdition.MapArguments)">
            <summary>
            This protected virtual method is the Core method of Initialize API.
            </summary>
            <param name="mapArguments">This parameter maintains current map information for calculating mechanism.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.InteractiveOverlay.DrawCore(ThinkGeo.MapSuite.AndroidEdition.MapArguments,ThinkGeo.MapSuite.AndroidEdition.OverlayRefreshType)">
            <summary>
            This method draws the InterativeOverlay abstract class.
            You have to override this API in its sub concrete classes, Or you will see nothing.
            </summary>
            <remarks>
             This method draws the representation of the overlay based on the extent you provided.<br/>
            	<br/>
            When implementing this abstract method, consider each feature and its column data
            values. You can use the full power of the GeoCanvas to do the drawing. If you need
            column data for a feature, be sure to override the GetRequiredColumnNamesCore and add
            the columns you need to the collection. In many of the styles, we add properties that
            allow the user to specify which field they need; then, in the GetRequiredColumnNamesCore,
            we read that property and add it to the collection.
            </remarks>
            <param name="mapArguments">This parameter maintains current map information for calculating mechanism.</param>
            <param name="refreshType">
            This parameter indicates whether the elements of this overlay needs to be refreshed.
            For example, TileOverlay is formed by tiles.
            When panning the map around, the existing tile doesn't need to be redraw,
            the only thing we need to do is modifying the position of these tiles.
            On another hand, when click to change the style of the overlay,
            we need to redraw the tile images to change the appearance. So we need refresh mode.
            </param>
            <returns>none</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.InteractiveOverlay.TouchUp(ThinkGeo.MapSuite.AndroidEdition.InteractionArguments)">
            <summary>
            This method will simulate the TouchUp interaction.
            </summary>
            <remarks>
            	<para>This method is the concrete wrapper for its virtual Core method. <br/>
            		<br/>
                As this is a concrete public method that wraps a Core method, we reserve the right
                to add events and other logic to pre- or post-process data returned by the Core version
                of the method. In this way, we leave our framework open on our end, but also allow you
                the developer to extend our logic to suit your needs. If you have questions about this,
                please contact our support team as we would be happy to work with you on extending our
                framework.</para>
            </remarks>
            <param name="e">This parameter is the interaction auguments for the method.</param>
            <returns>Interaction results of this method.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.InteractiveOverlay.TouchUpCore(ThinkGeo.MapSuite.AndroidEdition.InteractionArguments)">
            <summary>
            This protected virtual method is the Core method of TouchUp API.
            </summary>
            <param name="e">This parameter is the interaction auguments for the method.</param>
            <returns>Interaction results of this method.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.InteractiveOverlay.TouchDown(ThinkGeo.MapSuite.AndroidEdition.InteractionArguments)">
            <summary>
            This method will simulate the TouchDown interaction.
            </summary>
            <param name="e">This parameter is the interaction auguments for the method.</param>
            <remarks>
            	<para>This method is the concrete wrapper for its virtual Core method. <br/>
            		<br/>
                As this is a concrete public method that wraps a Core method, we reserve the right
                to add events and other logic to pre- or post-process data returned by the Core version
                of the method. In this way, we leave our framework open on our end, but also allow you
                the developer to extend our logic to suit your needs. If you have questions about this,
                please contact our support team as we would be happy to work with you on extending our
                framework.</para>
            </remarks>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.InteractiveOverlay.TouchDownCore(ThinkGeo.MapSuite.AndroidEdition.InteractionArguments)">
            <summary>
            This protected virtual method is the Core method of TouchDown API.
            </summary>
            <param name="e">This parameter is the interaction auguments for the method.</param>
            <returns>Interaction results of this method.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.InteractiveOverlay.TouchMove(ThinkGeo.MapSuite.AndroidEdition.InteractionArguments)">
            <summary>
            This method will simulate the TouchMove interaction.
            </summary>
            <remarks>
            	<para>This method is the concrete wrapper for its virtual Core method. <br/>
            		<br/>
                As this is a concrete public method that wraps a Core method, we reserve the right
                to add events and other logic to pre- or post-process data returned by the Core version
                of the method. In this way, we leave our framework open on our end, but also allow you
                the developer to extend our logic to suit your needs. If you have questions about this,
                please contact our support team as we would be happy to work with you on extending our
                framework.</para>
            </remarks>
            <param name="e">This parameter is the interaction auguments for the method.</param>
            <returns>Interaction results of this method.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.InteractiveOverlay.TouchMoveCore(ThinkGeo.MapSuite.AndroidEdition.InteractionArguments)">
            <summary>
            This protected virtual method is the Core method of TouchMove API.
            </summary>
            <param name="e">This parameter is the interaction auguments for the method.</param>
            <returns>Interaction results of this method.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.InteractiveOverlay.TouchPointerDown(ThinkGeo.MapSuite.AndroidEdition.InteractionArguments)">
            <summary>
            This method will simulate the TouchPointerDown interaction.
            </summary>
            <remarks>
            	<para>This method is the concrete wrapper for its virtual Core method. <br/>
            		<br/>
                As this is a concrete public method that wraps a Core method, we reserve the right
                to add events and other logic to pre- or post-process data returned by the Core version
                of the method. In this way, we leave our framework open on our end, but also allow you
                the developer to extend our logic to suit your needs. If you have questions about this,
                please contact our support team as we would be happy to work with you on extending our
                framework.</para>
            </remarks>
            <param name="e">This parameter is the interaction auguments for the method.</param>
            <returns>Interaction results of this method.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.InteractiveOverlay.TouchPointerDownCore(ThinkGeo.MapSuite.AndroidEdition.InteractionArguments)">
            <summary>
            This protected virtual method is the Core method of TouchPointerDown API.
            </summary>
            <param name="e">This parameter is the interaction auguments for the method.</param>
            <returns>Interaction results of this method.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.InteractiveOverlay.SingleTap(ThinkGeo.MapSuite.AndroidEdition.InteractionArguments)">
            <summary>
            This method will simulate the SingleTap interaction.
            </summary>
            <remarks>
            	<para>This method is the concrete wrapper for its virtual Core method. <br/>
            		<br/>
                As this is a concrete public method that wraps a Core method, we reserve the right
                to add events and other logic to pre- or post-process data returned by the Core version
                of the method. In this way, we leave our framework open on our end, but also allow you
                the developer to extend our logic to suit your needs. If you have questions about this,
                please contact our support team as we would be happy to work with you on extending our
                framework.</para>
            </remarks>
            <param name="e">This parameter is the interaction auguments for the method.</param>
            <returns>Interaction results of this method.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.InteractiveOverlay.SingleTapCore(ThinkGeo.MapSuite.AndroidEdition.InteractionArguments)">
            <summary>
            This protected virtual method is the Core method of SingleTap API.
            </summary>
            <param name="e">This parameter is the interaction auguments for the method.</param>
            <returns>Interaction results of this method.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.InteractiveOverlay.DoubleTap(ThinkGeo.MapSuite.AndroidEdition.InteractionArguments)">
            <summary>
            This method will simulate the DoubleTap interaction.
            </summary>
            <remarks>
            	<para>This method is the concrete wrapper for its virtual Core method. <br/>
            		<br/>
                As this is a concrete public method that wraps a Core method, we reserve the right
                to add events and other logic to pre- or post-process data returned by the Core version
                of the method. In this way, we leave our framework open on our end, but also allow you
                the developer to extend our logic to suit your needs. If you have questions about this,
                please contact our support team as we would be happy to work with you on extending our
                framework.</para>
            </remarks>
            <param name="e">This parameter is the interaction auguments for the method.</param>
            <returns>Interaction results of this method.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.InteractiveOverlay.DoubleTapCore(ThinkGeo.MapSuite.AndroidEdition.InteractionArguments)">
            <summary>
            This protected virtual method is the Core method of MouseDoubleClick API.
            </summary>
            <param name="e">This parameter is the interaction auguments for the method.</param>
            <returns>Interaction results of this method.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.InteractiveOverlay.LongPress(ThinkGeo.MapSuite.AndroidEdition.InteractionArguments)">
            <summary>
            This method will simulate the LongPress interaction.
            </summary>
            <remarks>
            	<para>This method is the concrete wrapper for its virtual Core method. <br/>
            		<br/>
                As this is a concrete public method that wraps a Core method, we reserve the right
                to add events and other logic to pre- or post-process data returned by the Core version
                of the method. In this way, we leave our framework open on our end, but also allow you
                the developer to extend our logic to suit your needs. If you have questions about this,
                please contact our support team as we would be happy to work with you on extending our
                framework.</para>
            </remarks>
            <param name="e">This parameter is the interaction auguments for the method.</param>
            <returns>Interaction results of this method.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.InteractiveOverlay.LongPressCore(ThinkGeo.MapSuite.AndroidEdition.InteractionArguments)">
            <summary>
             This protected virtual method is the Core method of LongPress API.
            </summary>
            <param name="e">This parameter is the interaction auguments for the method.</param>
            <returns>Interaction results of this method.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.InteractiveOverlay.PostTransformCore(ThinkGeo.MapSuite.AndroidEdition.TransformArguments,ThinkGeo.MapSuite.AndroidEdition.MapArguments)">
            <summary>
            This protected virtual method is the Core method of PostTransform API.
            </summary>
            <param name="transformInfo">This parameter maintains the transfrom information for calculating transform.</param>
            <param name="mapArguments">This parameter maintains current map information for calculating mechanism.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.InteractiveOverlay.Dispose(System.Boolean)">
            <summary>
            This method dispose unmanaged resource used in this class.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.InteractiveOverlay.InteractiveView">
            <summary>
            Gets or sets Overlay's the interactiveView.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.ExtentInteractiveOverlay.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ThinkGeo.MapSuite.AndroidEdition.ExtentInteractiveOverlay"/> class.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.ExtentInteractiveOverlay.TouchDownCore(ThinkGeo.MapSuite.AndroidEdition.InteractionArguments)">
            <summary>
            This protected virtual method is the Core method of TouchDown API.
            </summary>
            <param name="e">This parameter is the interaction auguments for the method.</param>
            <returns>Interaction results of this method.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.ExtentInteractiveOverlay.TouchUpCore(ThinkGeo.MapSuite.AndroidEdition.InteractionArguments)">
            <summary>
            This protected virtual method is the Core method of TouchUp API.
            </summary>
            <param name="e">This parameter is the interaction auguments for the method.</param>
            <returns>Interaction results of this method.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.ExtentInteractiveOverlay.TouchMoveCore(ThinkGeo.MapSuite.AndroidEdition.InteractionArguments)">
            <summary>
            This protected virtual method is the Core method of TouchMove API.
            </summary>
            <param name="e">This parameter is the interaction auguments for the method.</param>
            <returns>Interaction results of this method.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.ExtentInteractiveOverlay.TouchPointerDownCore(ThinkGeo.MapSuite.AndroidEdition.InteractionArguments)">
            <summary>
            This protected virtual method is the Core method of TouchPointerDown API.
            </summary>
            <param name="e">This parameter is the interaction auguments for the method.</param>
            <returns>Interaction results of this method.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.ExtentInteractiveOverlay.DoubleTapCore(ThinkGeo.MapSuite.AndroidEdition.InteractionArguments)">
            <summary>
            This protected virtual method is the Core method of MouseDoubleClick API.
            </summary>
            <param name="e">This parameter is the interaction auguments for the method.</param>
            <returns>Interaction results of this method.</returns>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExtentInteractiveOverlay.DoubleTapMode">
            <summary>
            Gets or sets the double tap mode.
            </summary>
            <value>The double tap mode.</value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExtentInteractiveOverlay.IsInertiallyPanEnabled">
            <summary>
            Gets or sets a value indicating whether this instance is inertially pan enabled.
            </summary>
            <value><c>true</c> if this instance is inertially pan enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExtentInteractiveOverlay.IsBusy">
            <summary>
            Gets a value indicating whether this instance is busy.
            </summary>
            <value><c>true</c> if this instance is busy; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.ExtentInteractiveOverlay.TouchMode">
            <summary>
            Enum TouchMode
            </summary>
        </member>
        <member name="F:ThinkGeo.MapSuite.AndroidEdition.ExtentInteractiveOverlay.TouchMode.NONE">
            <summary>
            The none
            </summary>
        </member>
        <member name="F:ThinkGeo.MapSuite.AndroidEdition.ExtentInteractiveOverlay.TouchMode.DRAG">
            <summary>
            The drag
            </summary>
        </member>
        <member name="F:ThinkGeo.MapSuite.AndroidEdition.ExtentInteractiveOverlay.TouchMode.ZOOM">
            <summary>
            The zoom
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.InteractiveResult">
            <summary>
            This class specifies the InterativeResult when deal with the Interative method in InterativeOverlay.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.InteractiveResult.#ctor">
            <summary>
            Constructor of InteractiveResult class.
            </summary>
            <remarks>If you use this constructor, you have to set the properties manually before use.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.InteractiveResult.#ctor(ThinkGeo.MapSuite.AndroidEdition.InteractiveOverlayDrawType,ThinkGeo.MapSuite.AndroidEdition.ProcessOtherOverlaysMode)">
            <summary>
            Constructor of InteractiveResult class.
            </summary>
            <param name="interactiveOverlayDrawType">This parameter specified the interactiveOverlayDrawType to construct the class.</param>
            <param name="processOtherOverlays">This parameter specified the processOtherOverlays to construct the class.</param>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.InteractiveResult.DrawThisOverlay">
            <summary>
            Gets or sets the DrawThisOverlay type to indicicate to draw this overlay or not.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.InteractiveResult.ProcessOtherOverlaysMode">
            <summary>
            Gets or sets the DrawThisOverlay type to indicicate how to process other overlays.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.InteractiveResult.NewCurrentExtent">
            <summary>
            Gets or sets the new current extent if the interative action affect the extent.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.InteractionArguments">
            <summary>
            This class encapsulates the information and simple method for interative actions.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.InteractionArguments.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ThinkGeo.MapSuite.AndroidEdition.InteractionArguments"/> class.
            </summary>
            <remarks>If you use this constructor, you have to set the properties manually before use.</remarks>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.InteractionArguments.ScreenPointers">
            <summary>
            Gets the screen pointers.
            </summary>
            <value>The screen pointers.</value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.InteractionArguments.MotionEventActions">
            <summary>
            Gets or sets the motion event actions.
            </summary>
            <value>The motion event actions.</value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.InteractionArguments.CurrentExtent">
            <summary>
            Gets or sets the current extent.
            </summary>
            <value>The current extent.</value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.InteractionArguments.ScreenX">
            <summary>
            Gets or sets the screen x.
            </summary>
            <value>The screen x.</value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.InteractionArguments.ScreenY">
            <summary>
            Gets or sets the screen y.
            </summary>
            <value>The screen y.</value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.InteractionArguments.ZoomLevelSet">
            <summary>
            Gets or sets the ZoomLevelSet used in the Map Control.
            </summary>
            <value>The zoom level set.</value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.InteractionArguments.MapWidth">
            <summary>
            Gets or sets the width of the map.
            </summary>
            <value>The width of the map.</value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.InteractionArguments.MapHeight">
            <summary>
            Gets or sets the height of the map.
            </summary>
            <value>The height of the map.</value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.InteractionArguments.Scale">
            <summary>
            Gets or sets the scale.
            </summary>
            <value>The scale.</value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.InteractionArguments.Resolution">
            <summary>
            Gets or sets the resolution.
            </summary>
            <value>The resolution.</value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.InteractionArguments.WorldX">
            <summary>
            Gets or sets the world x.
            </summary>
            <value>The world x.</value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.InteractionArguments.WorldY">
            <summary>
            Gets or sets the world y.
            </summary>
            <value>The world y.</value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.InteractionArguments.SearchingTolerance">
            <summary>
            Gets or sets the searching tolerance.
            </summary>
            <value>The searching tolerance.</value>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.InteractiveOverlayDrawType">
            <summary>
            This enumeration specifies the mode to draw the InterativeOverlay
            when doing interactive actions with InterativeOverlay.
            </summary>
        </member>
        <member name="F:ThinkGeo.MapSuite.AndroidEdition.InteractiveOverlayDrawType.Default">
            <summary>
            Default value of the enumation, the same as DoNotDraw.
            </summary>
        </member>
        <member name="F:ThinkGeo.MapSuite.AndroidEdition.InteractiveOverlayDrawType.Draw">
            <summary>
            This enumeration item means that InterativeOverlay will still be drawn.
            </summary>
        </member>
        <member name="F:ThinkGeo.MapSuite.AndroidEdition.InteractiveOverlayDrawType.DoNotDraw">
            <summary>
            This enumeration item means that InterativeOverlay will still not be drawn.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.MapDoubleTapMode">
            <summary>
            This class specifies MapView DoubleTap.
            </summary>
        </member>
        <member name="F:ThinkGeo.MapSuite.AndroidEdition.MapDoubleTapMode.Default">
            <summary>
            Default value of the enumation.
            </summary>
        </member>
        <member name="F:ThinkGeo.MapSuite.AndroidEdition.MapDoubleTapMode.ZoomIn">
            <summary>
            Value of zoom in the map.
            </summary>
        </member>
        <member name="F:ThinkGeo.MapSuite.AndroidEdition.MapDoubleTapMode.Disabled">
            <summary>
            Value of disable double tap.
            </summary>
        </member>
        <member name="F:ThinkGeo.MapSuite.AndroidEdition.ProcessOtherOverlaysMode.Default">
            <summary>
            Default value of the enumation, the same as ProcessOtherOverlays.
            </summary>
        </member>
        <member name="F:ThinkGeo.MapSuite.AndroidEdition.ProcessOtherOverlaysMode.ProcessOtherOverlays">
            <summary>
            This enumeration item means that other overlays will still be excuted.
            </summary>
        </member>
        <member name="F:ThinkGeo.MapSuite.AndroidEdition.ProcessOtherOverlaysMode.DoNotProcessOtherOverlays">
            <summary>
            This enumeration item means that other overlays will be ignored.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.LayerOverlay">
            <summary>This class represents a group of layers; each layer can be of any layer type.</summary>
            <remarks>This class represents a group of layers; each layer can be of any layer type.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.LayerOverlay.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ThinkGeo.MapSuite.AndroidEdition.LayerOverlay"/> class.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.LayerOverlay.#ctor(System.Collections.Generic.IEnumerable{ThinkGeo.MapSuite.Core.Layer})">
            <summary>
            Initializes a new instance of the <see cref="T:ThinkGeo.MapSuite.AndroidEdition.LayerOverlay"/> class.
            </summary>
            <param name="layers">This parameter indicates a layer collection which needs to be drawn.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.LayerOverlay.GetTileCore(Android.Content.Context)">
            <summary>
            Chooses a tile object to form the TileOverlay.
            When overriding this method, consider the initialize parameters setting on the tile.
            </summary>
            <param name="context">Interface to global information about an application environment.</param>
            <returns>A tile object to form the TileOverlay.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.LayerOverlay.DrawTileCore(ThinkGeo.MapSuite.Core.GeoCanvas,ThinkGeo.MapSuite.AndroidEdition.TileView)">
            <summary>
            Redraws a specified tile with the provided world extent.
            </summary>
            <param name="geoCanvas">This parameter is the canvas object to draw on.</param>
            <param name="tile">A Tile object that is created by the GetTile(Context) method to draw.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.LayerOverlay.GetBoundingBoxCore">
            <summary>
            This method returns the bounding box of the Overlay.
            </summary>
            <returns>This method returns the bounding box of the Overlay.</returns>
            <remarks>This method returns the bounding box of the Overlay.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.LayerOverlay.RefreshCore">
            <summary>
            This method refreshes all the content in the OverlayCanvas.
            For example, LayerOverlay with multiple tiles;
            when the style of one layer is changed,
            call Refresh to refresh all the tiles to accept new styles.
            </summary>
            <remarks>The difference from Draw() method is that Refresh() method refreshs all the elements while Draw() does not.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.LayerOverlay.DrawCore(ThinkGeo.MapSuite.AndroidEdition.MapArguments,ThinkGeo.MapSuite.AndroidEdition.OverlayRefreshType)">
            <summary>
            This method draws the InterativeOverlay abstract class.
            You have to override this API in its sub concrete classes, Or you will see nothing.
            </summary>
            <param name="mapArguments">This parameter maintains current map information for calculating mechanism.</param>
            <param name="refreshType">This parameter indicates whether the elements of this overlay needs to be refreshed.
            For example, TileOverlay is formed by tiles.
            When panning the map around, the existing tile doesn't need to be redraw,
            the only thing we need to do is modifying the position of these tiles.
            On another hand, when click to change the style of the overlay,
            we need to redraw the tile images to change the appearance. So we need refresh mode.</param>
            <returns>none</returns>
            <remarks>This method draws the representation of the overlay based on the extent you provided.<br /><br />
            When implementing this abstract method, consider each feature and its column data
            values. You can use the full power of the GeoCanvas to do the drawing. If you need
            column data for a feature, be sure to override the GetRequiredColumnNamesCore and add
            the columns you need to the collection. In many of the styles, we add properties that
            allow the user to specify which field they need; then, in the GetRequiredColumnNamesCore,
            we read that property and add it to the collection.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.LayerOverlay.OpenCore">
            <summary>
            This protected virtual method is the Core method of Open API.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.LayerOverlay.CloseCore">
            <summary>
            This protected virtual method is the Core method of Close API.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.LayerOverlay.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.LayerOverlay.LockLayerMode">
            <summary>
            This property gets and sets the lock mode while drawing layers.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.LayerOverlay.Layers">
            <summary>
            Gets a GeoCollection that contains the layers that will draw on the image.
            </summary>
            <value>A GeoCollection of layers.</value>
            <remarks>
            The <strong>Layers</strong> property holds all of the layers that are used by the
            <strong>Draw</strong> method. The Draw method loops through all layers to filter
            out features and draw on the image with the specified styles.
            </remarks>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.LayerOverlay.IsEmpty">
            <summary>
            This property gets if this overlay is empty or not.
            </summary>
            <value><c>true</c> if this instance is empty; otherwise, <c>false</c>.</value>
            <remarks>This property enhances the performance of the overlay while drawing.
            If is true, we will skip drawing this overlay and continue drawing the next overlay.</remarks>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.LayerTileView">
            <summary>
            This class represents the base class of tile which is the element to form tile overlay.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.LayerTileView.#ctor(Android.Content.Context)">
            <summary>
            Initializes a new instance of the <see cref="T:ThinkGeo.MapSuite.AndroidEdition.LayerTileView"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.LayerTileView.DrawCore(ThinkGeo.MapSuite.Core.GeoCanvas)">
            <summary>
            This method draws the image for the tile.
            </summary>
            <param name="geoCanvas">This parameter is the canvas object to draw on.</param>
            <remarks>When implementing this abstract method, consider if the IsAsync property.
            If yes, draw it in background thread;
            If no, draw it directly with the properties we provid.</remarks>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.LayerTileView.Layers">
            <summary>
            Gets a Collection that contains the layers that will draw on the tile.
            </summary>
            <value>A GeoCollection of layers.</value>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.LockLayerMode">
            <summary>
            This enum represents the lock mode while drawing layers.
            </summary>
        </member>
        <member name="F:ThinkGeo.MapSuite.AndroidEdition.LockLayerMode.Lock">
            <summary>
            This value indicates the layers will be locked while drawing.
            </summary>
        </member>
        <member name="F:ThinkGeo.MapSuite.AndroidEdition.LockLayerMode.DoNotLock">
            <summary>
            This value indicates the layers will be cloned before drawing;
            and use the cloned layer to draw without locking.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.MapBoxTileOverlay">
            <summary>
            Class MapBoxTileOverlay.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapBoxTileOverlay.#cctor">
            <summary>
            Initializes static members of the <see cref="T:ThinkGeo.MapSuite.AndroidEdition.MapBoxTileOverlay"/> class.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapBoxTileOverlay.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ThinkGeo.MapSuite.AndroidEdition.MapBoxTileOverlay"/> class.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapBoxTileOverlay.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ThinkGeo.MapSuite.AndroidEdition.MapBoxTileOverlay"/> class.
            </summary>
            <param name="accessToken">The access token.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapBoxTileOverlay.DrawTileCore(ThinkGeo.MapSuite.Core.GeoCanvas,ThinkGeo.MapSuite.AndroidEdition.TileView)">
            <summary>
            Redraws a specified tile with the provided geoCanvas.
            </summary>
            <param name="geoCanvas">The geo canvas.</param>
            <param name="tile">A Tile object that is created by the GetTile() method to draw.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapBoxTileOverlay.GetBoundingBoxCore">
            <summary>
            Gets the bounding box core.
            </summary>
            <returns>RectangleShape.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapBoxTileOverlay.GetTileMatrix(System.Double,System.Int32,System.Int32,ThinkGeo.MapSuite.Core.GeographyUnit)">
            <summary>
            Gets the tile matrix for TileOverlay.
            </summary>
            <param name="scale">The scale.</param>
            <param name="tileWidth">Width of the tile.</param>
            <param name="tileHeight">Height of the tile.</param>
            <param name="boundingBoxUnit">The bounding box unit.</param>
            <returns>TileMatrix.</returns>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MapBoxTileOverlay.MapId">
            <summary>
            Gets or sets the map identifier.
            </summary>
            <value>The map identifier.</value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MapBoxTileOverlay.AccessToken">
            <summary>
            Gets or sets the access token.
            </summary>
            <value>The access token.</value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MapBoxTileOverlay.ImageFormat">
            <summary>
            Gets or sets the image format.
            </summary>
            <value>The image format.</value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MapBoxTileOverlay.TileCache">
            <summary>
            Gets or sets the tile cache.
            </summary>
            <value>The tile cache.</value>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.MapBoxTileOverlay.MapBoxTileMatrix">
            <summary>
            Class MapBoxTileMatrix.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapBoxTileOverlay.MapBoxTileMatrix.#ctor(System.Double,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ThinkGeo.MapSuite.AndroidEdition.MapBoxTileOverlay.MapBoxTileMatrix"/> class.
            </summary>
            <param name="scale">The scale.</param>
            <param name="tileWidth">Width of the tile.</param>
            <param name="tileHeight">Height of the tile.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapBoxTileOverlay.MapBoxTileMatrix.#ctor(System.String,System.Double,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ThinkGeo.MapSuite.AndroidEdition.MapBoxTileOverlay.MapBoxTileMatrix"/> class.
            </summary>
            <param name="id">The identifier.</param>
            <param name="scale">The scale.</param>
            <param name="tileWidth">Width of the tile.</param>
            <param name="tileHeight">Height of the tile.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MapBoxTileOverlay.MapBoxTileMatrix.GetResolutionFromScale(System.Double)">
            <summary>
            This method will get resolution from scale and can be overridden.
            </summary>
            <param name="scale">This parameter specifies the target scale to get resolution from.</param>
            <returns>Returns the resolution corresponding to the passed in scale.</returns>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.MapBoxMapId">
            <summary>
            Enum MapBoxMapId
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.MapBoxImageFormat">
            <summary>
            Enum MapBoxImageFormat
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.Marker">
            <summary>
            Represents a marker control on the map.
            </summary>
            <remarks>
            Options for scaling the bounds of an image to the bounds of this view.
            [Android Documentation]
            </remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.Marker.#ctor(Android.Content.Context)">
            <summary>
            Initializes a new instance of the <see cref="T:ThinkGeo.MapSuite.AndroidEdition.Marker"/> class.
            </summary>
            <param name="context">Interface to global information about an application environment.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.Marker.OnMeasure(System.Int32,System.Int32)">
            <summary>
            Called when [measure].
            </summary>
            <param name="widthMeasureSpec">horizontal space requirements as imposed by the parent.
            The requirements are encoded with
            <c><see cref="T:Android.Views.View+MeasureSpec" /></c>.</param>
            <param name="heightMeasureSpec">vertical space requirements as imposed by the parent.
            The requirements are encoded with
            <c><see cref="T:Android.Views.View+MeasureSpec" /></c>.</param>
            <since version="Added in API level 1" />
            <altmember cref="P:Android.Views.View.MeasuredWidth" />
            <altmember cref="P:Android.Views.View.MeasuredHeight" />
            <altmember cref="M:Android.Views.View.SetMeasuredDimension(System.Int32, System.Int32)" />
            <altmember cref="M:Android.Views.View.get_SuggestedMinimumHeight" />
            <altmember cref="M:Android.Views.View.get_SuggestedMinimumWidth" />
            <altmember cref="M:Android.Views.View.MeasureSpec.GetMode(System.Int32)" />
            <altmember cref="M:Android.Views.View.MeasureSpec.GetSize(System.Int32)" />
            <remarks><para tool="javadoc-to-mdoc" />
            <para tool="javadoc-to-mdoc">
            Measure the view and its content to determine the measured width and the
            measured height. This method is invoked by <c><see cref="M:Android.Views.View.Measure(System.Int32, System.Int32)" /></c> and
            should be overriden by subclasses to provide accurate and efficient
            measurement of their contents.
            </para>
            <para tool="javadoc-to-mdoc">
              <i>CONTRACT:</i> When overriding this method, you
            <i>must</i> call <c><see cref="M:Android.Views.View.SetMeasuredDimension(System.Int32, System.Int32)" /></c> to store the
            measured width and height of this view. Failure to do so will trigger an
            <c>IllegalStateException</c>, thrown by
            <c><see cref="M:Android.Views.View.Measure(System.Int32, System.Int32)" /></c>. Calling the superclass'
            <c><see cref="M:Android.Views.View.OnMeasure(System.Int32, System.Int32)" /></c> is a valid use.
            </para>
            <para tool="javadoc-to-mdoc">
            The base class implementation of measure defaults to the background size,
            unless a larger size is allowed by the MeasureSpec. Subclasses should
            override <c><see cref="M:Android.Views.View.OnMeasure(System.Int32, System.Int32)" /></c> to provide better measurements of
            their content.
            </para>
            <para tool="javadoc-to-mdoc">
            If this method is overridden, it is the subclass's responsibility to make
            sure the measured height and width are at least the view's minimum height
            and width (<c><see cref="M:Android.Views.View.get_SuggestedMinimumHeight" /></c> and
            <c><see cref="M:Android.Views.View.get_SuggestedMinimumWidth" /></c>).
            </para>
            <para tool="javadoc-to-mdoc">
              <format type="text/html">
                <a href="http://developer.android.com/reference/android/view/View.html#onMeasure(int, int)" target="_blank">[Android Documentation]</a>
              </format>
            </para></remarks>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.Marker.Position">
            <summary>
            World Position of marker. It's a wrapper of the PositionProperty.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.Marker.XOffset">
            <summary>
            Gets or sets the x offset of marker image.
            </summary>
            <value>The x offset.</value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.Marker.YOffset">
            <summary>
            Gets or sets the y offset of marker image.
            </summary>
            <value>The y offset.</value>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.MarkerOverlay">
            <summary>
            This class represents an overlay which maintaining markers.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MarkerOverlay.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ThinkGeo.MapSuite.AndroidEdition.MarkerOverlay"/> class.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MarkerOverlay.DrawCore(ThinkGeo.MapSuite.AndroidEdition.MapArguments,ThinkGeo.MapSuite.AndroidEdition.OverlayRefreshType)">
            <summary>
            This method creates markers in the provided world extent and places on the overlay.
            </summary>
            <param name="mapArguments">This parameter maintains current map information for calculating mechanism.</param>
            <param name="overlayRefreshType">This parameter indicates if the elements in the overlay needs to be refreshed.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MarkerOverlay.PostTransformCore(ThinkGeo.MapSuite.AndroidEdition.TransformArguments,ThinkGeo.MapSuite.AndroidEdition.MapArguments)">
            <summary>
            This protected virtual method is the Core method of PostTransform API.
            </summary>
            <param name="transformInfo">This parameter maintains the transfrom information for calculating transform.</param>
            <param name="mapArguments">This parameter maintains current map information for calculating mechanism.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MarkerOverlay.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MarkerOverlay.Markers">
            <summary>
            A collection that holds all the marker objects adding in the overlay.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay">
            <summary>
            This class inherits from InterativeOverlay abstract class. This specified overlay describle the
            EditShape interative process with MapControl using Mouse or Keyborad.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.#ctor">
            <summary>
            Default constructor of the class.
            
            If you use thi constructor, please set the properties correctly or it will
            use their default values.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.DrawCore(ThinkGeo.MapSuite.AndroidEdition.MapArguments,ThinkGeo.MapSuite.AndroidEdition.OverlayRefreshType)">
            <summary>This method draws the EditInterativeOverlay.</summary>
            <remarks>
             This method draws the representation of the overlay based on the extent you provided.<br/>
            	<br/>
            When implementing this abstract method, consider each feature and its column data
            values. You can use the full power of the GeoCanvas to do the drawing. If you need
            column data for a feature, be sure to override the GetRequiredColumnNamesCore and add
            the columns you need to the collection. In many of the styles, we add properties that
            allow the user to specify which field they need; then, in the GetRequiredColumnNamesCore,
            we read that property and add it to the collection.
            </remarks>
            <param name="mapArguments">This parameter is the arguments for current map.</param>
            <param name="refreshType">This parameter is current refreshType, could be pan or redraw.</param>
            <returns>None</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.SetSelectedControlPoint(ThinkGeo.MapSuite.Core.PointShape,System.Double)">
             <summary>This protected method is to set the control point.</summary>
             <returns>Returns true if control point are found and set correct, other wise, returns false.</returns>
             <exception cref="T:System.ArgumentNullException" caption="ArgumentNullException">If you pass a null as the targetPointShape, we will throw an ArgumentNullException.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException" caption="ArgumentOutOfRangeException">If you pass a minus value for the tolerance, we will throw an ArgumentOutOfRangeException.</exception>
             <param name="targetPointShape">This parameter is target point shape we determine to edit.</param>
             <param name="searchingTolerance">This parameter is the searchinig tolerance to seach the control point.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.SetSelectedControlPointCore(ThinkGeo.MapSuite.Core.PointShape,System.Double)">
             <summary>This protected virtual method is the Core method of SetSelectedControlPoint API.</summary>
             <returns>A feature stands for the selected control point.</returns>
             <exception cref="T:System.ArgumentNullException" caption="ArgumentNullException">If you pass a null as the targetPointShape, we will throw an ArgumentNullException.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException" caption="ArgumentOutOfRangeException">If you pass a minus value for the tolerance, we will throw an ArgumentOutOfRangeException.</exception>
             <param name="targetPointShape">This parameter is target point shape we determine to edit.</param>
             <param name="searchingTolerance">This parameter is the searchinig tolerance to seach the control point.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.EndEditing(ThinkGeo.MapSuite.Core.PointShape)">
            <summary>
             This method End the editing for the interative editing on the feature in the EditShapesLayer.
             You can override its logic by rewrite its core method.
             </summary>
             <param name="targetPointShape">This is the targetPointShape possible be used when overriding.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.EndEditingCore(ThinkGeo.MapSuite.Core.PointShape)">
            <summary>
            This is the core method of EndEditing method.
            This method End the editing for the interative editing on the feature in the EditShapesLayer.
            </summary>
            <param name="targetPointShape">This is the targetPointShape possible be used when overriding.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.ClearAllControlPoints">
            <summary>
            This method clears all control points in corresponding layer.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.CalculateAllControlPoints">
            <summary>
            This method calculates all control points.
            </summary>
            <remarks>First, it will clear all control points. Then it will calculate each control points according to their settings.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.CalculateDragControlPoints">
            <summary>
            This method caculates the Drag control points for all the features in the EditShapesLayer.
            You can override its logic by rewrite its core method.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.CalculateDragControlPointsCore(ThinkGeo.MapSuite.Core.Feature)">
            <summary>
            This is the core API for the CalculateDragControlPoints, you can override this method 
            if you want to change its logic.
            </summary>
            <param name="feature">The target feature to caculate the control point.</param>
            <returns>A collection of features stands for the Drag control points.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.CalculateRotateControlPoints">
            <summary>
            This method caculates the Rotate control points for all the features in the EditShapesLayer.
            You can override its logic by rewrite its core method.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.CalculateRotateControlPointsCore(ThinkGeo.MapSuite.Core.Feature)">
            <summary>
            This is the core API for the CalculateRotateControlPoints, you can override this method 
            if you want to change its logic.
            </summary>
            <param name="feature">The target feature to caculate the control point.</param>
            <returns>A collection of features stands for the Rotate control points.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.CalculateResizeControlPoints">
            <summary>
            This method caculates the Resize control points for all the features in the EditShapesLayer.
            You can override its logic by rewrite its core method.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.CalculateResizeControlPointsCore(ThinkGeo.MapSuite.Core.Feature)">
            <summary>
            This is the core API for the CalculateResizeControlPoints, you can override this method 
            if you want to change its logic.
            </summary>
            <param name="feature">The target feature to caculate the control point.</param>
            <returns>A collection of features stands for the Resize control points.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.CalculateVertexControlPoints">
            <summary>
            This method caculates the vertex control points for all the features in the EditShapesLayer.
            You can override its logic by rewrite its core method.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.CalculateVertexControlPointsCore(ThinkGeo.MapSuite.Core.Feature)">
            <summary>
            This is the core API for the CalculateVertexControlPoints, you can override this method 
            if you want to change its logic.
            </summary>
            <param name="feature">The target feature to caculate the control point.</param>
            <returns>A collection of features stands for the Vertex control points.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.TouchDownCore(ThinkGeo.MapSuite.AndroidEdition.InteractionArguments)">
            <summary>This overrides the MouseDown logic in its base class InterativeOverlay.</summary>
            <returns>Interaction results of this method.</returns>
            <exception cref="T:System.ArgumentNullException" caption="ArgumentNullException">If you pass a null as the interactionArguments, we will throw an ArgumentNullException.</exception>
            <param name="interactionArguments">This parameter is the interaction auguments for the method.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.TouchMoveCore(ThinkGeo.MapSuite.AndroidEdition.InteractionArguments)">
            <summary>This overrides the MouseMove logic in its base class InterativeOverlay.</summary>
            <returns>Interaction results of this method.</returns>
            <exception cref="T:System.ArgumentNullException" caption="ArgumentNullException">If you pass a null as the interactionArguments, we will throw an ArgumentNullException.</exception>
            <param name="interactionArguments">This parameter is the interaction auguments for the method.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.TouchUpCore(ThinkGeo.MapSuite.AndroidEdition.InteractionArguments)">
            <summary>This overrides the MouseUp logic in its base class InterativeOverlay.</summary>
            <returns>Interaction results of this method.</returns>
            <exception cref="T:System.ArgumentNullException" caption="ArgumentNullException">If you pass a null as the interactionArguments, we will throw an ArgumentNullException.</exception>
            <param name="interactionArguments">This parameter is the interaction auguments for the method.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.SingleTapCore(ThinkGeo.MapSuite.AndroidEdition.InteractionArguments)">
            <summary>This overrides the MouseClick logic in its base class.</summary>
            <returns>Interaction results of this method.</returns>
            <exception cref="T:System.ArgumentNullException" caption="ArgumentNullException">If you pass a null as the interactionArguments, we will throw an ArgumentNullException.</exception>
            <param name="interactionArguments">This parameter is the interaction auguments for the method.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.DragFeature(ThinkGeo.MapSuite.Core.Feature,ThinkGeo.MapSuite.Core.PointShape,ThinkGeo.MapSuite.Core.PointShape)">
            <summary>
            This is the method to Drag a feature.
            </summary>
            /// <remarks>
            	<para>This method is the concrete wrapper for the abstract method DragFeatureCore.<br/>
            		<br/>
                As this is a concrete public method that wraps a Core method, we reserve the right
                to add events and other logic to pre- or post-process data returned by the Core version
                of the method. In this way, we leave our framework open on our end, but also allow you
                the developer to extend our logic to suit your needs. If you have questions about this,
                please contact our support team as we would be happy to work with you on extending our
                framework.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException" caption="ArgumentNullException">If you pass a null as the sourceControlPoint, we will throw an ArgumentNullException.</exception>
            <exception cref="T:System.ArgumentNullException" caption="ArgumentNullException">If you pass a null as the targetControlPoint, we will throw an ArgumentNullException.</exception>
            <param name="sourceFeature">This parameter specifies the source feature to be dragged.</param>
            <param name="sourceControlPoint">This parameter specifes the source control point to drag the feature.</param>
            <param name="targetControlPoint">This parameter specifes the target control point to drag the feature.</param>
            <returns>Returns a dragged feature.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.DragFeatureCore(ThinkGeo.MapSuite.Core.Feature,ThinkGeo.MapSuite.Core.PointShape,ThinkGeo.MapSuite.Core.PointShape)">
            <summary>
            This is the Core method of DragFeature which encapsulate the logic.
            </summary>
            <exception cref="T:System.ArgumentNullException" caption="ArgumentNullException">If you pass a null as the sourceControlPoint, we will throw an ArgumentNullException.</exception>
            <exception cref="T:System.ArgumentNullException" caption="ArgumentNullException">If you pass a null as the targetControlPoint, we will throw an ArgumentNullException.</exception>
            <param name="sourceFeature">This parameter specifies the source feature to be dragged.</param>
            <param name="sourceControlPoint">This parameter specifes the source control point to drag the feature.</param>
            <param name="targetControlPoint">This parameter specifes the target control point to drag the feature.</param>
            <returns>Returns a dragged feature.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.ResizeFeature(ThinkGeo.MapSuite.Core.Feature,ThinkGeo.MapSuite.Core.PointShape,ThinkGeo.MapSuite.Core.PointShape)">
            <summary>
            This is the method to Resize a feature.
            </summary>
            /// <remarks>
            	<para>This method is the concrete wrapper for the abstract method ResizeFeatureCore.<br/>
            		<br/>
                As this is a concrete public method that wraps a Core method, we reserve the right
                to add events and other logic to pre- or post-process data returned by the Core version
                of the method. In this way, we leave our framework open on our end, but also allow you
                the developer to extend our logic to suit your needs. If you have questions about this,
                please contact our support team as we would be happy to work with you on extending our
                framework.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException" caption="ArgumentNullException">If you pass a null as the sourceControlPoint, we will throw an ArgumentNullException.</exception>
            <exception cref="T:System.ArgumentNullException" caption="ArgumentNullException">If you pass a null as the targetControlPoint, we will throw an ArgumentNullException.</exception>
            <param name="sourceFeature">This parameter specifies the source feature to be resized.</param>
            <param name="sourceControlPoint">This parameter specifes the source control point to resize the feature.</param>
            <param name="targetControlPoint">This parameter specifes the target control point to resize the feature.</param>
            <returns>Returns a resized feature.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.ResizeFeatureCore(ThinkGeo.MapSuite.Core.Feature,ThinkGeo.MapSuite.Core.PointShape,ThinkGeo.MapSuite.Core.PointShape)">
            <summary>
            This is the Core method of ResizeFeature which encapsulate the logic.
            </summary>
            <exception cref="T:System.ArgumentNullException" caption="ArgumentNullException">If you pass a null as the sourceControlPoint, we will throw an ArgumentNullException.</exception>
            <exception cref="T:System.ArgumentNullException" caption="ArgumentNullException">If you pass a null as the targetControlPoint, we will throw an ArgumentNullException.</exception>
            <param name="sourceFeature">This parameter specifies the source feature to be resized.</param>
            <param name="sourceControlPoint">This parameter specifes the source control point to resize the feature.</param>
            <param name="targetControlPoint">This parameter specifes the target control point to resize the feature.</param>
            <returns>Returns a resized feature.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.RotateFeature(ThinkGeo.MapSuite.Core.Feature,ThinkGeo.MapSuite.Core.PointShape,ThinkGeo.MapSuite.Core.PointShape)">
            <summary>
            This is the method to Rotate a feature.
            </summary>
            /// <remarks>
            	<para>This method is the concrete wrapper for the abstract method RotateFeatureCore.<br/>
            		<br/>
                As this is a concrete public method that wraps a Core method, we reserve the right
                to add events and other logic to pre- or post-process data returned by the Core version
                of the method. In this way, we leave our framework open on our end, but also allow you
                the developer to extend our logic to suit your needs. If you have questions about this,
                please contact our support team as we would be happy to work with you on extending our
                framework.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException" caption="ArgumentNullException">If you pass a null as the sourceControlPoint, we will throw an ArgumentNullException.</exception>
            <exception cref="T:System.ArgumentNullException" caption="ArgumentNullException">If you pass a null as the targetControlPoint, we will throw an ArgumentNullException.</exception>
            <param name="sourceFeature">This parameter specifies the source feature to be rotated.</param>
            <param name="sourceControlPoint">This parameter specifes the source control point to rotate the feature.</param>
            <param name="targetControlPoint">This parameter specifes the target control point to rotate the feature.</param>
            <returns>Returns a rotated feature.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.RotateFeatureCore(ThinkGeo.MapSuite.Core.Feature,ThinkGeo.MapSuite.Core.PointShape,ThinkGeo.MapSuite.Core.PointShape)">
            <summary>
            This is the Core method of RotateFeature which encapsulate the logic.
            </summary>
            <exception cref="T:System.ArgumentNullException" caption="ArgumentNullException">If you pass a null as the sourceControlPoint, we will throw an ArgumentNullException.</exception>
            <exception cref="T:System.ArgumentNullException" caption="ArgumentNullException">If you pass a null as the targetControlPoint, we will throw an ArgumentNullException.</exception>
            <param name="sourceFeature">This parameter specifies the source feature to be rotated.</param>
            <param name="sourceControlPoint">This parameter specifes the source control point to rotate the feature.</param>
            <param name="targetControlPoint">This parameter specifes the target control point to rotate the feature.</param>
            <returns>Returns a resized feature.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.AddVertex(ThinkGeo.MapSuite.Core.PointShape,System.Double)">
            <summary>
            This is the method to add vertex from a feature.
            </summary>
            /// <remarks>
            	<para>This method is the concrete wrapper for the abstract method AddVertexCore.<br/>
            		<br/>
                As this is a concrete public method that wraps a Core method, we reserve the right
                to add events and other logic to pre- or post-process data returned by the Core version
                of the method. In this way, we leave our framework open on our end, but also allow you
                the developer to extend our logic to suit your needs. If you have questions about this,
                please contact our support team as we would be happy to work with you on extending our
                framework.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException" caption="ArgumentNullException">If you pass a null as the targetPointShape, we will throw an ArgumentNullException.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException" caption="ArgumentOutOfRangeException">If you pass a searchingTolerance negative value, we will throw an ArgumentOutOfRangeException.</exception>
            <param name="targetPointShape">This parameter specifies the point shape to search the vertex.</param>
            <param name="searchingTolerance">This parameter specifes the searching tolerance to search the vetex.</param>
            <returns>True if add vertex succeed , other wise return false.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.AddVertexCore(ThinkGeo.MapSuite.Core.Feature,ThinkGeo.MapSuite.Core.PointShape,System.Double)">
            <summary>
            This is the Core method of AddVertex which encapsulate the logic.
            </summary>
            <exception cref="T:System.ArgumentNullException" caption="ArgumentNullException">If you pass a null as the targetPointShape, we will throw an ArgumentNullException.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException" caption="ArgumentOutOfRangeException">If you pass a searchingTolerance negative value, we will throw an ArgumentOutOfRangeException.</exception>
            <param name="targetPointShape">This parameter specifies the target vertex to be added.</param>
            <param name="searchingTolerance">This parameter specifes the searching tolerance to search the vetex.</param>
            <param name="targetFeature">This parameter specifies the target feature to be add vertex from.</param>
            <returns>Returns a vertex added feature.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.MoveVertex(ThinkGeo.MapSuite.Core.Feature,ThinkGeo.MapSuite.Core.PointShape,ThinkGeo.MapSuite.Core.PointShape)">
            <summary>
            This is the method to move vertex from a feature.
            </summary>
            /// <remarks>
            	<para>This method is the concrete wrapper for the abstract method MoveVertexCore.<br/>
            		<br/>
                As this is a concrete public method that wraps a Core method, we reserve the right
                to add events and other logic to pre- or post-process data returned by the Core version
                of the method. In this way, we leave our framework open on our end, but also allow you
                the developer to extend our logic to suit your needs. If you have questions about this,
                please contact our support team as we would be happy to work with you on extending our
                framework.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException" caption="ArgumentNullException">If you pass a null as the sourceControlPoint, we will throw an ArgumentNullException.</exception>
            <exception cref="T:System.ArgumentNullException" caption="ArgumentNullException">If you pass a null as the targetControlPoint, we will throw an ArgumentNullException.</exception>
            <param name="sourceFeature">This parameter specifies the source feature to be move vertex from.</param>
            <param name="sourceControlPoint">This parameter specifes the source control point to move vertex from the feature.</param>
            <param name="targetControlPoint">This parameter specifes the target control point to move vertex from the feature.</param>
            <returns>Returns a rotated feature.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.MoveVertexCore(ThinkGeo.MapSuite.Core.Feature,ThinkGeo.MapSuite.Core.PointShape,ThinkGeo.MapSuite.Core.PointShape)">
            <summary>
            This is the Core method of MoveVertex which encapsulate the logic.
            </summary>
            <exception cref="T:System.ArgumentNullException" caption="ArgumentNullException">If you pass a null as the sourceControlPoint, we will throw an ArgumentNullException.</exception>
            <exception cref="T:System.ArgumentNullException" caption="ArgumentNullException">If you pass a null as the targetControlPoint, we will throw an ArgumentNullException.</exception>
            <param name="sourceFeature">This parameter specifies the source feature to be move vertex from.</param>
            <param name="sourceControlPoint">This parameter specifes the source control point to move vertex from the feature.</param>
            <param name="targetControlPoint">This parameter specifes the target control point to move vertex from the feature.</param>
            <returns>Returns a vertex moved feature.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.RemoveVertex(ThinkGeo.MapSuite.Core.PointShape,System.Double)">
            <summary>
            This is the method to remove vertex from a feature.
            </summary>
            /// <remarks>
            	<para>This method is the concrete wrapper for the abstract method RemoveVertexCore.<br/>
            		<br/>
                As this is a concrete public method that wraps a Core method, we reserve the right
                to add events and other logic to pre- or post-process data returned by the Core version
                of the method. In this way, we leave our framework open on our end, but also allow you
                the developer to extend our logic to suit your needs. If you have questions about this,
                please contact our support team as we would be happy to work with you on extending our
                framework.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException" caption="ArgumentNullException">If you pass a null as the targetPointShape, we will throw an ArgumentNullException.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException" caption="ArgumentOutOfRangeException">If you pass a searchingTolerance negative value, we will throw an ArgumentOutOfRangeException.</exception>
            <param name="targetPointShape">This parameter specifies the point shape to search the vertex.</param>
            <param name="searchingTolerance">This parameter specifes the searching tolerance to search the vetex.</param>
            <returns>True if remove vertex succeed , other wise return false.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.RemoveVertexCore(ThinkGeo.MapSuite.Core.Feature,ThinkGeo.MapSuite.Core.Vertex,System.Double)">
            <summary>
            This is the Core method of RemoveVertex which encapsulate the logic.
            </summary>
            <exception cref="T:System.ArgumentNullException" caption="ArgumentNullException">If you pass a null as the targetPointShape, we will throw an ArgumentNullException.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException" caption="ArgumentOutOfRangeException">If you pass a searchingTolerance negative value, we will throw an ArgumentOutOfRangeException.</exception>
            <param name="selectedVertex">This parameter specifies the selected vertex to search the vertex.</param>
            <param name="searchingTolerance">This parameter specifes the searching tolerance to search the vetex.</param>
            <param name="editShapeFeature">This parameter specifies the target feature to be remove vertex from.</param>
            <returns>Returns a vertex removed feature.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.OnFeatureDragging(ThinkGeo.MapSuite.AndroidEdition.FeatureDraggingEditInteractiveOverlayEventArgs)">
            <summary>
            This event will be fired before dragging the feature.
            </summary>
            <param name="e">The FeatureDraggingEditInteractiveOverlayEventArgs passed for the event raised. </param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.OnFeatureDragged(ThinkGeo.MapSuite.AndroidEdition.FeatureDraggedEditInteractiveOverlayEventArgs)">
            <summary>
            This event will be fired after dragging the feature.
            </summary>
            <param name="e">The FeatureDraggedEditInteractiveOverlayEventArgs passed for the event raised. </param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.OnFeatureResizing(ThinkGeo.MapSuite.AndroidEdition.FeatureResizingEditInteractiveOverlayEventArgs)">
            <summary>
            This event will be fired before resizing the feature.
            </summary>
            <param name="e">The FeatureResizingEditInteractiveOverlayEventArgs passed for the event raised. </param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.OnFeatureResized(ThinkGeo.MapSuite.AndroidEdition.FeatureResizedEditInteractiveOverlayEventArgs)">
            <summary>
            This event will be fired after resizing the feature.
            </summary>
            <param name="e">The FeatureResizedEditInteractiveOverlayEventArgs passed for the event raised. </param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.OnFeatureRotating(ThinkGeo.MapSuite.AndroidEdition.FeatureRotatingEditInteractiveOverlayEventArgs)">
            <summary>
            This event will be fired before rotating the feature.
            </summary>
            <param name="e">The FeatureRotatingEditInteractiveOverlayEventArgs passed for the event raised. </param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.OnFeatureRotated(ThinkGeo.MapSuite.AndroidEdition.FeatureRotatedEditInteractiveOverlayEventArgs)">
            <summary>
            This event will be fired after rotating the feature.
            </summary>
            <param name="e">The FeatureRotatedEditInteractiveOverlayEventArgs passed for the event raised. </param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.OnControlPointSelecting(ThinkGeo.MapSuite.AndroidEdition.ControlPointSelectingEditInteractiveOverlayEventArgs)">
            <summary>
            This event will be fired before control point selected.
            </summary>
            <param name="e">The ControlPointSelectingEditInteractiveOverlayEventArgs passed for the event raised. </param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.OnControlPointSelected(ThinkGeo.MapSuite.AndroidEdition.ControlPointSelectedEditInteractiveOverlayEventArgs)">
            <summary>
            This event will be fired after control point selected.
            </summary>
            <param name="e">The ControlPointSelectedEditInteractiveOverlayEventArgs passed for the event raised. </param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.OnVertexAdding(ThinkGeo.MapSuite.AndroidEdition.VertexAddingEditInteractiveOverlayEventArgs)">
            <summary>
            This event will be fired before vertex added to the edit feature.
            </summary>
            <param name="e">The VertexAddingEditInteractiveOverlayEventArgs passed for the event raised. </param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.OnVertexAdded(ThinkGeo.MapSuite.AndroidEdition.VertexAddedEditInteractiveOverlayEventArgs)">
            <summary>
            This event will be fired after vertex added to the edit feature.
            </summary>
            <param name="e">The VertexAddedEditInteractiveOverlayEventArgs passed for the event raised. </param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.OnVertexMoving(ThinkGeo.MapSuite.AndroidEdition.VertexMovingEditInteractiveOverlayEventArgs)">
            <summary>
            This event will be fired before moving the feature.
            </summary>
            <param name="e">The VertexMovingEditInteractiveOverlayEventArgs passed for the event raised. </param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.OnVertexMoved(ThinkGeo.MapSuite.AndroidEdition.VertexMovedEditInteractiveOverlayEventArgs)">
            <summary>
            This event will be fired after moving the feature.
            </summary>
            <param name="e">The VertexMovedEditInteractiveOverlayEventArgs passed for the event raised. </param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.OnVertexRemoving(ThinkGeo.MapSuite.AndroidEdition.VertexRemovingEditInteractiveOverlayEventArgs)">
            <summary>
            This event will be fired before vertex removed from the edit feature.
            </summary>
            <param name="e">The VertexRemovingEditInteractiveOverlayEventArgs passed for the event raised. </param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.OnVertexRemoved(ThinkGeo.MapSuite.AndroidEdition.VertexRemovedEditInteractiveOverlayEventArgs)">
            <summary>
            This event will be fired after vertex removed from the edit feature.
            </summary>
            <param name="e">The VertexRemovedEditInteractiveOverlayEventArgs passed for the event raised. </param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.DeleteTrackShape">
            <summary>Delete the selected track shape.</summary>
             <remarks>
             Should set TrackMode as EditShape mode first, use mouse select one shape, and
             then call <strong>DeleteTrackShape</strong>, it will delete the selected shape.
             </remarks>
             <example>
             	<code lang="CS" title="C# sample" description="This sample show how to use DeleteTrackShape.">
             winformsMap1.EditOverlay.TrackMode = TrackMode.EditShape;
             winformsMap1.EditOverlay.DeleteTrackShape();
             winformsMap1.Refresh();
             </code>
             	<code lang="VB" title="VB sample">
             winformsMap1.EditOverlay.TrackMode = TrackMode.EditShape
             winformsMap1.EditOverlay.DeleteTrackShape()
             winformsMap1.Refresh()
             </code>
             </example>
        </member>
        <member name="E:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.FeatureDragged">
            <summary>This event will be fired after drag the feature.</summary>
        </member>
        <member name="E:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.FeatureDragging">
            <summary>This event will be fired before drag the feature.</summary>
        </member>
        <member name="E:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.FeatureResized">
            <summary>This event will be fired after resize the feature.</summary>
        </member>
        <member name="E:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.FeatureResizing">
            <summary>This event will be fired before resize the feature.</summary>
        </member>
        <member name="E:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.FeatureRotated">
            <summary>This event will be fired after rotate the feature.</summary>
        </member>
        <member name="E:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.FeatureRotating">
            <summary>This event will be fired before rotate the feature.</summary>
        </member>
        <member name="E:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.VertexAdded">
            <summary>This event will be fired after add the vertex.</summary>
        </member>
        <member name="E:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.VertexAdding">
            <summary>This event will be fired before add the vertex.</summary>
        </member>
        <member name="E:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.VertexMoved">
            <summary>This event will be fired after move the vertex.</summary>
        </member>
        <member name="E:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.VertexMoving">
            <summary>This event will be fired before move the vertex.</summary>
        </member>
        <member name="E:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.VertexRemoved">
            <summary>This event will be fired after remove the vertex.</summary>
        </member>
        <member name="E:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.VertexRemoving">
            <summary>This event will be fired before remove the vertex.</summary>
        </member>
        <member name="E:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.ControlPointSelected">
            <summary>This event will be fired after select the control point.</summary>
        </member>
        <member name="E:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.ControlPointSelecting">
            <summary>This event will be fired before select the control point.</summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.IsEmpty">
            <summary>
            This property override its property in base class by watching the feature count in editShapesLayer.
            
            If it is empty ,we can skip drawing it for better performance.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.TrackMode">
            <summary>Gets or sets a mode of TrackOverlay.</summary>
            <remarks>
            The default mode is TrackMode.None which means you cannot draw or edit features
            at client. By setting the mode to TrackMode.Point, TrackMode.Line, TrackMode.Polygon
            etc., you could add point, line or polygon to the FeatureOverlay. Setting the mode to
            TrackMode.Edit, you could edit the shapes at the client side.
            </remarks>
            <value>A mode of TrackOverlay.</value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.EditShapesLayer">
            <summary>
            This property gets the InMemoryFeatureLayer which holds the edit shapes.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.DragControlPointsLayer">
            <summary>
            This property gets the InMemoryFeatureLayer which holds the control points for drag.
            </summary>
            <remarks>Every control points for drag are not the existing vertex of the edit shapes.</remarks>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.RotateControlPointsLayer">
            <summary>
            This property gets the InMemoryFeatureLayer which holds the control points for rotate.
            </summary>
            <remarks>Every control points for rotate are not the existing vertex of the edit shapes.</remarks>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.ResizeControlPointsLayer">
            <summary>
            This property gets the InMemoryFeatureLayer which holds the control points for resize.
            </summary>
            <remarks>Every control points for resize are not the existing vertex of the edit shapes.</remarks>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.ExistingControlPointsLayer">
            <summary>
            This property gets the InMemoryFeatureLayer which holds the control points which represents the existing vertices of the edit shapes.
            </summary>
            <remarks>Every control points in this layer are the existing vertices of the edit shapes.</remarks>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.ControlPointType">
            <summary>
            This property gets or sets the ControlPointType for the control points of the edit shapes.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.SelectControlPointFeature">
            <summary>
            This property gets the feature represents the select control points of the edit shapes.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.OriginalEditingFeature">
            <summary>
            This property gets the feature represents the original editing feature.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.CanDrag">
            <summary>Gets a value which indicates whether the shape can be dragged.</summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.CanReshape">
            <summary>Gets a value which indicates whether the shape can be reshaped.</summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.CanResize">
            <summary>Gets a value which indicates whether the shape can be resized.</summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.CanRotate">
            <summary>Gets a value which indicates whether the shape can be rotated.</summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.CanAddVertex">
            <summary>Gets a value which indicates whether the shape can Add new vertex.</summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.EditInteractiveOverlay.CanRemoveVertex">
            <summary>Gets a value which indicates whether the shape can remove a existing vertex.</summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.MouseMovedTrackInteractiveOverlayEventArgs">
            <summary>
                Provides data for the <see cref="E:ThinkGeo.MapSuite.AndroidEdition.TrackInteractiveOverlay.MouseMoved">MouseMoved.</see>
                event.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MouseMovedTrackInteractiveOverlayEventArgs.#ctor">
            <summary>
            This is the default constructor of this parameter.
            </summary>
            <remarks>If you use this constructor, you have to set the properties manually before use.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.MouseMovedTrackInteractiveOverlayEventArgs.#ctor(ThinkGeo.MapSuite.Core.Vertex,ThinkGeo.MapSuite.Core.Feature)">
            <summary>
            This is the commonly used constructor.
            </summary>
            <param name="affectedFeature">This parameter specified the affected feature.</param>
            <param name="movedVertex">This parameter specified the target vertex to be moved.</param>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MouseMovedTrackInteractiveOverlayEventArgs.MovedVertex">
            <summary>
            This property gets or sets the vertex to be moved.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MouseMovedTrackInteractiveOverlayEventArgs.AffectedFeature">
            <summary>
            This property gets or sets the Feature to be affected.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.TrackEndedTrackInteractiveOverlayEventArgs">
            <summary>
            This is the default constructor of this parameter.
            </summary>
            <remarks>If you use this constructor, you have to set the properties manually before use.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.TrackEndedTrackInteractiveOverlayEventArgs.#ctor">
            <summary>
            This is the commonly used constructor.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.TrackEndedTrackInteractiveOverlayEventArgs.#ctor(ThinkGeo.MapSuite.Core.BaseShape)">
            <summary>
            This is the commonly used constructor.
            </summary>
            <param name="trackShape">This parameter specified the tracked shape.</param>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.TrackEndedTrackInteractiveOverlayEventArgs.TrackShape">
            <summary>
            This property gets or sets the tracked shape.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.TrackEndedTrackInteractiveOverlayEventArgs.Cancel">
            <summary>
            This property gets or sets the action to be canceled or not.
            This property has no use any more, please use the it in the TrackInteractiveOverlay.TrackEnding event.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.TrackEndingTrackInteractiveOverlayEventArgs">
            <summary>
                Provides data for the <see cref="E:ThinkGeo.MapSuite.AndroidEdition.TrackInteractiveOverlay.TrackEnding">TrackEnding.</see>
                event.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.TrackEndingTrackInteractiveOverlayEventArgs.#ctor">
            <summary>
            This is the default constructor of this parameter.
            </summary>
            <remarks>If you use this constructor, you have to set the properties manually before use.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.TrackEndingTrackInteractiveOverlayEventArgs.#ctor(ThinkGeo.MapSuite.Core.BaseShape,System.Boolean)">
            <summary>
            This is the commonly used constructor.
            </summary>
            <param name="shape">This parameter specified the shape to be tracking out.</param>
            <param name="cancel">This parameter specified the cancel property.</param>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.TrackEndingTrackInteractiveOverlayEventArgs.TrackShape">
            <summary>
            This property gets or sets the shape to be tracking out.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.TrackEndingTrackInteractiveOverlayEventArgs.Cancel">
            <summary>
            This property gets or sets the action to be canceled or not.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.TrackInteractiveOverlay">
            <summary>
            This class inherits from InterativeOverlay abstract class. This specified overlay describle the
            TrackShape interative process with MapControl using Mouse or Keyborad.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.TrackInteractiveOverlay.#ctor">
            <summary>
            Default constructor of the class.
            
            If you use this constructor, please set the properties correctly or it will
            use their default values.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.TrackInteractiveOverlay.EndTracking">
            <summary>
            This method ends the tracking shape by initialize some variables.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.TrackInteractiveOverlay.TouchDownCore(ThinkGeo.MapSuite.AndroidEdition.InteractionArguments)">
            <summary>This overrides the MouseDown logic in its base class InterativeOverlay.</summary>
            <returns>Interaction results of this method.</returns>
            <exception cref="T:System.ArgumentNullException" caption="ArgumentNullException">If you pass a null as the interactionArguments, we will throw an ArgumentNullException.</exception>
            <param name="interactionArguments">This parameter is the interaction auguments for the method.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.TrackInteractiveOverlay.TouchMoveCore(ThinkGeo.MapSuite.AndroidEdition.InteractionArguments)">
            <summary>This overrides the MouseMove logic in its base class InterativeOverlay.</summary>
            <returns>Interaction results of this method.</returns>
            <exception cref="T:System.ArgumentNullException" caption="ArgumentNullException">If you pass a null as the interactionArguments, we will throw an ArgumentNullException.</exception>
            <param name="interactionArguments">This parameter is the interaction auguments for the method.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.TrackInteractiveOverlay.TouchUpCore(ThinkGeo.MapSuite.AndroidEdition.InteractionArguments)">
            <summary>This overrides the MouseUp logic in its base class InterativeOverlay.</summary>
            <returns>Interaction results of this method.</returns>
            <exception cref="T:System.ArgumentNullException" caption="ArgumentNullException">If you pass a null as the interactionArguments, we will throw an ArgumentNullException.</exception>
            <param name="interactionArguments">This parameter is the interaction auguments for the method.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.TrackInteractiveOverlay.SingleTapCore(ThinkGeo.MapSuite.AndroidEdition.InteractionArguments)">
            <summary>This overrides the MouseClick logic in its base class.</summary>
            <returns>Interaction results of this method.</returns>
            <exception cref="T:System.ArgumentNullException" caption="ArgumentNullException">If you pass a null as the interactionArguments, we will throw an ArgumentNullException.</exception>
            <param name="interactionArguments">This parameter is the interaction auguments for the method.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.TrackInteractiveOverlay.LongPressCore(ThinkGeo.MapSuite.AndroidEdition.InteractionArguments)">
            <summary>This overrides the MouseDoubleClick logic in its base class InterativeOverlay.</summary>
            <returns>Interaction results of this method.</returns>
            <exception cref="T:System.ArgumentNullException" caption="ArgumentNullException">If you pass a null as the interactionArguments, we will throw an ArgumentNullException.</exception>
            <param name="interactionArguments">This parameter is the interaction auguments for the method.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.TrackInteractiveOverlay.GetTrackingShape">
            <summary>
            This method gets the current Tracking shape.
            </summary>
            <returns>Returns a shape represents the current status of tracking shape.</returns>
            <remarks>
            	<para>This method is the concrete wrapper for the abstract method GetTrackingShapeCore. This
                method draws the representation of the overlay based on the extent you provided.<br/>
            		<br/></para>
            </remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.TrackInteractiveOverlay.GetTrackingShapeCore">
            <summary>
            This is the Core method of GetTrackingShape.You could overrides this method to have your own logic.
            This method gets the current Tracking shape.
            </summary>
            <returns>Returns a shape represents the current status of tracking shape.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.TrackInteractiveOverlay.OnTrackEnded(ThinkGeo.MapSuite.AndroidEdition.TrackEndedTrackInteractiveOverlayEventArgs)">
            <summary>
            This event will be fired after the end of Tracking a shape.
            </summary>
            <param name="e">The TrackEndedTrackInteractiveOverlayEventArgs passed for the event raised. </param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.TrackInteractiveOverlay.OnTrackEnding(ThinkGeo.MapSuite.AndroidEdition.TrackEndingTrackInteractiveOverlayEventArgs)">
            <summary>
            This event will be fired before the end of Tracking a shape.
            </summary>
            <param name="e">The TrackEndingTrackInteractiveOverlayEventArgs passed for the event raised. </param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.TrackInteractiveOverlay.OnTrackStarting(ThinkGeo.MapSuite.AndroidEdition.TrackStartingTrackInteractiveOverlayEventArgs)">
            <summary>
            This event will be fired before the start of Tracking a shape.
            </summary>
            <param name="e">The TrackStartingTrackInteractiveOverlayEventArgs passed for the event raised. </param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.TrackInteractiveOverlay.OnTrackStarted(ThinkGeo.MapSuite.AndroidEdition.TrackStartedTrackInteractiveOverlayEventArgs)">
            <summary>
            This event will be fired after the start of Tracking a shape.
            </summary>
            <param name="e">The TrackStartedTrackInteractiveOverlayEventArgs passed for the event raised. </param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.TrackInteractiveOverlay.OnVertexAdding(ThinkGeo.MapSuite.AndroidEdition.VertexAddingTrackInteractiveOverlayEventArgs)">
            <summary>
            This event will be fired before adding a vertex to the Tracking shape.
            </summary>
            <param name="e">The VertexAddingTrackInteractiveOverlayEventArgs passed for the event raised. </param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.TrackInteractiveOverlay.OnVertexAdded(ThinkGeo.MapSuite.AndroidEdition.VertexAddedTrackInteractiveOverlayEventArgs)">
            <summary>
            This event will be fired after adding a vertex to the Tracking shape.
            </summary>
            <param name="e">The VertexAddedTrackInteractiveOverlayEventArgs passed for the event raised. </param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.TrackInteractiveOverlay.OnMouseMoved(ThinkGeo.MapSuite.AndroidEdition.MouseMovedTrackInteractiveOverlayEventArgs)">
            <summary>
            This event will be fired when mouse moved a vertex to the Tracking shape.
            </summary>
            <param name="e">The MouseMovedTrackInteractiveOverlayEventArgs passed for the event raised. </param>
        </member>
        <member name="E:ThinkGeo.MapSuite.AndroidEdition.TrackInteractiveOverlay.TrackEnded">
            <summary>This event will be fired after the end of tracking shape.</summary>
        </member>
        <member name="E:ThinkGeo.MapSuite.AndroidEdition.TrackInteractiveOverlay.TrackEnding">
            <summary>This event will be fired before the end of tracking shape.</summary>
        </member>
        <member name="E:ThinkGeo.MapSuite.AndroidEdition.TrackInteractiveOverlay.TrackStarted">
            <summary>This event will be fired after the start of tracking shape.</summary>
        </member>
        <member name="E:ThinkGeo.MapSuite.AndroidEdition.TrackInteractiveOverlay.TrackStarting">
            <summary>This event will be fired before the start of tracking shape.</summary>
        </member>
        <member name="E:ThinkGeo.MapSuite.AndroidEdition.TrackInteractiveOverlay.VertexAdded">
            <summary>This event will be fired after a vertex added to the tracking shape.</summary>
        </member>
        <member name="E:ThinkGeo.MapSuite.AndroidEdition.TrackInteractiveOverlay.VertexAdding">
            <summary>This event will be fired before a vertex added to the tracking shape.</summary>
        </member>
        <member name="E:ThinkGeo.MapSuite.AndroidEdition.TrackInteractiveOverlay.MouseMoved">
            <summary>This event will be fired when mouse moved on the vertex of tracking shape.</summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.TrackInteractiveOverlay.IsEmpty">
            <summary>
            This property override the logic in its base class by watching the feature count 
            in trackShapeLayer.
            
            If it is empty ,we can skip drawing it for better performance.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.TrackInteractiveOverlay.Vertices">
            <summary>
            This property gets the vertices to make up the track shape.
            This is a protected property which probablly need to be used in its sub classes.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.TrackInteractiveOverlay.TrackShapeLayer">
            <summary>
            This property gets the TrackShape layers which holds the track shapes.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.TrackInteractiveOverlay.IsInTracking">
            <summary>
            This property gets or sets to sign that if there is any shape being tracking.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.TrackInteractiveOverlay.TrackMode">
            <summary>Gets a mode of TrackOverlay.</summary>
            <remarks>
            The default mode is TrackMode.None which means you cannot draw or edit features
            at client. By setting the mode to TrackMode.Point, TrackMode.Line, TrackMode.Polygon
            etc., you could add point, line or polygon to the FeatureOverlay. Setting the mode to
            TrackMode.Edit, you could edit the shapes at the client side.
            </remarks>
            <value>A mode of TrackOverlay.</value>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.TrackMode">
            <summary>TrackMode enumeration sets how the map will react to user interaction.</summary>
        </member>
        <member name="F:ThinkGeo.MapSuite.AndroidEdition.TrackMode.None">
            <summary>Default mode.</summary>
        </member>
        <member name="F:ThinkGeo.MapSuite.AndroidEdition.TrackMode.Point">
            <summary>Draw point mode.</summary>
        </member>
        <member name="F:ThinkGeo.MapSuite.AndroidEdition.TrackMode.Line">
            <summary>Draw line mode.</summary>
        </member>
        <member name="F:ThinkGeo.MapSuite.AndroidEdition.TrackMode.Polygon">
            <summary>Draw polygon mode.</summary>
        </member>
        <member name="F:ThinkGeo.MapSuite.AndroidEdition.TrackMode.Rectangle">
            <summary>Draw rectangle mode.</summary>
        </member>
        <member name="F:ThinkGeo.MapSuite.AndroidEdition.TrackMode.Square">
            <summary>Draw square mode.</summary>
        </member>
        <member name="F:ThinkGeo.MapSuite.AndroidEdition.TrackMode.Circle">
            <summary>Draw circle mode.</summary>
        </member>
        <member name="F:ThinkGeo.MapSuite.AndroidEdition.TrackMode.Ellipse">
            <summary>Draw ellipse mode.</summary>
        </member>
        <member name="F:ThinkGeo.MapSuite.AndroidEdition.TrackMode.StraightLine">
            <summary>Allows user to draw a simple line with only 2 points on the map.</summary>
        </member>
        <member name="F:ThinkGeo.MapSuite.AndroidEdition.TrackMode.Freehand">
            <summary>Allows user to draw freehand on the map</summary>
        </member>
        <member name="F:ThinkGeo.MapSuite.AndroidEdition.TrackMode.Custom">
            <summary>Allows user to draw custom trackshape on the map</summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.TrackStartedTrackInteractiveOverlayEventArgs">
            <summary>
                Provides data for the <see cref="E:ThinkGeo.MapSuite.AndroidEdition.TrackInteractiveOverlay.TrackStarted">TrackStarted.</see>
                event.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.TrackStartedTrackInteractiveOverlayEventArgs.#ctor">
            <summary>
            This is the default constructor of this parameter.
            </summary>
            <remarks>If you use this constructor, you have to set the properties manually before use.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.TrackStartedTrackInteractiveOverlayEventArgs.#ctor(ThinkGeo.MapSuite.Core.Vertex)">
            <summary>
            This is the commonly used constructor.
            </summary>
            <param name="startedVertex">This parameter specified the started vertex when tracking shape action is  started.</param>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.TrackStartedTrackInteractiveOverlayEventArgs.StartedVertex">
            <summary>
            This property gets or sets the started vertex when tracking shape action is  started.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.TrackStartingTrackInteractiveOverlayEventArgs">
            <summary>
                Provides data for the <see cref="E:ThinkGeo.MapSuite.AndroidEdition.TrackInteractiveOverlay.TrackStarting">TrackStarting.</see>
                event.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.TrackStartingTrackInteractiveOverlayEventArgs.#ctor">
            <summary>
            This is the default constructor of this parameter.
            </summary>
            <remarks>If you use this constructor, you have to set the properties manually before use.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.TrackStartingTrackInteractiveOverlayEventArgs.#ctor(ThinkGeo.MapSuite.Core.Vertex,System.Boolean)">
            <summary>
            This is the commonly used constructor.
            </summary>
            <param name="startingVertex">This parameter specified the started vertex when tracking shape action is being to start.</param>
            <param name="cancel">This parameter specified the cancel property.</param>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.TrackStartingTrackInteractiveOverlayEventArgs.Cancel">
            <summary>
            This property gets or sets the action to be canceled or not.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.TrackStartingTrackInteractiveOverlayEventArgs.StartingVertex">
            <summary>
            This property gets or sets the started vertex when tracking shape action is being to start.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.VertexAddedTrackInteractiveOverlayEventArgs">
            <summary>
                Provides data for the <see cref="E:ThinkGeo.MapSuite.AndroidEdition.TrackInteractiveOverlay.VertexAdded">VertexAdded.</see>
                event.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.VertexAddedTrackInteractiveOverlayEventArgs.#ctor">
            <summary>
            This is the default constructor of this parameter.
            </summary>
            <remarks>If you use this constructor, you have to set the properties manually before use.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.VertexAddedTrackInteractiveOverlayEventArgs.#ctor(ThinkGeo.MapSuite.Core.Vertex,ThinkGeo.MapSuite.Core.Feature)">
            <summary>
            This is the commonly used constructor.
            </summary>
            <param name="addedVertex">This parameter specified the vertex is added.</param>
            <param name="affectedFeature">This parameter specified the feature to be used to add vertex on when tracking shape.</param>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.VertexAddedTrackInteractiveOverlayEventArgs.AddedVertex">
            <summary>
            This property gets or sets the vertex added.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.VertexAddedTrackInteractiveOverlayEventArgs.AffectedFeature">
            <summary>
            This property gets or sets the Feature with vertex added.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.VertexAddingTrackInteractiveOverlayEventArgs">
            <summary>
                Provides data for the <see cref="E:ThinkGeo.MapSuite.AndroidEdition.TrackInteractiveOverlay.VertexAdding">VertexAdding.</see>
                event.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.VertexAddingTrackInteractiveOverlayEventArgs.#ctor">
            <summary>
            This is the default constructor of this parameter.
            </summary>
            <remarks>If you use this constructor, you have to set the properties manually before use.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.VertexAddingTrackInteractiveOverlayEventArgs.#ctor(ThinkGeo.MapSuite.Core.Vertex,ThinkGeo.MapSuite.Core.Feature,System.Boolean)">
            <summary>
            This is the commonly used constructor.
            </summary>
            <param name="addingVertex">This parameter specified the vertex is going to be added.</param>
            <param name="cancel">This parameter specified the cancel property.</param>
            <param name="affectedFeature">This parameter specified the feature to be used to add vertex on when tracking shape.</param>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.VertexAddingTrackInteractiveOverlayEventArgs.Cancel">
            <summary>
            This property gets or sets the action to be canceled or not.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.VertexAddingTrackInteractiveOverlayEventArgs.AddingVertex">
            <summary>
            This property gets or sets the feature to be used to add vertex on when tracking shape.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.VertexAddingTrackInteractiveOverlayEventArgs.AffectedFeature">
            <summary>
            This property gets or sets the Feature to be used to add vertex to.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.OpenStreetMapOverlay">
            <summary>
            This class represents an overlay that requesting images from OpenStreet Map Service.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.OpenStreetMapOverlay.#ctor">
            <summary>
            This is constructore of OpenStreetMapOverlay.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.OpenStreetMapOverlay.#ctor(ThinkGeo.MapSuite.Core.GeoWebProxy)">
            <summary>
            This is constructore of OpenStreetMapOverlay.
            </summary>
            <param name="webProxy">This parameter indicates a WebProxy for requesting image from OpenStreet imagery service.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.OpenStreetMapOverlay.GetTileCore(Android.Content.Context)">
            <summary>
            This method gets a concrete tile class to form this overlay.
            </summary>
            <returns>A concrete Tile object that for requesting images from OpenStreet serverice.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.OpenStreetMapOverlay.DrawTileCore(ThinkGeo.MapSuite.Core.GeoCanvas,ThinkGeo.MapSuite.AndroidEdition.TileView)">
            <summary>
            This method overrides from its base class TileOverlay.
            It actually requests image for the passed tile with the passed world extent.
            </summary>
            <param name="tile">A tile object that creating by the GetTileCore method. It's the tile which needs to be draw in this mehtod.</param>
            <param name="targetExtent">A world extent that to draw the passed tile object.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.OpenStreetMapOverlay.GetBoundingBoxCore">
            <summary>
            This method gets a world extent for holding the entire OpenStreed map.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.OpenStreetMapOverlay.TimeoutInSeconds">
            <summary>
            Gets or sets the length of time, in seconds, before the request times out.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.OpenStreetMapOverlay.WebProxy">
            <summary>
            Gets or sets the WebProxy for using OpenStreet map service.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.OpenStreetMapOverlay.CacheDirectory">
            <summary>
            This property gets or sets a directory that for caching the requested images.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.OpenStreetMapTileOverlay">
            <summary>
            This class represents an overlay that requesting images from OpenStreet Map Service.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.OpenStreetMapTileOverlay.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ThinkGeo.MapSuite.AndroidEdition.OpenStreetMapTileOverlay"/> class.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.OpenStreetMapTileOverlay.GetBoundingBoxCore">
            <summary>
            This method returns the bounding box of the Overlay.
            </summary>
            <returns>This method returns the bounding box of the Overlay.</returns>
            <remarks>This method returns the bounding box of the Overlay.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.OpenStreetMapTileOverlay.DrawTileCore(ThinkGeo.MapSuite.Core.GeoCanvas,ThinkGeo.MapSuite.AndroidEdition.TileView)">
            <summary>
            Redraws a specified tile with the provided world extent.
            </summary>
            <param name="geoCanvas">This parameter is the canvas object to draw on.</param>
            <param name="tile">A Tile object that is created by the GetTile(Context) method to draw.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.OpenStreetMapTileOverlay.DrawExceptionCore(ThinkGeo.MapSuite.Core.GeoCanvas,System.Exception)">
            <summary>
            This method will draw on the canvas when the layer.Draw throw exception and
            the DrawExceptionMode is set to DrawException instead of ThrowException.
            </summary>
            <param name="canvas">The target canvas to draw the layer.</param>
            <param name="e">The exception thrown when layer.Draw().</param>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.OpenStreetMapTileOverlay.CustomServerUris">
            <summary>
            Gets the custom server uris.
            </summary>
            <value>The custom server uris.</value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.OpenStreetMapTileOverlay.TimeoutInSeconds">
            <summary>
            Gets or sets the length of time, in seconds, before the request times out.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.OpenStreetMapTileOverlay.WebProxy">
            <summary>
            Gets or sets the WebProxy for using OpenStreet map service.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.Popup">
            <summary>
            This class represents a popup control for placing on the map.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.Popup.#ctor(Android.Content.Context)">
            <summary>
            Initializes a new instance of the <see cref="T:ThinkGeo.MapSuite.AndroidEdition.Popup"/> class.
            </summary>
            <param name="context">Interface to global information about an application environment.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.Popup.#ctor(Android.Content.Context,ThinkGeo.MapSuite.Core.PointShape)">
            <summary>
            Initializes a new instance of the <see cref="T:ThinkGeo.MapSuite.AndroidEdition.Popup"/> class.
            </summary>
            <param name="context">Interface to global information about an application environment.</param>
            <param name="position">This parameter indicates the position of the popup.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.Popup.OnMeasure(System.Int32,System.Int32)">
            <summary>
            Called when [measure].
            </summary>
            <param name="widthMeasureSpec">horizontal space requirements as imposed by the parent.
            The requirements are encoded with
            <c><see cref="T:Android.Views.View+MeasureSpec" /></c>.</param>
            <param name="heightMeasureSpec">vertical space requirements as imposed by the parent.
            The requirements are encoded with
            <c><see cref="T:Android.Views.View+MeasureSpec" /></c>.</param>
            <since version="Added in API level 1" />
            <altmember cref="P:Android.Views.View.MeasuredWidth" />
            <altmember cref="P:Android.Views.View.MeasuredHeight" />
            <altmember cref="M:Android.Views.View.SetMeasuredDimension(System.Int32, System.Int32)" />
            <altmember cref="M:Android.Views.View.get_SuggestedMinimumHeight" />
            <altmember cref="M:Android.Views.View.get_SuggestedMinimumWidth" />
            <altmember cref="M:Android.Views.View.MeasureSpec.GetMode(System.Int32)" />
            <altmember cref="M:Android.Views.View.MeasureSpec.GetSize(System.Int32)" />
            <remarks><para tool="javadoc-to-mdoc" />
            <para tool="javadoc-to-mdoc">
            Measure the view and its content to determine the measured width and the
            measured height. This method is invoked by <c><see cref="M:Android.Views.View.Measure(System.Int32, System.Int32)" /></c> and
            should be overriden by subclasses to provide accurate and efficient
            measurement of their contents.
            </para>
            <para tool="javadoc-to-mdoc">
              <i>CONTRACT:</i> When overriding this method, you
            <i>must</i> call <c><see cref="M:Android.Views.View.SetMeasuredDimension(System.Int32, System.Int32)" /></c> to store the
            measured width and height of this view. Failure to do so will trigger an
            <c>IllegalStateException</c>, thrown by
            <c><see cref="M:Android.Views.View.Measure(System.Int32, System.Int32)" /></c>. Calling the superclass'
            <c><see cref="M:Android.Views.View.OnMeasure(System.Int32, System.Int32)" /></c> is a valid use.
            </para>
            <para tool="javadoc-to-mdoc">
            The base class implementation of measure defaults to the background size,
            unless a larger size is allowed by the MeasureSpec. Subclasses should
            override <c><see cref="M:Android.Views.View.OnMeasure(System.Int32, System.Int32)" /></c> to provide better measurements of
            their content.
            </para>
            <para tool="javadoc-to-mdoc">
            If this method is overridden, it is the subclass's responsibility to make
            sure the measured height and width are at least the view's minimum height
            and width (<c><see cref="M:Android.Views.View.get_SuggestedMinimumHeight" /></c> and
            <c><see cref="M:Android.Views.View.get_SuggestedMinimumWidth" /></c>).
            </para>
            <para tool="javadoc-to-mdoc">
              <format type="text/html">
                <a href="http://developer.android.com/reference/android/view/View.html#onMeasure(int, int)" target="_blank">[Android Documentation]</a>
              </format>
            </para></remarks>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.Popup.Position">
            <summary>
            Gets and sets the position of the popup.
            </summary>
            <value>The position.</value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.Popup.XOffset">
            <summary>
            Gets or sets the x offset of the popup.
            </summary>
            <value>The x offset.</value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.Popup.YOffset">
            <summary>
            Gets or sets the y offset of the popup.
            </summary>
            <value>The y offset.</value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.Popup.ContentWidth">
            <summary>
            Gets or sets the width of the content.
            </summary>
            <value>The width of the content.</value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.Popup.ContentHeight">
            <summary>
            Gets or sets the height of the content.
            </summary>
            <value>The height of the content.</value>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.PopupOverlay">
            <summary>
            This class represents an overlay to place popups on the map.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.PopupOverlay.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ThinkGeo.MapSuite.AndroidEdition.PopupOverlay"/> class.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.PopupOverlay.#ctor(System.Collections.Generic.IEnumerable{ThinkGeo.MapSuite.AndroidEdition.Popup})">
            <summary>
            This is constructor of PopupOverlay class.
            </summary>
            <param name="popups">This parameter indicates a collection of popup that are added into this overlay.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.PopupOverlay.DrawCore(ThinkGeo.MapSuite.AndroidEdition.MapArguments,ThinkGeo.MapSuite.AndroidEdition.OverlayRefreshType)">
            <summary>
            This method draws the overlay with the provided extent in world coordinate.
            </summary>
            <param name="mapArguments">This parameter maintains current map information for calculating mechanism.</param>
            <param name="refreshType">This parameter indicates whether the elements of this overlay needs to be refreshed.
            For example, TileOverlay is formed by tiles.
            When panning the map around, the existing tile doesn't need to be redraw,
            the only thing we need to do is modifying the position of these tiles.
            On another hand, when click to change the style of the overlay,
            we need to redraw the tile images to change the appearance. So we need refresh mode.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.PopupOverlay.GetBoundingBoxCore">
            <summary>
            This method returns a bounding box to hold all popups.
            </summary>
            <returns>A RectangleShape value that to hold all popups.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.PopupOverlay.PostTransformCore(ThinkGeo.MapSuite.AndroidEdition.TransformArguments,ThinkGeo.MapSuite.AndroidEdition.MapArguments)">
            <summary>
            This protected virtual method is the Core method of PostTransform API.
            </summary>
            <param name="transformInfo">This parameter maintains the transfrom information for calculating transform.</param>
            <param name="mapArguments">This parameter maintains current map information for calculating mechanism.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.PopupOverlay.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.PopupOverlay.Popups">
            <summary>
            This property gets a collection of popup that are added into this overlay.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.WmsOverlay">
            <summary>
            Represents an overlay object that gets map images from the WMS server you
            specify.
            </summary>
            <remarks>
            	<para>The <strong>WmsOverlay</strong> gets images from one or more WMS servers that
                you specify. Usually, you add a WMS server URI to the <strong>ServerUris</strong>
                collection and the <strong>WmsOverlay</strong> will make a request to that WMS server
                to get its tile images.</para>
            	<para>You can also add multiple WMS server URIs to the ServerUris collection. The
                WmsOverlay will randomly send requests to those WMS servers in a concurrent fashion.
                This means that the tile images can come from different WMS servers, thus greatly
                enhancing performance. <strong>Do not</strong> add URIs of differently-configured
                WMS servers to the ServerUris collection.</para>
            </remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.WmsOverlay.#ctor">
            <summary>
            Constructore of WmsOverlay class.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.WmsOverlay.#ctor(System.Uri)">
            <summary>
            Constructore of WmsOverlay class.
            </summary>
            <param name="serverUri">This parameter indicates a uri for the Wms server.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.WmsOverlay.#ctor(System.Collections.Generic.IEnumerable{System.Uri})">
            <summary>
            Constructore of WmsOverlay class.
            </summary>
            <param name="serverUris">This parameter indicates a collection of uris for the Wms server.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.WmsOverlay.#ctor(System.Collections.Generic.IEnumerable{System.Uri},System.Net.WebProxy)">
            <summary>
            Constructore of WmsOverlay class.
            </summary>
            <param name="serverUris">This parameter indicates a collection of uris for the Wms server.</param>
            <param name="webProxy">This parameter indicates the web proxy of the request</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.WmsOverlay.DrawTileCore(ThinkGeo.MapSuite.Core.GeoCanvas,ThinkGeo.MapSuite.AndroidEdition.TileView)">
            <summary>
            This method redraws a tile by an extent and geography unit.
            </summary>
            <param name="tile">A tile which needs to be redrawn.</param>
            <param name="targetExtent">An extent to be redrawn.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.WmsOverlay.GetRequestUris(ThinkGeo.MapSuite.Core.RectangleShape,ThinkGeo.MapSuite.AndroidEdition.TileView)">
            <summary>
            This method get request Uri based on requested world extent.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.WmsOverlay.GetRequestUrisCore(ThinkGeo.MapSuite.Core.RectangleShape,ThinkGeo.MapSuite.AndroidEdition.TileView)">
            <summary>
            This method get request Uri based on requested world extent.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.WmsOverlay.GetRequestUri(System.Uri,ThinkGeo.MapSuite.Core.RectangleShape,ThinkGeo.MapSuite.AndroidEdition.TileView)">
            <summary>
            This method merge uri from passed server uri and target world extent.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.WmsOverlay.InitThreadLockObject">
            <summary>
            Initialize thread lock object;
            for if the request count is to big to the server at once,
            the server will send a 503 error back.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.WmsOverlay.Parameters">
            <summary>
            Gets a dictionary whose items will be passed to the WMS server as
            parameters.
            </summary>
            <example>
            	<para>As an example, if the WMS address is "wmsserverurl.axd?id=1&amp;type=image/png":</para>
            	<para><font color="maroon">wmsLayer.Parameters.Add("id", "1");<br/>
                wmsLayer.Parameters.Add("type", "image/png");</font></para>
            </example>
            <value>A dictionary whose items will be passed to the WMS server as parameters.</value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.WmsOverlay.ServerUris">
            <summary>Gets a collection of URIs that specifies the locations of the WMS servers.</summary>
            <value>A collection of URIs that specifies the locations of the WMS servers.</value>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.WmsOverlay.WebProxy">
            <summary>
            This property gets or sets the proxy used for requesting a Web Response.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.WmsOverlay.TimeoutInSeconds">
            <summary>
            Gets or sets the length of time, in seconds, before the request times out.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.WmsOverlay.Projection">
            <summary>
            Gets or sets a string that will be sent to the WMS server to get the images in
            the specific projection.
            </summary>
            <value>A string that represents the projection that the images use.</value>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.WorldMapKitOverlay">
            <summary>
            This class represents an WmsOverlay which has MapSuite world map kit server integrated.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.WorldMapKitOverlay.#ctor">
            <summary>
            Constructor of WorldMapKitWmsWpfOverlay class.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.WorldMapKitOverlay.#ctor(System.Net.WebProxy)">
            <summary>
            Constructor of WorldMapKitWmsWpfOverlay class.
            </summary>
            <param name="webProxy">The proxy used for requesting a Web Response</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.WorldMapKitOverlay.#ctor(System.String,System.String)">
            <summary>
            Constructor of WorldMapKitWmsWpfOverlay class.
            </summary>
            <param name="clientId">The clientId for the WMS Server.</param>
            <param name="privateKey">The privateKey for the WMS Server.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.WorldMapKitOverlay.#ctor(System.Net.WebProxy,System.String,System.String)">
            <summary>
            Constructor of WorldMapKitWmsWpfOverlay class.
            </summary>
            <param name="webProxy">Proxy to use for the WMS Server.</param>
            <param name="clientId">The clientId for the WMS Server.</param>
            <param name="privateKey">The privateKey for the WMS Server.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.WorldMapKitOverlay.DrawTileCore(ThinkGeo.MapSuite.Core.GeoCanvas,ThinkGeo.MapSuite.AndroidEdition.TileView)">
            <summary>
            This method redraws one tile with the provided extent and map unit.
            </summary>
            <param name="tile">This parameter indicates a tile which is ready to draw.</param>
            <param name="targetExtent">This parameter is the world extent to draw the tile.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.WorldMapKitOverlay.GetBoundingBoxCore">
            <summary>
            This method gets an entire boundingbox to ThinkGeo World Map Kit WMS service.
            </summary>
            <returns>Returns a RectangleShape indicating the world extent of ThinkGeo World Map Kik WMS service.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.WorldMapKitOverlay.InitThreadLockObject">
            <summary>
            Initialize thread lock object;
            for if the request count is to big to the server at once,
            the server will send a 503 error back.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.WorldMapKitOverlay.TimeoutInSeconds">
            <summary>
            Gets or sets the length of time, in seconds, before the request times out.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.WorldMapKitOverlay.WebProxy">
            <summary>
            This property gets or sets the proxy used for requesting a Web Response.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.WorldMapKitOverlay.Projection">
            <summary>
            Gets or sets the projection for the this overlay.
            </summary>
            <remarks>
            This property needs work with map unit setting on the map object.
            All overlay adding to the map must keep the same unit or else the map won't display properly.
            </remarks>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.WorldMapKitOverlay.ClientId">
            <summary>
            Gets or sets a value that is your Client Id.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.WorldMapKitOverlay.PrivateKey">
            <summary>
            Gets or sets a value that is unique to your client ID, please keep your key secure.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.WorldMapKitOverlay.LayerType">
            <summary>
            Gets or sets the LayerType of the Overlay.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.AddTransactionError">
            <summary>
              Looks up a localized string similar to The add transaction failed for an unknown reason..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.BothIconFilePathAndIconImageAreInvalid">
            <summary>
              Looks up a localized string similar to You can provide a path and file name to an icon or an image but not both..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.CadDllNotExists">
            <summary>
              Looks up a localized string similar to The CAD unmanaged assemblies cannot be found..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.CellHeightLessThanZero">
            <summary>
              Looks up a localized string similar to The cellHeight needs to be greater than zero..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.CellWidthLessThanZero">
            <summary>
              Looks up a localized string similar to The cellWidth needs to be greater than zero..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.CheckIsOpenedWhenCloneDeep">
            <summary>
              Looks up a localized string similar to You can not CloneDeep because the object is open or drawing, please close or end drawing first..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.CheckLayerIsOpened">
            <summary>
              Looks up a localized string similar to The Layer must be opened before you can perform this method..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.CheckMapEngineCurrentExtentIsNotValid">
            <summary>
              Looks up a localized string similar to The current extent provided is not valid..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.ClassBreakNumberShouldBeGreaterThanOne">
            <summary>
              Looks up a localized string similar to The ClassBreak Number should be greater than one..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.ClassBreaksIsValid">
            <summary>
              Looks up a localized string similar to The class breaks you have provided are invalid..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.ColorDoesNotExist">
            <summary>
              Looks up a localized string similar to The color you have provided does not exist..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.ColumnNumberExceedTotalRowCount">
            <summary>
              Looks up a localized string similar to The parameter column exceeds the total column count..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.CommonImageSourceIsAlreadyOpen">
            <summary>
              Looks up a localized string similar to The ImageSource is already open..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.ConnectionStringCannotBeNull">
            <summary>
              Looks up a localized string similar to The connection string can not be null..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.CreateShapeFileFailed">
            <summary>
              Looks up a localized string similar to The creation of the shape file has failed..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.CurrentExtentNotAssigned">
            <summary>
              Looks up a localized string similar to The CurrentExtent property must be set before calling this method. If you want to use a custom extent, please use the static method.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.CustomImageSizeIsNull">
            <summary>
              Looks up a localized string similar to You already choose resize the image by custom size, please set the custom width and height..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.DateTimeBeyondFileSupportLife">
            <summary>
              Looks up a localized string similar to The supported datetime should be between 1900 and 2015.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.DbfColumnsIsEmpty">
            <summary>
              Looks up a localized string similar to The DbfColumns collection is empty, you should add at least one DbfColumn when you create a new shape file..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.DecimalDegreeLatitudeOutOfRange">
            <summary>
              Looks up a localized string similar to The decimal degree latitude value you provided was out of range..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.DecimalDegreeLongitudeOutOfRange">
            <summary>
              Looks up a localized string similar to The decimal degree longitude value you provided was out of range..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.DecimalDegreeSecondsStringNull">
            <summary>
              Looks up a localized string similar to The degreesMinutesSeconds string may not be null or empty..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.DecimalLengthInValidForStringColumnType">
            <summary>
              Looks up a localized string similar to DecimalLength is Invalid(it should be 0) for StringColumnType, it only make sense for DoubleColumnType..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.DefaultAndCustomStyleDuplicate">
            <summary>
              Looks up a localized string similar to You are trying to use both a default style and the custom styles collection.  You may only use one or the other..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.DefaultAndCustomStyleDuplicateForRestrictedLayer">
            <summary>
              Looks up a localized string similar to You are trying to use both a default style and the custom styles collection. If you want to add custom styles, please set RestrictionStyle as RestrictionStyle.UseCustomStyles..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.DegreesMinutesSecondsInputError">
            <summary>
              Looks up a localized string similar to The DegreesMinutesSeconds value is invalid..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.DeleteTransactionError">
            <summary>
              Looks up a localized string similar to The delete transaction failed for an unknown reason..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.DoubleOutOfRange">
            <summary>
              Looks up a localized string similar to The input double value is out of range..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.EditingNotSupported">
            <summary>
              Looks up a localized string similar to You have set IsEditable to true but have not overridden the CommitTransactionCore method.  Please override this the CommitTransactionCore method to prevent this exception..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.EllipseIsNotValid">
            <summary>
              Looks up a localized string similar to The ellipse is not valid..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.EntryPointInvalid">
            <summary>
              Looks up a localized string similar to The calling assembly is invalid..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.EnumerationOutOfRange">
            <summary>
              Looks up a localized string similar to The value for the enumeration is not one of the valid values..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.EvalNotInstall">
            <summary>
              Looks up a localized string similar to The evaluation edition has not been installed..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.EvaluationExpired">
            <summary>
              Looks up a localized string similar to The evaluation has expired.  Please contact ThinkGeo for purchasing option or an extension to the trial..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.ExtentNotIntersectsWithBoundingBox">
            <summary>
              Looks up a localized string similar to The passed extent needs to intersect with the bounding box of the gid..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.ExternalProjectionParametersStringIsNotEPSG4326">
            <summary>
              Looks up a localized string similar to The ExternalProjectionParametersString of the projection must be the projection string of Wgs84 or &quot;EPSG:4326&quot;..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.FeatureCollectionIsEmpty">
            <summary>
              Looks up a localized string similar to The collection of Features may not be empty..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.FeatureColumnValueDoesNotContainColon">
            <summary>
              Looks up a localized string similar to The feature column values should be entered as string[] {&quot;Key1:Value1&quot;, &quot;Key2:Value2&quot;}.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.FeatureIsInvalidInThisStyle">
            <summary>
              Looks up a localized string similar to The feature is invalid in in this style..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.FeatureIsNotValid">
            <summary>
              Looks up a localized string similar to The Feature you provided is not valid..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.FeatureSourceCanNotExecuteSqlQuery">
            <summary>
              Looks up a localized string similar to Executing sql queries is not supported and the user should always check the CanExecuteSqlQueries to ensure the FeatureSource support it before calling..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.FeatureSourceCanNotModifyColumn">
            <summary>
              Looks up a localized string similar to The FeatureSource column structure can not be modified. Please check the &apos;CanModifyColumnStructure&apos; property at first..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.FeatureSourceCollectionIsEmpty">
            <summary>
              Looks up a localized string similar to There are no FeatureSources..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.FeatureSourceColumnCollectionIsEmpty">
            <summary>
              Looks up a localized string similar to The collection of FeatureSourceColumns may not be empty..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.FeatureSourceIsAlreadyInTransaction">
            <summary>
              Looks up a localized string similar to The FeatureSource is already in a transaction..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.FeatureSourceIsAlreadyOpen">
            <summary>
              Looks up a localized string similar to The FeatureSource is already opened..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.FeatureSourceIsInTransaction">
            <summary>
              Looks up a localized string similar to The operation is invalid when it&apos;s in a transaction..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.FeatureSourceIsNotEditable">
            <summary>
              Looks up a localized string similar to The FeatureSource is not editable..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.FeatureSourceIsNotInTransaction">
            <summary>
              Looks up a localized string similar to The FeatureSource is not in a transaction..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.FeatureSourceIsNotOpen">
            <summary>
              Looks up a localized string similar to The FeatureSource is not open.   Please call the Open method before calling this method..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.FieldNameIsNotInFeature">
            <summary>
              Looks up a localized string similar to The requested column name is not in the Feature..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.FileAccessError">
            <summary>
              Looks up a localized string similar to File access error, you should open the shape file with ReadWrite mode..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.FileAlreadyExists">
            <summary>
              Looks up a localized string similar to The file already exists..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.FileFormatIsWrong">
            <summary>
              Looks up a localized string similar to The file&apos;s format is incorrect..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.FileGeoDatabaseDllNotExists">
            <summary>
              Looks up a localized string similar to The File GeoDatabase unmanaged assemblies cannot be found..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.FileIsNotExist">
            <summary>
              Looks up a localized string similar to The file specified does not exist..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.FileIsSupportedByCommonImageSource">
            <summary>
              Looks up a localized string similar to This file type is not supported..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.FileNotSupportedForSql">
            <summary>
              Looks up a localized string similar to One of the fields in the database is not supported by SQL. The first character of this field name must be an alphabetic letter..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.FirstClassBreakValueError">
            <summary>
              Looks up a localized string similar to The first ClassBreak value should be double.MinValue..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.GdipLoadImageFromFileError">
            <summary>
              Looks up a localized string similar to GDI+ threw a status error code..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.GeoCacheIsNotOpen">
            <summary>
              Looks up a localized string similar to The GeoCache is not open.  Please call the Open method before calling this method..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.GeocanvasIsNotInDrawing">
            <summary>
              Looks up a localized string similar to The GeoCanvas is currently not drawing.  Please call the BeginDraw method before calling this method..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.GeographicUnitNotValidWithGoogle">
            <summary>
              Looks up a localized string similar to The map unit you are using is not compatable with the GoogleLayer .  Make sure you are using Meters and that your projection is 90013 to ensure compatability..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.GeographicUnitNotValidWithOpenStreetMap">
            <summary>
              Looks up a localized string similar to The map unit you are using is not compatable with the OpenStreetMap .  Make sure you are using Meters to ensure compatability with OpenStreetMap service..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.GeoImageIsNotValid">
            <summary>
              Looks up a localized string similar to The input GeoImage object is not a valid GeoImage type..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.GeometriesInvalidExist">
            <summary>
              Looks up a localized string similar to We have found geometries that are invalid according to the SQL Server STIsValid() Function. To automaticly fix these you can call the MakeAllGeometriesValid method. The SQL To Determine which records are invalid:.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.GeometrytypeIsWrong">
            <summary>
              Looks up a localized string similar to Geometry type not recognized. .
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.GettingSridNotSupported">
            <summary>
              Looks up a localized string similar to The current GeoImage implementation does not support the GetSrid operation..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.GraphicsCanvasWidthHeightNotSet">
            <summary>
              Looks up a localized string similar to GraphicsGeoCanvas&apos; Width and Height must be properly set before calling BeginDrawing()..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.GridInterpolationModelDoesNotWork">
            <summary>
              Looks up a localized string similar to The input GridInterpolationModel is not able to replace all the NoData value..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.GroupLayerIsEmpty">
            <summary>
              Looks up a localized string similar to You must have at least one layer..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.HtmlColorIsInvalid">
            <summary>
              Looks up a localized string similar to The input string HtmlColor is invalid..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.IdColumnCannotBeNullOrEmpty">
            <summary>
              Looks up a localized string similar to Id column can&apos;t be null or empty..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.IEnumerableIsEmptyOrNull">
            <summary>
              Looks up a localized string similar to The collection may not be empty or null..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.ImageInPointStyleCanNotBeNull">
            <summary>
              Looks up a localized string similar to The image property can&apos;t be null..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.ImageScaleShouldBiggerThanZero">
            <summary>
              Looks up a localized string similar to The ImageScaled property must be larger than 0..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.ImageSourceIsAlreadyOpen">
            <summary>
              Looks up a localized string similar to The ImageSource is already open..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.ImageSourceIsNotOpen">
            <summary>
              Looks up a localized string similar to The ImageSource is not open.  Please call the Open method before calling this method..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.IndexFileAlreadyExists">
            <summary>
              Looks up a localized string similar to Index File already exist, please change the BuildIndexMode if you want to rebuild this index..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.IndexFileIsInvalid">
            <summary>
              Looks up a localized string similar to The format of your index file is not valid, please check. Or you can use BuildIndexFile function to build a new one..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.IndexFileNotExisted">
            <summary>
              Looks up a localized string similar to You don&apos;t have the corresponding idx file for your shape file. You can use the static method ShapeFileFeatureSource.BuildIndexFile() or ShapeFileFeatureLayer.BuildIndexFile()  to build an idx file for the shape file, or you can set the RequireIndex property to false..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.InputGeometryTypeIsNotValid">
            <summary>
              Looks up a localized string similar to Input Geometry Type Is Not Valid.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.InvalidGeometryInMsSqlForSpatialQuery">
            <summary>
              Looks up a localized string similar to There&apos;re some invalid geometry instance in table not valid. About invalid geometry please have a look at http://msdn.microsoft.com/en-us/library/bb933890.aspx website. To solve this problem, we provide MakeAllGeometryValid function to make the invalid geometry to be valid, because of the function updating your data, you need to backup your data before using this function..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.InvalidOperationExceptionError">
            <summary>
              Looks up a localized string similar to Invalid Operation Exception..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.InvalidOperationOnALockedVariable">
            <summary>
              Looks up a localized string similar to It cannot be changed  until the layer/featureSource is closed.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.IsNotSupportedNowForProjection">
            <summary>
              Looks up a localized string similar to  is not supported now for projection..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.ItemNotFoundInGeoCollectionByItem">
            <summary>
              Looks up a localized string similar to The GeoCollection does not contain the item you specified..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.ItemNotFoundInGeoCollectionByKey">
            <summary>
              Looks up a localized string similar to The GeoCollection does not contain the item you specified..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.JpegImageCompressionShouldBeBetweenZeroAndOneHundred">
            <summary>
              Looks up a localized string similar to The value should be between zero and one hundred..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.KeyColorIsNotSupported">
            <summary>
              Looks up a localized string similar to Do not support KeyColor in the specify GeoCanvas..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.LayerDoesNotHaveBoundingBox">
            <summary>
              Looks up a localized string similar to This Layer doesn&apos;t have a boundingBox..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.LayersTypeIsOutOfRange">
            <summary>
              Looks up a localized string similar to The layer type you have provided is not valid..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.MapEngineCurrentExtentIsNotValid">
            <summary>
              Looks up a localized string similar to The current extent you have provided is not valid..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.MapEngineCurrentExtentIsNull">
            <summary>
              Looks up a localized string similar to The current extent you have provided may not be null..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.MGRSInvalid">
            <summary>
              Looks up a localized string similar to The input MGRS string is invalid..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.MrSidGeoImageSourceIsAlreadyOpen">
            <summary>
              Looks up a localized string similar to The MrSidGeoImageSource is already open..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.MrSidGeoImageSourceIsNotOpen">
            <summary>
              Looks up a localized string similar to The MrSidGeoImageSource is not open.  Please open it before calling this method..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.MultiFieldNamesNotSupportedError">
            <summary>
              Looks up a localized string similar to The format of Multi-FieldNames isn&apos;t correct..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.MultiLineCannotReorderForInputParams">
            <summary>
              Looks up a localized string similar to Can&apos;t Reorder for the multi-line because it does not satisfy the reorder condition based on the given startPoint and given tolerance..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.MultiLineInvalidForReorder">
            <summary>
              Looks up a localized string similar to Can&apos;t Reorder for the multi-line because it does not satisfy the reorder condition based on the given tolerance..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.NotAllValidLayersAreOpen">
            <summary>
              Looks up a localized string similar to Not all valid layers are open..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.NotSupported">
            <summary>
              Looks up a localized string similar to This feature is currently not supported..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.NotSupportedFileType">
            <summary>
              Looks up a localized string similar to The file type you provided is currently not supported..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.NotSupportedSqlQueryMode">
            <summary>
              Looks up a localized string similar to The SQL Query mode is not supported..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.NumberShouldBeByte">
            <summary>
              Looks up a localized string similar to The number should be between 0 and 255.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.ParameterCanNotConvert">
            <summary>
              Looks up a localized string similar to We cannot get the AreaUnit from input unit..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.ParameterIdsIsNotIntegers">
            <summary>
              Looks up a localized string similar to Parameter Ids should be from 1 to the record number in ShapeFileFeatureSource.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.ParameterIsEmpty">
            <summary>
              Looks up a localized string similar to The parameter you supplied may not be empty..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.ParameterIsInvalid">
            <summary>
              Looks up a localized string similar to The shape you provided does not pass our simple validation..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.ParameterIsNull">
            <summary>
              Looks up a localized string similar to The parameter you supplied may not be null..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.ParameterIsTransparent">
            <summary>
              Looks up a localized string similar to The parameter is transparent..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.PrinterLayerGeographyUnitDoesNotSupported">
            <summary>
              Looks up a localized string similar to Printer layer supports Feet or Meter only.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.ProjectionInitializationError">
            <summary>
              Looks up a localized string similar to Projection initialization failed..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.ProjectionInternalGeographyIsUnknown">
            <summary>
              Looks up a localized string similar to Cannot get the projection’s InternalGeographyUnit, please provide it by overriding the Projection’s GetInternalGeographyUnitCore() method..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.ProjectionIsNotOpen">
            <summary>
              Looks up a localized string similar to The projection is not open.  Please open it before calling this method..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.RasterLayerDoesNotHaveProjectionInformation">
            <summary>
              Looks up a localized string similar to This RasterLayer does not have projection information embedded in it.  If you wish to avoid this exception you can first check the HasProjectionTextProperty..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.RasterProjectionNotImplemented">
            <summary>
              Looks up a localized string similar to Convert Raster to Exsternal Projection by default is not implemented, please override this method if needed..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.RasterSourceNotContainsProjectionInformation">
            <summary>
              Looks up a localized string similar to This RasterSource does not have projection information embedded in it.  If you wish to avoid this exception you can first check the HasProjectionTextProperty..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.RebuildDbfFailed">
            <summary>
              Looks up a localized string similar to The rebuild of the DBF failed for an unknown reason.  Please see the inner exception..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.RebuildIdxFailed">
            <summary>
              Looks up a localized string similar to The spatial index generation failed for an unknown reason.    Please see the inner exception..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.RebuildShapeFileFailed">
            <summary>
              Looks up a localized string similar to the rebuilding of the shape file failed for an unknown reason.    Please see the inner exception..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.RecordIsInvalid">
            <summary>
              Looks up a localized string similar to The record is invalid, please call Validate method to check the failed reason..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.ReturnTypeNotCorrect">
            <summary>
              Looks up a localized string similar to This operation&apos;s return type is not correct..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.ReturnValueIsNull">
            <summary>
              Looks up a localized string similar to Return value is null..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.RingShapeIsInvalidForOperationVertexCountLessThan4">
            <summary>
              Looks up a localized string similar to This ring is not closed.  To close a ring the last point must be the same as the first point.  All rings must have at least four points..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.RotateNotSupported">
            <summary>
              Looks up a localized string similar to Rotation is not supported on this class..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.RowNumberExceedTotalRowCount">
            <summary>
              Looks up a localized string similar to The parameter row exceeds the total row count..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.RtreeSpatialIndexIsNotOpen">
            <summary>
              Looks up a localized string similar to The RtreeSpatialIndex is not open.   Please call the Open method before calling this method..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.ShapeFileBoundingBoxIsValid">
            <summary>
              Looks up a localized string similar to The shape file bounding box is invalid..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.ShapefileFeatureSourceIdNotFromZero">
            <summary>
              Looks up a localized string similar to The Shapefile Id is one based, zero is an invalid Id..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.ShapeFileInnerRingNotContainedInOuterRing">
            <summary>
              Looks up a localized string similar to An InnerRing doesn&apos;t contained in any OuterRing. .
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.ShapeFileNameIsInvalid">
            <summary>
              Looks up a localized string similar to The shape file name is invalid..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.ShapeIsInvalidForOperation">
            <summary>
              Looks up a localized string similar to The shape you provided does not pass our simple validation..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.ShapeIsInvalidForValidation">
            <summary>
              Looks up a localized string similar to There are no points in the shape..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.ShapeTypeNotImplement">
            <summary>
              Looks up a localized string similar to This shape has not been implemented yet..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.ShxFileIsNotOpen">
            <summary>
              Looks up a localized string similar to The shape file index is not open..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.SpatialIndexIsNotRemovable">
            <summary>
              Looks up a localized string similar to The features in SpatialIndex are not removable..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.SqlTypesRequired">
            <summary>
              Looks up a localized string similar to To use this method, you have to reference Microsoft.SqlServer.Types.dll, and copy folder[Install-Path]\\Developer Reference\\[Product]\\SqlServerTypes_X64(SqlServerTypes_X86) to System32\\Map Suite *.* folder for x86/x64 platform..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.SridIsInvalid">
            <summary>
              Looks up a localized string similar to Input srid is not valid..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.StreamIsNotWritable">
            <summary>
              Looks up a localized string similar to Stream is not writable..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.StringIsNotBlank">
            <summary>
              Looks up a localized string similar to The input string value is not blank..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.TabIndexFileNotExisted">
            <summary>
              Looks up a localized string similar to The corresponding idx/ids file cannot be found. Please use the static method TabFeatureSource.BuildIndexFile() or TabFeatureLayer.BuildIndexFile() to build the idx/ids file, which can greatly improve the querying performance. If the RequireIndex Property is set to false, the idx/ids files will not be checked and an internal spatial index will be created instead..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.TargetShapeIsNotValidType">
            <summary>
              Looks up a localized string similar to Target Shape Is Not Valid Type..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.TheFieldTtypeShouldBeNumeric">
            <summary>
              Looks up a localized string similar to The field type should be numeric..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.TheFormatOfImageIsNotSupported">
            <summary>
              Looks up a localized string similar to The format of the image is not supported..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.TheValueShouldBeGreaterThanZero">
            <summary>
              Looks up a localized string similar to The value should be greater than zero..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.Unlicensed">
            <summary>
              Looks up a localized string similar to Unlicensed..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.UnsupportedEditingShapeType">
            <summary>
              Looks up a localized string similar to Currently we do not support editing this kind of shape type. Shape type:.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.UpdateTansactionError">
            <summary>
              Looks up a localized string similar to The update transaction failed for an unknown reason..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.UriNotValid">
            <summary>
              Looks up a localized string similar to The input Uri is not valid.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.UseGeoTiffRasterInstead">
            <summary>
              Looks up a localized string similar to The TIFF files(.tif or .tiff) are not supported in GdiPlusRasterSource any longer, please use the GeoTiffRasterSource instead..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.WkbIsInvalid">
            <summary>
              Looks up a localized string similar to The format of the well known binary is incorrect..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.WkbIsNotValidForDrawing">
            <summary>
              Looks up a localized string similar to The well known binary is not valid for drawing..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.WkbTypeError">
            <summary>
              Looks up a localized string similar to The well known binary type is incorrect..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.WktFormatIsWrong">
            <summary>
              Looks up a localized string similar to The format of the well known text is incorrect..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.WmsCRSNotSet">
            <summary>
              Looks up a localized string similar to Coordinate Reference System not set..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.WmsCRSNotSupport">
            <summary>
              Looks up a localized string similar to This CRS is not supported in the Wms server: .
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.WmsGetMapTimeOut">
            <summary>
              Looks up a localized string similar to The Wms server has timed out..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.WmsLayerDoesNotExists">
            <summary>
              Looks up a localized string similar to The Wms request LAYERS parameter is missing..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.WmsNoLayerExists">
            <summary>
              Looks up a localized string similar to No layers exist in the Service Description..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.WmsRequestParaNotExists">
            <summary>
              Looks up a localized string similar to The requested parameter does not exists in this Service Description..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.WmsServerNotSupportFormat">
            <summary>
              Looks up a localized string similar to This image format is not supported in the Wms server: .
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.WmsServerNotSupportLayer">
            <summary>
              Looks up a localized string similar to This layer is not supported in the Wms server: .
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.WmsServerNotSupportStyle">
            <summary>
              Looks up a localized string similar to This style is not supported in the Wms server: .
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.WmsStyleDoesNotExists">
            <summary>
              Looks up a localized string similar to The Wms request STYLES parameter is missing..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.WorldExtentIsNotValid">
            <summary>
              Looks up a localized string similar to The world extent is not valid..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.WorldFileShould6Lines">
            <summary>
              Looks up a localized string similar to World file should has 6 lines..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.WpfCommonGeoImageSourceIsAlreadyOpen">
            <summary>
              Looks up a localized string similar to The ImageSource is already open..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.ExceptionDescription.WpfCommonGeoImageSourceIsNotOpen">
            <summary>
              Looks up a localized string similar to The ImageSource is not opened.  Please open it before calling this method..
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.ByteOrderError">
            <summary>
              Looks up a localized string similar to CPLVerifyConfiguration(): byte order set wrong.\n.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.CPLCallocException">
            <summary>
              Looks up a localized string similar to CPLCalloc(): Out of memory allocating {0:d} bytes.\n.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.CplConvFile">
            <summary>
              Looks up a localized string similar to CplConv.cs.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.CPLCSV">
            <summary>
              Looks up a localized string similar to CPL_CSV.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.CPLDeaccess">
            <summary>
              Looks up a localized string similar to CPLDeaccess( {0} ) - no match..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.CplDebug">
            <summary>
              Looks up a localized string similar to CPL_DEBUG.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.CPLDumpSharedListStr">
            <summary>
              Looks up a localized string similar to {0,2:d} {1} {2,4} {3}.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.CplError">
            <summary>
              Looks up a localized string similar to CPLError.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.CPLErrorFileName">
            <summary>
              Looks up a localized string similar to CPLError.cs.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.CPLErrorLine">
            <summary>
              Looks up a localized string similar to 141.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.CplLogErrors">
            <summary>
              Looks up a localized string similar to CPL_LOG_ERRORS.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.CPLLogFile">
            <summary>
              Looks up a localized string similar to CPL_LOG.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.CplTimeStamp">
            <summary>
              Looks up a localized string similar to CPL_TIMESTAMP.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.CSLLoad">
            <summary>
              Looks up a localized string similar to CSLLoad({0}).
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.DirectoryNotFound">
            <summary>
              Looks up a localized string similar to The specify directory not found.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.DisastrousError">
            <summary>
              Looks up a localized string similar to Disastrous error for current program.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.EnumerationOutOfRange">
            <summary>
              Looks up a localized string similar to The value for the enumeration is not on of the valid values..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.EnumerationOutOfRange1">
            <summary>
              Looks up a localized string similar to The value for the enumeration is not on of the valid values..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.EvaluationExpired">
            <summary>
              Looks up a localized string similar to Evaluation Expired..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.EvaluationExpired1">
            <summary>
              Looks up a localized string similar to Evaluation Expired..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.FailedUnlink">
            <summary>
              Looks up a localized string similar to Failed to unlink {0}.\n.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.FeatureSourceIsNotEditable">
            <summary>
              Looks up a localized string similar to The FeatureSource is not editable..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.FeatureSourceIsNotEditable1">
            <summary>
              Looks up a localized string similar to The FeatureSource is not editable..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.FeatureSourceIsNotInTransaction">
            <summary>
              Looks up a localized string similar to The FeatureSource is not in a transaction..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.FeatureSourceIsNotInTransaction1">
            <summary>
              Looks up a localized string similar to The FeatureSource is not in a transaction..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.FeatureSourceIsNotOpen">
            <summary>
              Looks up a localized string similar to The FeatureSource is not open.   Please call the Open method before calling this method..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.FeatureSourceIsNotOpen1">
            <summary>
              Looks up a localized string similar to The FeatureSource is not open.   Please call the Open method before calling this method..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.FileAlreadyExists">
            <summary>
              Looks up a localized string similar to The file already exists..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.FileAlreadyExists1">
            <summary>
              Looks up a localized string similar to The file already exists..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.FileIsNotExist">
            <summary>
              Looks up a localized string similar to The file specified does not exist..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.FileIsNotExist1">
            <summary>
              Looks up a localized string similar to The file specified does not exist..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.FileNotFound">
            <summary>
              Looks up a localized string similar to The specify file not found,check the filename and path please.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.FileSystemObjNoExist">
            <summary>
              Looks up a localized string similar to It seems no file system object called {0} exists..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.OpenedFileCount">
            <summary>
              Looks up a localized string similar to {0} Shared files open..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.OutOfMemoryError">
            <summary>
              Looks up a localized string similar to CPLMalloc(): Out of memory allocating {0} bytes.\n.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.OutOfRange">
            <summary>
              Looks up a localized string similar to the value out of range.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.ParameterIsNull">
            <summary>
              Looks up a localized string similar to The parameter you supplied may not be null..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.ParameterIsNull1">
            <summary>
              Looks up a localized string similar to The parameter you supplied may not be null..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.ReadFileFailed">
            <summary>
              Looks up a localized string similar to Read of file {0} failed..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.ReallocFail">
            <summary>
              Looks up a localized string similar to CPLRealloc(): Out of memory allocating {0} bytes.\n.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.SillySize">
            <summary>
              Looks up a localized string similar to CPLMalloc({0}): Silly size requested.\n.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.StrFormat">
            <summary>
              Looks up a localized string similar to {0}.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.String">
            <summary>
              Looks up a localized string similar to MitabExceptionDescription.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.SystemError">
            <summary>
              Looks up a localized string similar to The client system is not Win32 system.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.SystemName">
            <summary>
              Looks up a localized string similar to Win32.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.TabFileHandleIsNull">
            <summary>
              Looks up a localized string similar to Please open the tab file before getting the projection information..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.TabFileNameIsInvalid">
            <summary>
              Looks up a localized string similar to The tab file name is invalid..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.TabFileNameIsInvalid1">
            <summary>
              Looks up a localized string similar to The tab file name is invalid..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.TabRelativeFileNotFound">
            <summary>
              Looks up a localized string similar to The {0} file does not exist..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.ThreadSlotError">
            <summary>
              Looks up a localized string similar to Thread Local Store Slot fulled or it over limited.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.UnableFindFile">
            <summary>
              Looks up a localized string similar to Unable to find file handle {0} in CPLCloseShared()..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.UnlinkFailed">
            <summary>
              Looks up a localized string similar to Failed to unlink {0}.\nUnrecognised filesystem object..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.VarSizeError">
            <summary>
              Looks up a localized string similar to sizeof(GInt32) == {0:d} ... yow!\n.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.VSIDebug3VSIOpen">
            <summary>
              Looks up a localized string similar to VSIFOpen({0},{1}) = {2}.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.VSIFRead">
            <summary>
              Looks up a localized string similar to VSIFRead({0},{1}) = {2}.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.VSIFTell">
            <summary>
              Looks up a localized string similar to VSIFTell({0}) = {1}d.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.MitabExceptionDescription.VSIRewind">
            <summary>
              Looks up a localized string similar to VSIRewind({0}).
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.Resources.ClusterTolerenceStatusChanged">
            <summary>
              Looks up a localized string similar to ClusterTolerenceStatusChanged(new object(), e).
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.Resources.Noconvergence">
            <summary>
              Looks up a localized string similar to No convergence in 30 SVDCMP iterations.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.Resources.TooManyJacobi">
            <summary>
              Looks up a localized string similar to Too many iterations in routine jacobi.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.Resources.TotalSteps">
            <summary>
              Looks up a localized string similar to Total steps:.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection">
            <summary>
            Represents an open connection to a SQLite database.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Constructs a new SQLiteConnection and opens a SQLite database specified by databasePath.
            </summary>
            <param name="databasePath">
            Specifies the path to the database file.
            </param>
            <param name="storeDateTimeAsTicks">
            Specifies whether to store DateTime properties as ticks (true) or strings (false). You
            absolutely do want to store them as Ticks in all new projects. The default of false is
            only here for backwards compatibility. There is a *significant* speed advantage, with no
            down sides, when setting storeDateTimeAsTicks = true.
            </param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.#ctor(System.String,ThinkGeo.MapSuite.AndroidEdition.SQLiteOpenFlags,System.String,System.Boolean)">
            <summary>
            Constructs a new SQLiteConnection and opens a SQLite database specified by databasePath.
            </summary>
            <param name="databasePath">
            Specifies the path to the database file.
            </param>
            <param name="storeDateTimeAsTicks">
            Specifies whether to store DateTime properties as ticks (true) or strings (false). You
            absolutely do want to store them as Ticks in all new projects. The default of false is
            only here for backwards compatibility. There is a *significant* speed advantage, with no
            down sides, when setting storeDateTimeAsTicks = true.
            </param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.GetMapping(System.Type,ThinkGeo.MapSuite.AndroidEdition.CreateFlags)">
            <summary>
            Retrieves the mapping that is automatically generated for the given type.
            </summary>
            <param name="type">
            The type whose mapping to the database is returned.
            </param>         
            <param name="createFlags">
            Optional flags allowing implicit PK and indexes based on naming conventions
            </param>     
            <returns>
            The mapping represents the schema of the columns of the database and contains 
            methods to set and get properties of objects.
            </returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.GetMapping``1">
            <summary>
            Retrieves the mapping that is automatically generated for the given type.
            </summary>
            <returns>
            The mapping represents the schema of the columns of the database and contains 
            methods to set and get properties of objects.
            </returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.DropTable``1">
            <summary>
            Executes a "drop table" on the database.  This is non-recoverable.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.CreateTable``1(ThinkGeo.MapSuite.AndroidEdition.CreateFlags)">
            <summary>
            Executes a "create table if not exists" on the database. It also
            creates any specified indexes on the columns of the table. It uses
            a schema automatically generated from the specified type. You can
            later access this schema by calling GetMapping.
            </summary>
            <returns>
            The number of entries added to the database schema.
            </returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.CreateTable(System.Type,ThinkGeo.MapSuite.AndroidEdition.CreateFlags)">
            <summary>
            Executes a "create table if not exists" on the database. It also
            creates any specified indexes on the columns of the table. It uses
            a schema automatically generated from the specified type. You can
            later access this schema by calling GetMapping.
            </summary>
            <param name="ty">Type to reflect to a database table.</param>
            <param name="createFlags">Optional flags allowing implicit PK and indexes based on naming conventions.</param>  
            <returns>
            The number of entries added to the database schema.
            </returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.CreateIndex(System.String,System.String,System.String[],System.Boolean)">
            <summary>
            Creates an index for the specified table and columns.
            </summary>
            <param name="indexName">Name of the index to create</param>
            <param name="tableName">Name of the database table</param>
            <param name="columnNames">An array of column names to index</param>
            <param name="unique">Whether the index should be unique</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.CreateIndex(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Creates an index for the specified table and column.
            </summary>
            <param name="indexName">Name of the index to create</param>
            <param name="tableName">Name of the database table</param>
            <param name="columnName">Name of the column to index</param>
            <param name="unique">Whether the index should be unique</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.CreateIndex(System.String,System.String,System.Boolean)">
            <summary>
            Creates an index for the specified table and column.
            </summary>
            <param name="tableName">Name of the database table</param>
            <param name="columnName">Name of the column to index</param>
            <param name="unique">Whether the index should be unique</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.CreateIndex(System.String,System.String[],System.Boolean)">
            <summary>
            Creates an index for the specified table and columns.
            </summary>
            <param name="tableName">Name of the database table</param>
            <param name="columnNames">An array of column names to index</param>
            <param name="unique">Whether the index should be unique</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.CreateIndex``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Boolean)" -->
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.NewCommand">
            <summary>
            Creates a new SQLiteCommand. Can be overridden to provide a sub-class.
            </summary>
            <seealso cref="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteCommand.OnInstanceCreated(System.Object)"/>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.CreateCommand(System.String,System.Object[])">
            <summary>
            Creates a new SQLiteCommand given the command text with arguments. Place a '?'
            in the command text for each of the arguments.
            </summary>
            <param name="cmdText">
            The fully escaped SQL.
            </param>
            <param name="args">
            Arguments to substitute for the occurences of '?' in the command text.
            </param>
            <returns>
            A <see cref="T:ThinkGeo.MapSuite.AndroidEdition.SQLiteCommand"/>
            </returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.Execute(System.String,System.Object[])">
            <summary>
            Creates a SQLiteCommand given the command text (SQL) with arguments. Place a '?'
            in the command text for each of the arguments and then executes that command.
            Use this method instead of Query when you don't expect rows back. Such cases include
            INSERTs, UPDATEs, and DELETEs.
            You can set the Trace or TimeExecution properties of the connection
            to profile execution.
            </summary>
            <param name="query">
            The fully escaped SQL.
            </param>
            <param name="args">
            Arguments to substitute for the occurences of '?' in the query.
            </param>
            <returns>
            The number of rows modified in the database as a result of this execution.
            </returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.Query``1(System.String,System.Object[])">
            <summary>
            Creates a SQLiteCommand given the command text (SQL) with arguments. Place a '?'
            in the command text for each of the arguments and then executes that command.
            It returns each row of the result using the mapping automatically generated for
            the given type.
            </summary>
            <param name="query">
            The fully escaped SQL.
            </param>
            <param name="args">
            Arguments to substitute for the occurences of '?' in the query.
            </param>
            <returns>
            An enumerable with one result for each row returned by the query.
            </returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.DeferredQuery``1(System.String,System.Object[])">
            <summary>
            Creates a SQLiteCommand given the command text (SQL) with arguments. Place a '?'
            in the command text for each of the arguments and then executes that command.
            It returns each row of the result using the mapping automatically generated for
            the given type.
            </summary>
            <param name="query">
            The fully escaped SQL.
            </param>
            <param name="args">
            Arguments to substitute for the occurences of '?' in the query.
            </param>
            <returns>
            An enumerable with one result for each row returned by the query.
            The enumerator will call sqlite3_step on each call to MoveNext, so the database
            connection must remain open for the lifetime of the enumerator.
            </returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.Query(ThinkGeo.MapSuite.AndroidEdition.TableMapping,System.String,System.Object[])">
            <summary>
            Creates a SQLiteCommand given the command text (SQL) with arguments. Place a '?'
            in the command text for each of the arguments and then executes that command.
            It returns each row of the result using the specified mapping. This function is
            only used by libraries in order to query the database via introspection. It is
            normally not used.
            </summary>
            <param name="map">
            A <see cref="T:ThinkGeo.MapSuite.AndroidEdition.TableMapping"/> to use to convert the resulting rows
            into objects.
            </param>
            <param name="query">
            The fully escaped SQL.
            </param>
            <param name="args">
            Arguments to substitute for the occurences of '?' in the query.
            </param>
            <returns>
            An enumerable with one result for each row returned by the query.
            </returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.DeferredQuery(ThinkGeo.MapSuite.AndroidEdition.TableMapping,System.String,System.Object[])">
            <summary>
            Creates a SQLiteCommand given the command text (SQL) with arguments. Place a '?'
            in the command text for each of the arguments and then executes that command.
            It returns each row of the result using the specified mapping. This function is
            only used by libraries in order to query the database via introspection. It is
            normally not used.
            </summary>
            <param name="map">
            A <see cref="T:ThinkGeo.MapSuite.AndroidEdition.TableMapping"/> to use to convert the resulting rows
            into objects.
            </param>
            <param name="query">
            The fully escaped SQL.
            </param>
            <param name="args">
            Arguments to substitute for the occurences of '?' in the query.
            </param>
            <returns>
            An enumerable with one result for each row returned by the query.
            The enumerator will call sqlite3_step on each call to MoveNext, so the database
            connection must remain open for the lifetime of the enumerator.
            </returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.Table``1">
            <summary>
            Returns a queryable interface to the table represented by the given type.
            </summary>
            <returns>
            A queryable object that is able to translate Where, OrderBy, and Take
            queries into native SQL.
            </returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.Get``1(System.Object)">
            <summary>
            Attempts to retrieve an object with the given primary key from the table
            associated with the specified type. Use of this method requires that
            the given type have a designated PrimaryKey (using the PrimaryKeyAttribute).
            </summary>
            <param name="pk">
            The primary key.
            </param>
            <returns>
            The object with the given primary key. Throws a not found exception
            if the object is not found.
            </returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.Get``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Attempts to retrieve the first object that matches the predicate from the table
            associated with the specified type. 
            </summary>
            <param name="predicate">
            A predicate for which object to find.
            </param>
            <returns>
            The object that matches the given predicate. Throws a not found exception
            if the object is not found.
            </returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.Find``1(System.Object)">
            <summary>
            Attempts to retrieve an object with the given primary key from the table
            associated with the specified type. Use of this method requires that
            the given type have a designated PrimaryKey (using the PrimaryKeyAttribute).
            </summary>
            <param name="pk">
            The primary key.
            </param>
            <returns>
            The object with the given primary key or null
            if the object is not found.
            </returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.Find(System.Object,ThinkGeo.MapSuite.AndroidEdition.TableMapping)">
            <summary>
            Attempts to retrieve an object with the given primary key from the table
            associated with the specified type. Use of this method requires that
            the given type have a designated PrimaryKey (using the PrimaryKeyAttribute).
            </summary>
            <param name="pk">
            The primary key.
            </param>
            <param name="map">
            The TableMapping used to identify the object type.
            </param>
            <returns>
            The object with the given primary key or null
            if the object is not found.
            </returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.Find``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Attempts to retrieve the first object that matches the predicate from the table
            associated with the specified type. 
            </summary>
            <param name="predicate">
            A predicate for which object to find.
            </param>
            <returns>
            The object that matches the given predicate or null
            if the object is not found.
            </returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.FindWithQuery``1(System.String,System.Object[])">
            <summary>
            Attempts to retrieve the first object that matches the query from the table
            associated with the specified type. 
            </summary>
            <param name="query">
            The fully escaped SQL.
            </param>
            <param name="args">
            Arguments to substitute for the occurences of '?' in the query.
            </param>
            <returns>
            The object that matches the given predicate or null
            if the object is not found.
            </returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.BeginTransaction">
            <summary>
            Begins a new transaction. Call <see cref="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.Commit"/> to end the transaction.
            </summary>
            <example cref="T:System.InvalidOperationException">Throws if a transaction has already begun.</example>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.SaveTransactionPoint">
            <summary>
            Creates a savepoint in the database at the current point in the transaction timeline.
            Begins a new transaction if one is not in progress.
            
            Call <see cref="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.RollbackTo(System.String)"/> to undo transactions since the returned savepoint.
            Call <see cref="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.Release(System.String)"/> to commit transactions after the savepoint returned here.
            Call <see cref="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.Commit"/> to end the transaction, committing all changes.
            </summary>
            <returns>A string naming the savepoint.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.Rollback">
            <summary>
            Rolls back the transaction that was begun by <see cref="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.BeginTransaction"/> or <see cref="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.SaveTransactionPoint"/>.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.RollbackTo(System.String)">
            <summary>
            Rolls back the savepoint created by <see cref="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.BeginTransaction"/> or SaveTransactionPoint.
            </summary>
            <param name="savepoint">The name of the savepoint to roll back to, as returned by <see cref="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.SaveTransactionPoint"/>.  If savepoint is null or empty, this method is equivalent to a call to <see cref="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.Rollback"/></param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.RollbackTo(System.String,System.Boolean)">
            <summary>
            Rolls back the transaction that was begun by <see cref="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.BeginTransaction"/>.
            </summary>
            <param name="noThrow">true to avoid throwing exceptions, false otherwise</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.Release(System.String)">
            <summary>
            Releases a savepoint returned from <see cref="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.SaveTransactionPoint"/>.  Releasing a savepoint 
               makes changes since that savepoint permanent if the savepoint began the transaction,
               or otherwise the changes are permanent pending a call to <see cref="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.Commit"/>.
            
            The RELEASE command is like a COMMIT for a SAVEPOINT.
            </summary>
            <param name="savepoint">The name of the savepoint to release.  The string should be the result of a call to <see cref="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.SaveTransactionPoint"/></param>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.Commit">
            <summary>
            Commits the transaction that was begun by <see cref="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.BeginTransaction"/>.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.RunInTransaction(System.Action)" -->
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.InsertAll(System.Collections.IEnumerable)">
            <summary>
            Inserts all specified objects.
            </summary>
            <param name="objects">
            An <see cref="!:IEnumerable"/> of the objects to insert.
            </param>
            <returns>
            The number of rows added to the table.
            </returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.InsertAll(System.Collections.IEnumerable,System.String)">
            <summary>
            Inserts all specified objects.
            </summary>
            <param name="objects">
            An <see cref="!:IEnumerable"/> of the objects to insert.
            </param>
            <param name="extra">
            Literal SQL code that gets placed into the command. INSERT {extra} INTO ...
            </param>
            <returns>
            The number of rows added to the table.
            </returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.InsertAll(System.Collections.IEnumerable,System.Type)">
            <summary>
            Inserts all specified objects.
            </summary>
            <param name="objects">
            An <see cref="!:IEnumerable"/> of the objects to insert.
            </param>
            <param name="objType">
            The type of object to insert.
            </param>
            <returns>
            The number of rows added to the table.
            </returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.Insert(System.Object)">
            <summary>
            Inserts the given object and retrieves its
            auto incremented primary key if it has one.
            </summary>
            <param name="obj">
            The object to insert.
            </param>
            <returns>
            The number of rows added to the table.
            </returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.InsertOrReplace(System.Object)">
            <summary>
            Inserts the given object and retrieves its
            auto incremented primary key if it has one.
            If a UNIQUE constraint violation occurs with
            some pre-existing object, this function deletes
            the old object.
            </summary>
            <param name="obj">
            The object to insert.
            </param>
            <returns>
            The number of rows modified.
            </returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.Insert(System.Object,System.Type)">
            <summary>
            Inserts the given object and retrieves its
            auto incremented primary key if it has one.
            </summary>
            <param name="obj">
            The object to insert.
            </param>
            <param name="objType">
            The type of object to insert.
            </param>
            <returns>
            The number of rows added to the table.
            </returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.InsertOrReplace(System.Object,System.Type)">
            <summary>
            Inserts the given object and retrieves its
            auto incremented primary key if it has one.
            If a UNIQUE constraint violation occurs with
            some pre-existing object, this function deletes
            the old object.
            </summary>
            <param name="obj">
            The object to insert.
            </param>
            <param name="objType">
            The type of object to insert.
            </param>
            <returns>
            The number of rows modified.
            </returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.Insert(System.Object,System.String)">
            <summary>
            Inserts the given object and retrieves its
            auto incremented primary key if it has one.
            </summary>
            <param name="obj">
            The object to insert.
            </param>
            <param name="extra">
            Literal SQL code that gets placed into the command. INSERT {extra} INTO ...
            </param>
            <returns>
            The number of rows added to the table.
            </returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.Insert(System.Object,System.String,System.Type)">
            <summary>
            Inserts the given object and retrieves its
            auto incremented primary key if it has one.
            </summary>
            <param name="obj">
            The object to insert.
            </param>
            <param name="extra">
            Literal SQL code that gets placed into the command. INSERT {extra} INTO ...
            </param>
            <param name="objType">
            The type of object to insert.
            </param>
            <returns>
            The number of rows added to the table.
            </returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.Update(System.Object)">
            <summary>
            Updates all of the columns of a table using the specified object
            except for its primary key.
            The object is required to have a primary key.
            </summary>
            <param name="obj">
            The object to update. It must have a primary key designated using the PrimaryKeyAttribute.
            </param>
            <returns>
            The number of rows updated.
            </returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.Update(System.Object,System.Type)">
            <summary>
            Updates all of the columns of a table using the specified object
            except for its primary key.
            The object is required to have a primary key.
            </summary>
            <param name="obj">
            The object to update. It must have a primary key designated using the PrimaryKeyAttribute.
            </param>
            <param name="objType">
            The type of object to insert.
            </param>
            <returns>
            The number of rows updated.
            </returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.UpdateAll(System.Collections.IEnumerable)">
            <summary>
            Updates all specified objects.
            </summary>
            <param name="objects">
            An <see cref="!:IEnumerable"/> of the objects to insert.
            </param>
            <returns>
            The number of rows modified.
            </returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.Delete(System.Object)">
            <summary>
            Deletes the given object from the database using its primary key.
            </summary>
            <param name="objectToDelete">
            The object to delete. It must have a primary key designated using the PrimaryKeyAttribute.
            </param>
            <returns>
            The number of rows deleted.
            </returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.Delete``1(System.Object)">
            <summary>
            Deletes the object with the specified primary key.
            </summary>
            <param name="primaryKey">
            The primary key of the object to delete.
            </param>
            <returns>
            The number of objects deleted.
            </returns>
            <typeparam name='T'>
            The type of object.
            </typeparam>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.DeleteAll``1">
            <summary>
            Deletes all the objects from the specified table.
            WARNING WARNING: Let me repeat. It deletes ALL the objects from the
            specified table. Do you really want to do that?
            </summary>
            <returns>
            The number of objects deleted.
            </returns>
            <typeparam name='T'>
            The type of objects to delete.
            </typeparam>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.BusyTimeout">
            <summary>
            Sets a busy handler to sleep the specified amount of time when a table is locked.
            The handler will sleep multiple times until a total time of <see cref="P:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.BusyTimeout"/> has accumulated.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.TableMappings">
            <summary>
            Returns the mappings from types to tables that the connection
            currently understands.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.IsInTransaction">
            <summary>
            Whether <see cref="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.BeginTransaction"/> has been called and the database is waiting for a <see cref="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.Commit"/>.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnectionString">
            <summary>
            Represents a parsed connection string.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteCommand.OnInstanceCreated(System.Object)">
             <summary>
             Invoked every time an instance is loaded from the database.
             </summary>
             <param name="obj">
             The newly created object.
             </param>
             <remarks>
             This can be overridden in combination with the <see cref="M:ThinkGeo.MapSuite.AndroidEdition.SQLiteConnection.NewCommand"/>
             method to hook into the life-cycle of objects.
            
             Type safety is not possible because MonoTouch does not support virtual generic methods.
             </remarks>
        </member>
        <member name="T:ThinkGeo.MapSuite.AndroidEdition.PreparedSqlLiteInsertCommand">
            <summary>
            Since the insert never changed, we only need to prepare once.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.AndroidEdition.TableQuery`1.CompileNullBinaryExpression(System.Linq.Expressions.BinaryExpression,ThinkGeo.MapSuite.AndroidEdition.TableQuery{`0}.CompileResult)">
            <summary>
            Compiles a BinaryExpression where one of the parameters is null.
            </summary>
            <param name="parameter">The non-null parameter</param>
        </member>
    </members>
</doc>
